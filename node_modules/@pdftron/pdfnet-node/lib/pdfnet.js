var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(g){var f=0;return function(){return f<g.length?{done:!1,value:g[f++]}:{done:!0}}};$jscomp.arrayIterator=function(g){return{next:$jscomp.arrayIteratorImpl(g)}};$jscomp.makeIterator=function(g){var f="undefined"!=typeof Symbol&&Symbol.iterator&&g[Symbol.iterator];return f?f.call(g):$jscomp.arrayIterator(g)};
$jscomp.getGlobal=function(g){return"undefined"!=typeof window&&window===g?g:"undefined"!=typeof global&&null!=global?global:g};$jscomp.global=$jscomp.getGlobal(this);$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(g,f,k){g!=Array.prototype&&g!=Object.prototype&&(g[f]=k.value)};
$jscomp.polyfill=function(g,f,k,b){if(f){k=$jscomp.global;g=g.split(".");for(b=0;b<g.length-1;b++){var m=g[b];m in k||(k[m]={});k=k[m]}g=g[g.length-1];b=k[g];f=f(b);f!=b&&null!=f&&$jscomp.defineProperty(k,g,{configurable:!0,writable:!0,value:f})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;
$jscomp.polyfill("Promise",function(g){function f(){this.batch_=null}function k(b){return b instanceof m?b:new m(function(f,g){f(b)})}if(g&&!$jscomp.FORCE_POLYFILL_PROMISE)return g;f.prototype.asyncExecute=function(b){if(null==this.batch_){this.batch_=[];var f=this;this.asyncExecuteFunction(function(){f.executeBatch_()})}this.batch_.push(b)};var b=$jscomp.global.setTimeout;f.prototype.asyncExecuteFunction=function(f){b(f,0)};f.prototype.executeBatch_=function(){for(;this.batch_&&this.batch_.length;){var b=
this.batch_;this.batch_=[];for(var f=0;f<b.length;++f){var g=b[f];b[f]=null;try{g()}catch(t){this.asyncThrow_(t)}}}this.batch_=null};f.prototype.asyncThrow_=function(b){this.asyncExecuteFunction(function(){throw b;})};var m=function(b){this.state_=0;this.result_=void 0;this.onSettledCallbacks_=[];var f=this.createResolveAndReject_();try{b(f.resolve,f.reject)}catch(q){f.reject(q)}};m.prototype.createResolveAndReject_=function(){function b(b){return function(l){g||(g=!0,b.call(f,l))}}var f=this,g=!1;
return{resolve:b(this.resolveTo_),reject:b(this.reject_)}};m.prototype.resolveTo_=function(b){if(b===this)this.reject_(new TypeError("A Promise cannot resolve to itself"));else if(b instanceof m)this.settleSameAsPromise_(b);else{a:switch(typeof b){case "object":var f=null!=b;break a;case "function":f=!0;break a;default:f=!1}f?this.resolveToNonPromiseObj_(b):this.fulfill_(b)}};m.prototype.resolveToNonPromiseObj_=function(b){var f=void 0;try{f=b.then}catch(q){this.reject_(q);return}"function"==typeof f?
this.settleSameAsThenable_(f,b):this.fulfill_(b)};m.prototype.reject_=function(b){this.settle_(2,b)};m.prototype.fulfill_=function(b){this.settle_(1,b)};m.prototype.settle_=function(b,f){if(0!=this.state_)throw Error("Cannot settle("+b+", "+f+"): Promise already settled in state"+this.state_);this.state_=b;this.result_=f;this.executeOnSettledCallbacks_()};m.prototype.executeOnSettledCallbacks_=function(){if(null!=this.onSettledCallbacks_){for(var b=0;b<this.onSettledCallbacks_.length;++b)n.asyncExecute(this.onSettledCallbacks_[b]);
this.onSettledCallbacks_=null}};var n=new f;m.prototype.settleSameAsPromise_=function(b){var f=this.createResolveAndReject_();b.callWhenSettled_(f.resolve,f.reject)};m.prototype.settleSameAsThenable_=function(b,f){var g=this.createResolveAndReject_();try{b.call(f,g.resolve,g.reject)}catch(t){g.reject(t)}};m.prototype.then=function(b,f){function g(b,a){return"function"==typeof b?function(a){try{k(b(a))}catch(d){l(d)}}:a}var k,l,p=new m(function(b,a){k=b;l=a});this.callWhenSettled_(g(b,k),g(f,l));return p};
m.prototype.catch=function(b){return this.then(void 0,b)};m.prototype.callWhenSettled_=function(b,f){function g(){switch(k.state_){case 1:b(k.result_);break;case 2:f(k.result_);break;default:throw Error("Unexpected state: "+k.state_);}}var k=this;null==this.onSettledCallbacks_?n.asyncExecute(g):this.onSettledCallbacks_.push(g)};m.resolve=k;m.reject=function(b){return new m(function(f,g){g(b)})};m.race=function(b){return new m(function(f,g){for(var l=$jscomp.makeIterator(b),m=l.next();!m.done;m=l.next())k(m.value).callWhenSettled_(f,
g)})};m.all=function(b){var f=$jscomp.makeIterator(b),g=f.next();return g.done?k([]):new m(function(b,l){function m(c){return function(d){n[c]=d;a--;0==a&&b(n)}}var n=[],a=0;do n.push(void 0),a++,k(g.value).callWhenSettled_(m(n.length-1),l),g=f.next();while(!g.done)})};return m},"es6","es3");
$jscomp.checkStringArgs=function(g,f,k){if(null==g)throw new TypeError("The 'this' value for String.prototype."+k+" must not be null or undefined");if(f instanceof RegExp)throw new TypeError("First argument to String.prototype."+k+" must not be a regular expression");return g+""};
$jscomp.polyfill("String.prototype.startsWith",function(g){return g?g:function(f,g){var b=$jscomp.checkStringArgs(this,f,"startsWith");f+="";var k=b.length,n=f.length;g=Math.max(0,Math.min(g|0,b.length));for(var p=0;p<n&&g<k;)if(b[g++]!=f[p++])return!1;return p>=n}},"es6","es3");
$jscomp.polyfill("String.prototype.endsWith",function(g){return g?g:function(f,g){var b=$jscomp.checkStringArgs(this,f,"endsWith");f+="";void 0===g&&(g=b.length);g=Math.max(0,Math.min(g|0,b.length));for(var k=f.length;0<k&&0<g;)if(b[--g]!=f[--k])return!1;return 0>=k}},"es6","es3");
(function(g){g.MessageHandler=function(f,k){this.name=f;this.comObj=k;this.callbackIndex=1;this.postMessageTransfers=!0;this.callbacksCapabilities={};f=this.actionHandler={};this.actionHandlerAsync={};this.nextAsync=null;f.console_log=[function(b){g.utils.log(b)}];f.console_error=[function(b){g.utils.error(b)}];f.workerLoaded=[function(b){}];k.addEventListener("message",this.handleMessage.bind(this))};g.MessageHandler.prototype={on:function(f,k,b){var m=this.actionHandler;m[f]&&g.utils.error('There is already an actionName called "'+
f+'"');m[f]=[k,b]},replace:function(f,g,b){this.actionHandler[f]=[g,b]},onAsync:function(f,k,b){var m=this.actionHandlerAsync;m[f]&&g.utils.error('There is already an actionName called "'+f+'"');m[f]=[k,b]},replaceAsync:function(f,g,b){var k=this.actionHandlerAsync,n=this.actionHandler;n[f]&&delete n[f];k[f]=[g,b]},onNextAsync:function(f){this.nextAsync=f},send:function(f,g){this.postMessage({action:f,data:g})},getNextId:function(){return this.callbackIndex++},sendWithPromise:function(f,g,b){var k=
this.getNextId();f={action:f,data:g,callbackId:k,priority:b};g=createPromiseCapability();this.callbacksCapabilities[k]=g;try{this.postMessage(f)}catch(n){g.reject(n)}return g.promise},sendWithPromiseReturnId:function(f,g,b){var k=this.getNextId();f={action:f,data:g,callbackId:k,priority:b};g=createPromiseCapability();this.callbacksCapabilities[k]=g;try{this.postMessage(f)}catch(n){g.reject(n)}return{promise:g.promise,callbackId:k}},sendWithPromiseWithId:function(f,k,b,m){k>this.callbackIndex&&g.utils.error("Can't reuse callbackId "+
k+" lesser than callbackIndex "+this.callbackIndex);k in this.callbacksCapabilities&&g.utils.error("Can't reuse callbackId "+k+". There is a capability waiting to be resolved. ");f={action:f,data:b,callbackId:k};b=createPromiseCapability();this.callbacksCapabilities[k]=b;try{this.postMessage(f)}catch(n){b.reject(n)}return b.promise},sendError:function(f,g){if(f.message||f.errorData){f.message&&f.message.message&&(f.message=f.message.message);var b=f.errorData;f={type:f.type?f.type:"JavascriptError",
message:f.message};if(b)for(var k in b)b.hasOwnProperty(k)&&(f[k]=b[k])}this.postMessage({isReply:!0,callbackId:g,error:f})},getPromise:function(f){if(f in this.callbacksCapabilities)return this.callbacksCapabilities[f];g.utils.error("Cannot get promise for callback "+f)},cancelPromise:function(f){if(f in this.callbacksCapabilities){var k=this.callbacksCapabilities[f];delete this.callbacksCapabilities[f];k.reject({type:"Cancelled",message:"Request has been cancelled."});this.postMessage({action:"actionCancel",
data:{callbackId:f}})}else g.utils.warn("Cannot cancel callback "+f)},postMessage:function(f){if(this.postMessageTransfers){var g=this.getTransfersArray(f);this.comObj.postMessage(f,g)}else this.comObj.postMessage(f)},getObjectTransfers:function(f,g){if("object"===typeof f)if(f instanceof Uint8Array)g.push(f.buffer);else if(f instanceof ArrayBuffer)g.push(f);else for(var b in f)f.hasOwnProperty(b)&&this.getObjectTransfers(f[b],g)},getTransfersArray:function(f){var g=[];this.getObjectTransfers(f,g);
return 0===g.length?void 0:g},handleMessage:function(f){var k=this,b=f.data,m=this.actionHandler,n=this.actionHandlerAsync;f=this.callbacksCapabilities;if(b.isReply)m=b.callbackId,m in f?(n=f[m],delete f[m],"error"in b?n.reject(b.error):n.resolve(b.data)):g.utils.warn("Cannot resolve callback "+m);else if(b.action in m){var p=m[b.action];b.callbackId?Promise.resolve().then(function(){return p[0].call(p[1],b.data)}).then(function(f){k.postMessage({isReply:!0,callbackId:b.callbackId,data:f})},function(f){k.sendError(f,
b.callbackId)}):p[0].call(p[1],b.data)}else b.action in n?(p=n[b.action],b.callbackId?p[0].call(p[1],b).then(function(f){k.postMessage({isReply:!0,callbackId:b.callbackId,data:f});k.nextAsync()},function(f){k.sendError(f,b.callbackId);k.nextAsync()}):p[0].call(p[1],b).then(function(){k.nextAsync()},function(){k.nextAsync()})):g.utils.error("Unknown action from worker: "+b.action)}}})("undefined"===typeof window?this:window);(function(g){g.utils=g.utils||{};g.utils.isJSWorker=!0;g.utils.isNodeJS=!0;g.jsworker={loadWorker:function(){var f=require("./addon");f.getWorkerType=function(){return"node"};return f},utils:{getResourcesDir:function(f){f(null,"./pdfnet.res")}}}})("undefined"===typeof window?this:window);var XMLHttpRequest=require("xhr2").XMLHttpRequest;
(function(g){function f(){return{putNumber:function(a,b,d){a[b]=0+d},jsColorToNumber:function(a){return 16777216*Math.floor(a.A)+65536*Math.floor(a.R)+256*Math.floor(a.G)+Math.floor(a.B)},jsColorFromNumber:function(a){return{A:5.9604644775390625E-8*a&255,R:((a|0)&16711680)>>>16,G:((a|0)&65280)>>>8,B:(a|0)&255}}}}function k(a){function b(c){c=a.next(c);var d=c.value;return c.done?c.value:d.then(b)}return Promise.resolve().then(b)}var b=g.PDFNet?g.PDFNet:{};b.Convert=g.PDFNet&&g.PDFNet.Convert?g.PDFNet.Convert:
{};b.Optimizer={};g.CoreControls&&g.CoreControls.enableFullPDF(!0);g.isArrayBuffer=function(a){return a instanceof ArrayBuffer||null!=a&&null!=a.constructor&&"ArrayBuffer"===a.constructor.name&&"number"===typeof a.byteLength};b.createDiffOptions=function(){return Promise.resolve(new b.DiffOptions)};b.DiffOptions=function(){this.mImpl={};this.mHelpers=f()};b.DiffOptions.prototype.getAddGroupAnnots=function(){return"AddGroupAnnots"in this.mImpl?!!this.mImpl.AddGroupAnnots:!1};b.DiffOptions.prototype.setAddGroupAnnots=
function(a){this.mHelpers.putBool(this.mImpl,"AddGroupAnnots",a);return this};b.DiffOptions.prototype.getBlendMode=function(){return"BlendMode"in this.mImpl?this.mImpl.BlendMode:5};b.DiffOptions.prototype.setBlendMode=function(a){this.mHelpers.putNumber(this.mImpl,"BlendMode",a);return this};b.DiffOptions.prototype.getColorA=function(){return"ColorA"in this.mImpl?this.mHelpers.jsColorFromNumber(this.mImpl.ColorA):this.mHelpers.jsColorFromNumber(4291559424)};b.DiffOptions.prototype.setColorA=function(a){this.mHelpers.putNumber(this.mImpl,
"ColorA",this.mHelpers.jsColorToNumber(a));return this};b.DiffOptions.prototype.getColorB=function(){return"ColorB"in this.mImpl?this.mHelpers.jsColorFromNumber(this.mImpl.ColorB):this.mHelpers.jsColorFromNumber(4278242508)};b.DiffOptions.prototype.setColorB=function(a){this.mHelpers.putNumber(this.mImpl,"ColorB",this.mHelpers.jsColorToNumber(a));return this};b.DiffOptions.prototype.getJsonString=function(){return JSON.stringify(this.mImpl)};b.Action=function(a){this.name="Action";this.id=a};b.ActionParameter=
function(a){this.name="ActionParameter";this.id=a};b.Annot=function(a){this.name="Annot";this.id=a};b.AnnotBorderStyle=function(a){this.name="AnnotBorderStyle";this.id=a};b.AppearanceReferenceList=function(a){this.name="AppearanceReferenceList";this.id=a};b.AttrObj=function(a){this.name="AttrObj";this.id=a};b.Bookmark=function(a){this.name="Bookmark";this.id=a};b.CADModule=function(a){this.name="CADModule";this.id=a};b.CaretAnnot=function(a){this.name="CaretAnnot";this.id=a};b.CheckBoxWidget=function(a){this.name=
"CheckBoxWidget";this.id=a};b.ChunkRenderer=function(a){this.name="ChunkRenderer";this.id=a};b.CircleAnnot=function(a){this.name="CircleAnnot";this.id=a};b.ClassMap=function(a){this.name="ClassMap";this.id=a};b.ColorPt=function(a){this.name="ColorPt";this.id=a};b.ColorSpace=function(a){this.name="ColorSpace";this.id=a};b.ComboBoxWidget=function(a){this.name="ComboBoxWidget";this.id=a};b.ContentItem=function(a,c){this.name="ContentItem";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===
typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.ContentItem({o:a,p:c})};b.ContentReplacer=function(a){this.name="ContentReplacer";this.id=a};b.ConversionMonitor=function(a){this.name="ConversionMonitor";this.id=a};b.Date=function(a,c,d,e,h,f,g,k,m,n){this.name="Date";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof h&&(h=0),"undefined"===typeof f&&(f=
0),"undefined"===typeof g&&(g=0),"undefined"===typeof k&&(k=0),"undefined"===typeof m&&(m=0),"undefined"===typeof n&&(n="0"),new b.Date({year:a,month:c,day:d,hour:e,minute:h,second:f,UT:g,UT_hour:k,UT_minutes:m,mp_obj:n})};b.Destination=function(a){this.name="Destination";this.id=a};b.DictIterator=function(a){this.name="DictIterator";this.id=a};b.DigestAlgorithm=function(a){this.name="DigestAlgorithm";this.id=a};b.DigitalSignatureField=function(a){this.name="DigitalSignatureField";if("object"===typeof a)l(a,
this);else if("undefined"!==typeof a)return new b.DigitalSignatureField({mp_field_dict_obj:a})};b.DisallowedChange=function(a){this.name="DisallowedChange";this.id=a};b.DocSnapshot=function(a){this.name="DocSnapshot";this.id=a};b.DocumentConversion=function(a){this.name="DocumentConversion";this.id=a};b.Element=function(a){this.name="Element";this.id=a};b.ElementBuilder=function(a){this.name="ElementBuilder";this.id=a};b.ElementReader=function(a){this.name="ElementReader";this.id=a};b.ElementWriter=
function(a){this.name="ElementWriter";this.id=a};b.FDFDoc=function(a){this.name="FDFDoc";this.id=a};b.FDFField=function(a,c){this.name="FDFField";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.FDFField({mp_leaf_node:a,mp_root_array:c})};b.Field=function(a,c){this.name="Field";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.Field({leaf_node:a,builder:c})};
b.FileAttachmentAnnot=function(a){this.name="FileAttachmentAnnot";this.id=a};b.FileSpec=function(a){this.name="FileSpec";this.id=a};b.Filter=function(a){this.name="Filter";this.id=a};b.FilterReader=function(a){this.name="FilterReader";this.id=a};b.FilterWriter=function(a){this.name="FilterWriter";this.id=a};b.Flattener=function(a){this.name="Flattener";this.id=a};b.Font=function(a){this.name="Font";this.id=a};b.FreeTextAnnot=function(a){this.name="FreeTextAnnot";this.id=a};b.Function=function(a){this.name=
"Function";this.id=a};b.GState=function(a){this.name="GState";this.id=a};b.GeometryCollection=function(a){this.name="GeometryCollection";this.id=a};b.HTML2PDF=function(a){this.name="HTML2PDF";this.id=a};b.HTML2PDF.Proxy=function(a){this.name="HTML2PDF.Proxy";this.id=a};b.HTML2PDF.TOCSettings=function(a){this.name="HTML2PDF.TOCSettings";this.id=a};b.HTML2PDF.WebPageSettings=function(a){this.name="HTML2PDF.WebPageSettings";this.id=a};b.HighlightAnnot=function(a){this.name="HighlightAnnot";this.id=a};
b.Highlights=function(a){this.name="Highlights";this.id=a};b.Image=function(a){this.name="Image";this.id=a};b.InkAnnot=function(a){this.name="InkAnnot";this.id=a};b.Iterator=function(a,b){this.name="Iterator";this.id=a;this.type=b};b.KeyStrokeActionResult=function(a){this.name="KeyStrokeActionResult";this.id=a};b.KeyStrokeEventData=function(a){this.name="KeyStrokeEventData";this.id=a};b.LineAnnot=function(a){this.name="LineAnnot";this.id=a};b.LinkAnnot=function(a){this.name="LinkAnnot";this.id=a};
b.ListBoxWidget=function(a){this.name="ListBoxWidget";this.id=a};b.MarkupAnnot=function(a){this.name="MarkupAnnot";this.id=a};b.Matrix2D=function(a,c,d,e,h,f){this.name="Matrix2D";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof h&&(h=0),"undefined"===typeof f&&(f=0),new b.Matrix2D({m_a:a,m_b:c,m_c:d,m_d:e,m_h:h,m_v:f})};b.MovieAnnot=function(a){this.name="MovieAnnot";
this.id=a};b.NameTree=function(a){this.name="NameTree";this.id=a};b.NumberTree=function(a){this.name="NumberTree";this.id=a};b.OCG=function(a){this.name="OCG";this.id=a};b.OCGConfig=function(a){this.name="OCGConfig";this.id=a};b.OCGContext=function(a){this.name="OCGContext";this.id=a};b.OCMD=function(a){this.name="OCMD";this.id=a};b.OCRModule=function(a){this.name="OCRModule";this.id=a};b.Obj=function(a){this.name="Obj";this.id=a};b.ObjSet=function(a){this.name="ObjSet";this.id=a};b.OwnedBitmap=function(a){this.name=
"OwnedBitmap";this.id=a};b.PDFACompliance=function(a){this.name="PDFACompliance";this.id=a};b.PDFDC=function(a){this.name="PDFDC";this.id=a};b.PDFDCEX=function(a){this.name="PDFDCEX";this.id=a};b.PDFDoc=function(a){this.name="PDFDoc";this.id=a};b.PDFDocInfo=function(a){this.name="PDFDocInfo";this.id=a};b.PDFDocViewPrefs=function(a){this.name="PDFDocViewPrefs";this.id=a};b.PDFDraw=function(a){this.name="PDFDraw";this.id=a};b.PDFRasterizer=function(a){this.name="PDFRasterizer";this.id=a};b.PDFView=
function(a){this.name="PDFView";this.id=a};b.PDFViewCtrl=function(a){this.name="PDFViewCtrl";this.id=a};b.Page=function(a){this.name="Page";this.id=a};b.PageLabel=function(a,c,d){this.name="PageLabel";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),new b.PageLabel({mp_obj:a,m_first_page:c,m_last_page:d})};b.PageSet=function(a){this.name="PageSet";this.id=a};b.PatternColor=function(a){this.name="PatternColor";
this.id=a};b.PolyLineAnnot=function(a){this.name="PolyLineAnnot";this.id=a};b.PolygonAnnot=function(a){this.name="PolygonAnnot";this.id=a};b.PopupAnnot=function(a){this.name="PopupAnnot";this.id=a};b.PrinterMode=function(a){this.name="PrinterMode";this.id=a};b.ProgressMonitor=function(a){this.name="ProgressMonitor";this.id=a};b.PushButtonWidget=function(a){this.name="PushButtonWidget";this.id=a};b.RadioButtonGroup=function(a){this.name="RadioButtonGroup";this.id=a};b.RadioButtonWidget=function(a){this.name=
"RadioButtonWidget";this.id=a};b.Rect=function(a,c,d,e,h){this.name="Rect";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof h&&(h="0"),new b.Rect({x1:a,y1:c,x2:d,y2:e,mp_rect:h})};b.Redaction=function(a){this.name="Redaction";this.id=a};b.RedactionAnnot=function(a){this.name="RedactionAnnot";this.id=a};b.Redactor=function(a){this.name="Redactor";this.id=a};
b.ResultSnapshot=function(a){this.name="ResultSnapshot";this.id=a};b.RoleMap=function(a){this.name="RoleMap";this.id=a};b.RubberStampAnnot=function(a){this.name="RubberStampAnnot";this.id=a};b.SDFDoc=function(a){this.name="SDFDoc";this.id=a};b.SElement=function(a,c){this.name="SElement";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.SElement({obj:a,k:c})};b.STree=function(a){this.name="STree";this.id=a};b.ScreenAnnot=function(a){this.name=
"ScreenAnnot";this.id=a};b.SecurityHandler=function(a){this.name="SecurityHandler";this.id=a};b.Shading=function(a){this.name="Shading";this.id=a};b.SignatureHandler=function(a){this.name="SignatureHandler";this.id=a};b.SignatureWidget=function(a){this.name="SignatureWidget";this.id=a};b.SoundAnnot=function(a){this.name="SoundAnnot";this.id=a};b.SquareAnnot=function(a){this.name="SquareAnnot";this.id=a};b.SquigglyAnnot=function(a){this.name="SquigglyAnnot";this.id=a};b.Stamper=function(a){this.name=
"Stamper";this.id=a};b.StrikeOutAnnot=function(a){this.name="StrikeOutAnnot";this.id=a};b.TextAnnot=function(a){this.name="TextAnnot";this.id=a};b.TextExtractor=function(a){this.name="TextExtractor";this.id=a};b.TextExtractorLine=function(a,c,d,e,h,f){this.name="TextExtractorLine";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof h&&(h=0),"undefined"===typeof f&&
(f="0"),new b.TextExtractorLine({line:a,uni:c,num:d,cur_num:e,m_direction:h,mp_bld:f})};b.TextExtractorStyle=function(a){this.name="TextExtractorStyle";if("object"===typeof a)l(a,this);else if("undefined"!==typeof a)return new b.TextExtractorStyle({mp_imp:a})};b.TextExtractorWord=function(a,c,d,e,h,f,g){this.name="TextExtractorWord";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),"undefined"===typeof d&&(d="0"),"undefined"===typeof e&&
(e="0"),"undefined"===typeof h&&(h=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g="0"),new b.TextExtractorWord({line:a,word:c,end:d,uni:e,num:h,cur_num:f,mp_bld:g})};b.TextMarkupAnnot=function(a){this.name="TextMarkupAnnot";this.id=a};b.TextSearch=function(a){this.name="TextSearch";this.id=a};b.TextWidget=function(a){this.name="TextWidget";this.id=a};b.TrustVerificationResult=function(a){this.name="TrustVerificationResult";this.id=a};b.UnderlineAnnot=function(a){this.name="UnderlineAnnot";
this.id=a};b.UndoManager=function(a){this.name="UndoManager";this.id=a};b.VerificationOptions=function(a){this.name="VerificationOptions";this.id=a};b.VerificationResult=function(a){this.name="VerificationResult";this.id=a};b.ViewChangeCollection=function(a){this.name="ViewChangeCollection";this.id=a};b.WatermarkAnnot=function(a){this.name="WatermarkAnnot";this.id=a};b.WidgetAnnot=function(a){this.name="WidgetAnnot";this.id=a};b.QuadPoint=function(a,c,d,e,h,f,g,k){this.name="QuadPoint";if(a&&"undefined"===
typeof c)l(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof h&&(h=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g=0),"undefined"===typeof k&&(k=0),new b.QuadPoint({p1x:a,p1y:c,p2x:d,p2y:e,p3x:h,p3y:f,p4x:g,p4y:k})};b.Point=function(a,c){this.name="Point";if(a&&"undefined"===typeof c)l(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),new b.Point({x:a,
y:c})};b.Optimizer.createImageSettings=function(){return Promise.resolve(new b.Optimizer.ImageSettings)};b.Optimizer.ImageSettings=function(){this.m_max_pixels=4294967295;this.m_max_dpi=225;this.m_resample_dpi=150;this.m_quality=5;this.m_compression_mode=b.Optimizer.ImageSettings.CompressionMode.e_retain;this.m_downsample_mode=b.Optimizer.ImageSettings.DownsampleMode.e_default;this.m_force_changes=this.m_force_recompression=!1};b.Optimizer.ImageSettings.prototype.setImageDPI=function(a,b){this.m_max_dpi=
a;this.m_resample_dpi=b;return this};b.Optimizer.ImageSettings.prototype.setCompressionMode=function(a){this.m_compression_mode=a;return this};b.Optimizer.ImageSettings.prototype.setDownsampleMode=function(a){this.m_downsample_mode=a;return this};b.Optimizer.ImageSettings.prototype.setQuality=function(a){this.m_quality=a;return this};b.Optimizer.ImageSettings.prototype.forceRecompression=function(a){this.m_force_recompression=a;return this};b.Optimizer.ImageSettings.prototype.forceChanges=function(a){this.m_force_changes=
a;return this};b.Optimizer.createMonoImageSettings=function(){return Promise.resolve(new b.Optimizer.MonoImageSettings)};b.Optimizer.MonoImageSettings=function(){this.m_max_pixels=4294967295;this.m_max_dpi=450;this.m_resample_dpi=300;this.m_jbig2_threshold=8.5;this.m_compression_mode=b.Optimizer.ImageSettings.CompressionMode.e_retain;this.m_downsample_mode=b.Optimizer.ImageSettings.DownsampleMode.e_default;this.m_force_changes=this.m_force_recompression=!1};b.Optimizer.MonoImageSettings.prototype.setImageDPI=
function(a,b){this.m_max_dpi=a;this.m_resample_dpi=b;return this};b.Optimizer.MonoImageSettings.prototype.setCompressionMode=function(a){this.m_compression_mode=a;return this};b.Optimizer.MonoImageSettings.prototype.setDownsampleMode=function(a){this.m_downsample_mode=a;return this};b.Optimizer.MonoImageSettings.prototype.setJBIG2Threshold=function(a){this.m_jbig2_threshold=quality;return this};b.Optimizer.MonoImageSettings.prototype.forceRecompression=function(a){this.m_force_recompression=a;return this};
b.Optimizer.MonoImageSettings.prototype.forceChanges=function(a){this.m_force_changes=a;return this};b.Optimizer.createTextSettings=function(){return Promise.resolve(new b.Optimizer.TextSettings)};b.Optimizer.TextSettings=function(){this.m_embed_fonts=this.m_subset_fonts=!1};b.Optimizer.TextSettings.prototype.subsetFonts=function(a){this.m_subset_fonts=a;return this};b.Optimizer.TextSettings.prototype.embedFonts=function(a){this.m_embed_fonts=a;return this};b.Optimizer.createOptimizerSettings=function(){return Promise.resolve(new b.Optimizer.OptimizerSettings)};
b.Optimizer.OptimizerSettings=function(){this.color_image_settings=new b.Optimizer.ImageSettings;this.grayscale_image_settings=new b.Optimizer.ImageSettings;this.mono_image_settings=new b.Optimizer.MonoImageSettings;this.text_settings=new b.Optimizer.TextSettings;this.remove_custom=!0};b.Optimizer.OptimizerSettings.prototype.setColorImageSettings=function(a){this.color_image_settings=a;return this};b.Optimizer.OptimizerSettings.prototype.setGrayscaleImageSettings=function(a){this.grayscale_image_settings=
a;return this};b.Optimizer.OptimizerSettings.prototype.setMonoImageSettings=function(a){this.mono_image_settings=a;return this};b.Optimizer.OptimizerSettings.prototype.setTextSettings=function(a){this.text_settings=a;return this};b.Optimizer.OptimizerSettings.prototype.removeCustomEntries=function(a){this.remove_custom=a;return this};b.Optimizer.ImageSettings.CompressionMode={e_retain:0,e_flate:1,e_jpeg:2,e_jpeg2000:3,e_none:4};b.Optimizer.ImageSettings.DownsampleMode={e_off:0,e_default:1};b.Optimizer.MonoImageSettings.CompressionMode=
{e_jbig2:0,e_flate:1,e_none:2};b.Optimizer.MonoImageSettings.DownsampleMode={e_off:0,e_default:1};b.Convert.ConversionOptions=function(){};b.Convert.createOfficeToPDFOptions=function(){return Promise.resolve(new b.Convert.OfficeToPDFOptions)};b.Convert.OfficeToPDFOptions=function(){this.name="PDFNet.Convert.ConversionOptions"};b.Convert.OfficeToPDFOptions.prototype.setLayoutResourcesPluginPath=function(a){this.LayoutResourcesPluginPath=a;return this};b.Convert.OfficeToPDFOptions.prototype.setResourceDocPath=
function(a){this.ResourceDocPath=a;return this};b.Convert.OfficeToPDFOptions.prototype.setSmartSubstitutionPluginPath=function(a){this.SmartSubstitutionPluginPath=a;return this};b.Convert.OfficeToPDFOptions.prototype.setExcelDefaultCellBorderWidth=function(a){this.ExcelDefaultCellBorderWidth=a;return this};b.Convert.createTiffOutputOptions=function(){return Promise.resolve(new b.Convert.TiffOutputOptions)};b.Convert.TiffOutputOptions=function(){this.name="PDFNet.Convert.TiffOutputOptions"};b.Convert.TiffOutputOptions.prototype.setBox=
function(a){switch(a){case b.Page.Box.e_media:this.BOX="media";break;case b.Page.Box.e_crop:this.BOX="crop";break;case b.Page.Box.e_bleed:this.BOX="bleed";break;case b.Page.Box.e_trim:this.BOX="trim";break;case b.Page.Box.e_art:this.BOX="art";break;default:console.log("unrecognized PDFNet.Page.Box type: "+a)}return this};b.Convert.TiffOutputOptions.prototype.setRotate=function(a){switch(a){case b.Page.Box.e_0:this.ROTATE="0";break;case b.Page.Box.e_90:this.ROTATE="90";break;case b.Page.Box.e_180:this.ROTATE=
"180";break;case b.Page.Box.e_270:this.ROTATE="270";break;default:console.log("unrecognized PDFNet.Page.Rotate type: "+a)}return this};b.Convert.TiffOutputOptions.prototype.setClip=function(a,b,d,e){this.CLIP_X1=a;this.CLIP_Y1=b;this.CLIP_X2=d;this.CLIP_Y2=e;return this};b.Convert.TiffOutputOptions.prototype.setPages=function(a){this.PAGES=a;return this};b.Convert.TiffOutputOptions.prototype.setOverprint=function(a){switch(a){case b.PDFRasterizer.OverprintPreviewMode.e_op_off:this.OVERPRINT_MODE=
"OFF";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_on:this.OVERPRINT_MODE="ON";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_pdfx_on:this.OVERPRINT_MODE="PDFX";break;default:console.log("unrecognized PDFNet.PDFRasterizer.OverprintPreviewMode type: "+a)}return this};b.Convert.TiffOutputOptions.prototype.setCMYK=function(a){this.CMYK=a;return this};b.Convert.TiffOutputOptions.prototype.setDither=function(a){this.DITHER=a;return this};b.Convert.TiffOutputOptions.prototype.setGray=function(a){this.GRAY=
a;return this};b.Convert.TiffOutputOptions.prototype.setMono=function(a){this.MONO=a;return this};b.Convert.TiffOutputOptions.prototype.setAnnots=function(a){this.ANNOTS=a;return this};b.Convert.TiffOutputOptions.prototype.setSmooth=function(a){this.SMOOTH=a;return this};b.Convert.TiffOutputOptions.prototype.setPrintmode=function(a){this.PRINTMODE=a;return this};b.Convert.TiffOutputOptions.prototype.setTransparentPage=function(a){this.TRANSPARENT_PAGE=a;return this};b.Convert.TiffOutputOptions.prototype.setPalettized=
function(a){this.PALETTIZED=a;return this};b.Convert.TiffOutputOptions.prototype.setDPI=function(a){this.DPI=a;return this};b.Convert.TiffOutputOptions.prototype.setGamma=function(a){this.GAMMA=a;return this};b.Convert.TiffOutputOptions.prototype.setHRes=function(a){this.HRES=a;return this};b.Convert.TiffOutputOptions.prototype.setVRes=function(a){this.VRES=a;return this};b.Convert.OverprintPreviewMode={e_op_off:0,e_op_on:1,e_op_pdfx_on:2};b.Convert.XPSOutputCommonOptions=function(){this.name="PDFNet.Convert.XPSOutputCommonOptions"};
b.Convert.XPSOutputCommonOptions.prototype.setPrintMode=function(a){this.PRINTMODE=a;return this};b.Convert.XPSOutputCommonOptions.prototype.setDPI=function(a){this.DPI=a;return this};b.Convert.XPSOutputCommonOptions.prototype.setRenderPages=function(a){this.RENDER=a;return this};b.Convert.XPSOutputCommonOptions.prototype.setThickenLines=function(a){this.THICKENLINES=a;return this};b.Convert.XPSOutputCommonOptions.prototype.generateURLLinks=function(a){this.URL_LINKS=a;return this};b.Convert.XPSOutputCommonOptions.prototype.setOverprint=
function(a){switch(a){case b.Convert.OverprintPreviewMode.e_op_off:this.OVERPRINT_MODE="OFF";break;case b.Convert.OverprintPreviewMode.e_op_on:this.OVERPRINT_MODE="ON";break;case b.Convert.OverprintPreviewMode.e_op_pdfx_on:this.OVERPRINT_MODE="PDFX";break;default:console.log("unrecognized PDFNet.Convert.OverprintPreviewMode type: "+a)}return this};b.Convert.createXPSOutputOptions=function(){return Promise.resolve(new b.Convert.XPSOutputOptions)};b.Convert.XPSOutputOptions=function(){this.name="PDFNet.Convert.XPSOutputOptions"};
b.Convert.XPSOutputOptions.prototype=Object.create(b.Convert.XPSOutputCommonOptions.prototype);b.Convert.XPSOutputOptions.prototype.setOpenXps=function(a){this.OPENXPS=a;return this};b.Convert.FlattenFlag={e_off:0,e_simple:1,e_fast:2,e_high_quality:3};b.Convert.FlattenThresholdFlag={e_very_strict:0,e_strict:1,e_default:2,e_keep_most:3,e_keep_all:4};b.Convert.AnnotationOutputFlag={e_internal_xfdf:0,e_external_xfdf:1,e_flatten:2};b.Convert.createXODOutputOptions=function(){return Promise.resolve(new b.Convert.XODOutputOptions)};
b.Convert.XODOutputOptions=function(){this.name="PDFNet.Convert.XODOutputOptions"};b.Convert.XODOutputOptions.prototype=Object.create(b.Convert.XPSOutputCommonOptions.prototype);b.Convert.XODOutputOptions.prototype.setOutputThumbnails=function(a){this.NOTHUMBS=a;return this};b.Convert.XODOutputOptions.prototype.setOutputThumbnails=function(a){this.NOTHUMBS=a;return this};b.Convert.XODOutputOptions.prototype.setThumbnailSize=function(a,b){this.THUMB_SIZE=a;this.LARGE_THUMB_SIZE=b?b:a;return this};
b.Convert.XODOutputOptions.prototype.setElementLimit=function(a){this.ELEMENTLIMIT=a;return this};b.Convert.XODOutputOptions.prototype.setOpacityMaskWorkaround=function(a){this.MASKRENDER=a;return this};b.Convert.XODOutputOptions.prototype.setMaximumImagePixels=function(a){this.MAX_IMAGE_PIXELS=a;return this};b.Convert.XODOutputOptions.prototype.setFlattenContent=function(a){switch(a){case b.Convert.FlattenFlag.e_off:this.FLATTEN_CONTENT="OFF";break;case b.Convert.FlattenFlag.e_simple:this.FLATTEN_CONTENT=
"SIMPLE";break;case b.Convert.FlattenFlag.e_fast:this.FLATTEN_CONTENT="FAST";break;case b.Convert.FlattenFlag.e_high_quality:this.FLATTEN_CONTENT="HIGH_QUALITY";break;default:console.log("unrecognized PDFNet.Convert.FlattenFlag type: "+a)}return this};b.Convert.XODOutputOptions.prototype.setFlattenThreshold=function(a){switch(a){case b.Convert.FlattenThresholdFlag.e_very_strict:this.FLATTEN_THRESHOLD="VERY_STRICT";break;case b.Convert.FlattenThresholdFlag.e_strict:this.FLATTEN_THRESHOLD="STRICT";
break;case b.Convert.FlattenThresholdFlag.e_default:this.FLATTEN_THRESHOLD="DEFAULT";break;case b.Convert.FlattenThresholdFlag.e_keep_most:this.FLATTEN_THRESHOLD="KEEP_MOST";break;case b.Convert.FlattenThresholdFlag.e_keep_all:this.FLATTEN_THRESHOLD="KEEP_ALL";break;default:console.log("unrecognized PDFNet.Convert.FlattenThresholdFlag type: "+a)}return this};b.Convert.XODOutputOptions.prototype.setPreferJPG=function(a){this.PREFER_JPEG=a;return this};b.Convert.XODOutputOptions.prototype.setJPGQuality=
function(a){this.JPEG_QUALITY=a;return this};b.Convert.XODOutputOptions.prototype.setSilverlightTextWorkaround=function(a){this.REMOVE_ROTATED_TEXT=a;return this};b.Convert.XODOutputOptions.prototype.setAnnotationOutput=function(a){switch(a){case b.Convert.AnnotationOutputFlag.e_internal_xfdf:this.ANNOTATION_OUTPUT="INTERNAL";break;case b.Convert.AnnotationOutputFlag.e_external_xfdf:this.ANNOTATION_OUTPUT="EXTERNAL";break;case b.Convert.AnnotationOutputFlag.e_flatten:this.ANNOTATION_OUTPUT="FLATTEN";
break;default:console.log("unrecognized PDFNet.Convert.AnnotationOutputFlag type: "+a)}return this};b.Convert.XODOutputOptions.prototype.setExternalParts=function(a){this.EXTERNAL_PARTS=a;return this};b.Convert.XODOutputOptions.prototype.setExternalParts=function(a){this.ENCRYPT_PASSWORD=a;return this};b.Convert.XODOutputOptions.prototype.useSilverlightFlashCompatible=function(a){this.COMPATIBLE_XOD=a;return this};b.Convert.createHTMLOutputOptions=function(){return Promise.resolve(new b.Convert.HTMLOutputOptions)};
b.Convert.HTMLOutputOptions=function(){this.name="PDFNet.Convert.HTMLOutputOptions"};b.Convert.HTMLOutputOptions.prototype.setPreferJPG=function(a){this.PREFER_JPEG=a;return this};b.Convert.HTMLOutputOptions.prototype.setJPGQuality=function(a){this.JPEG_QUALITY=a;return this};b.Convert.HTMLOutputOptions.prototype.setDPI=function(a){this.DPI=a;return this};b.Convert.HTMLOutputOptions.prototype.setMaximumImagePixels=function(a){this.MAX_IMAGE_PIXELS=a;return this};b.Convert.HTMLOutputOptions.prototype.setReflow=
function(a){this.REFLOW=a;return this};b.Convert.HTMLOutputOptions.prototype.setScale=function(a){this.SCALE=a;return this};b.Convert.HTMLOutputOptions.prototype.setExternalLinks=function(a){this.EXTERNAL_LINKS=a;return this};b.Convert.HTMLOutputOptions.prototype.setInternalLinks=function(a){this.INTERNAL_LINKS=a;return this};b.Convert.HTMLOutputOptions.prototype.setSimplifyText=function(a){this.SIMPLIFY_TEXT=a;return this};b.Convert.HTMLOutputOptions.prototype.setReportFile=function(a){this.REPORT_FILE=
a;return this};b.Convert.createEPUBOutputOptions=function(){return Promise.resolve(new b.Convert.EPUBOutputOptions)};b.Convert.EPUBOutputOptions=function(){this.name="PDFNet.Convert.EPUBOutputOptions"};b.Convert.EPUBOutputOptions.prototype.setExpanded=function(a){this.EPUB_EXPANDED=a;return this};b.Convert.EPUBOutputOptions.prototype.setReuseCover=function(a){this.EPUB_REUSE_COVER=a;return this};b.Convert.createSVGOutputOptions=function(){return Promise.resolve(new b.Convert.SVGOutputOptions)};b.Convert.SVGOutputOptions=
function(){this.name="PDFNet.Convert.SVGOutputOptions"};b.Convert.SVGOutputOptions.prototype.setEmbedImages=function(a){this.EMBEDIMAGES=a;return this};b.Convert.SVGOutputOptions.prototype.setNoFonts=function(a){this.NOFONTS=a;return this};b.Convert.SVGOutputOptions.prototype.setSvgFonts=function(a){this.SVGFONTS=a;return this};b.Convert.SVGOutputOptions.prototype.setEmbedFonts=function(a){this.EMBEDFONTS=a;return this};b.Convert.SVGOutputOptions.prototype.setNoUnicode=function(a){this.NOUNICODE=
a;return this};b.Convert.SVGOutputOptions.prototype.setIndividualCharPlacement=function(a){this.INDIVIDUALCHARPLACEMENT=a;return this};b.Convert.SVGOutputOptions.prototype.setRemoveCharPlacement=function(a){this.REMOVECHARPLACEMENT=a;return this};b.Convert.SVGOutputOptions.prototype.setFlattenContent=function(a){switch(a){case b.Convert.FlattenFlag.e_off:this.FLATTEN_CONTENT="OFF";break;case b.Convert.FlattenFlag.e_simple:this.FLATTEN_CONTENT="SIMPLE";break;case b.Convert.FlattenFlag.e_fast:this.FLATTEN_CONTENT=
"FAST";break;case b.Convert.FlattenFlag.e_high_quality:this.FLATTEN_CONTENT="HIGH_QUALITY";break;default:console.log("unrecognized PDFNet.Convert.FlattenFlag type: "+a)}return this};b.Convert.SVGOutputOptions.prototype.setFlattenThreshold=function(a){switch(a){case b.Convert.FlattenThresholdFlag.e_very_strict:this.FLATTEN_THRESHOLD="VERY_STRICT";break;case b.Convert.FlattenThresholdFlag.e_strict:this.FLATTEN_THRESHOLD="STRICT";break;case b.Convert.FlattenThresholdFlag.e_default:this.FLATTEN_THRESHOLD=
"DEFAULT";break;case b.Convert.FlattenThresholdFlag.e_keep_most:this.FLATTEN_THRESHOLD="KEEP_MOST";break;case b.Convert.FlattenThresholdFlag.e_keep_all:this.FLATTEN_THRESHOLD="KEEP_ALL";break;default:console.log("unrecognized PDFNet.Convert.FlattenThresholdFlag type: "+a)}return this};b.Convert.SVGOutputOptions.prototype.setFlattenDPI=function(a){this.DPI=a;return this};b.Convert.SVGOutputOptions.prototype.setFlattenMaximumImagePixels=function(a){this.MAX_IMAGE_PIXELS=a;return this};b.Convert.SVGOutputOptions.prototype.setCompress=
function(a){this.SVGZ=a;return this};b.Convert.SVGOutputOptions.prototype.setOutputThumbnails=function(a){this.NOTHUMBS=a;return this};b.Convert.SVGOutputOptions.prototype.setThumbnailSize=function(a){this.THUMB_SIZE=a;return this};b.Convert.SVGOutputOptions.prototype.setCreateXmlWrapper=function(a){this.NOXMLDOC=a;return this};b.Convert.SVGOutputOptions.prototype.setDtd=function(a){this.OMITDTD=a;return this};b.Convert.SVGOutputOptions.prototype.setAnnots=function(a){this.NOANNOTS=a;return this};
b.Convert.SVGOutputOptions.prototype.setOverprint=function(a){switch(a){case b.PDFRasterizer.OverprintPreviewMode.e_op_off:this.OVERPRINT_MODE="OFF";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_on:this.OVERPRINT_MODE="ON";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_pdfx_on:this.OVERPRINT_MODE="PDFX";break;default:console.log("unrecognized PDFNet.PDFRasterizer.OverprintPreviewMode type: "+a)}return this};b.Convert.createCADConvertOptions=function(){return Promise.resolve(new b.Convert.CADConvertOptions)};
b.Convert.CADConvertOptions=function(){this.name="PDFNet.Convert.CADConvertOptions"};b.Convert.CADConvertOptions.prototype.setAutoRotate=function(a){this["Auto-rotate"]=a;return this};b.Convert.CADConvertOptions.prototype.setLineWeight=function(a){this["Line-weight"]=a;return this};b.Convert.CADConvertOptions.prototype.setPageHeight=function(a){this["Page-height"]=a;return this};b.Convert.CADConvertOptions.prototype.setPageWidth=function(a){this["Page-width"]=a;return this};b.Convert.CADConvertOptions.prototype.setRasterDPI=
function(a){this["Raster-dpi"]=a;return this};b.Convert.CADConvertOptions.prototype.addSheets=function(a){this.Sheets=a;return this};b.OCRModule.createOCROptions=function(){return Promise.resolve(new b.OCRModule.OCROptions)};b.OCRModule.OCROptions=function(){this.name="PDFNet.OCRModule.OCROptions"};b.OCRModule.OCROptions.prototype.addZonesForPage=function(a,b,d){"undefined"===typeof this[a]&&(this[a]=[]);if(this[a].length<d)for(var c=this[a].length;c<d;c++)this[a].push([]);b=b.map(function(a){return[a.x1,
a.y1,a.x2,a.y2]});this[a][d-1]=b};b.OCRModule.OCROptions.prototype.addIgnoreZonesForPage=function(a,b){this.addZonesForPage("IgnoreZones",a,b);return this};b.OCRModule.OCROptions.prototype.addLang=function(a){"undefined"===typeof this.Langs&&(this.Langs=[]);this.Langs.push(a);return this};b.OCRModule.OCROptions.prototype.addTextZonesForPage=function(a,b){this.addZonesForPage("TextZones",a,b);return this};b.OCRModule.OCROptions.prototype.addDPI=function(a){this.DPI=a;return this};b.PDFDoc.createViewerOptimizedOptions=
function(){return Promise.resolve(new b.PDFDoc.ViewerOptimizedOptions)};b.PDFDoc.ViewerOptimizedOptions=function(){this.name="PDFNet.PDFDoc.ViewerOptimizedOptions"};b.PDFDoc.ViewerOptimizedOptions.prototype.setThumbnailRenderingThreshold=function(a){this.COMPLEXITY_THRESHOLD=a;return this};b.PDFDoc.ViewerOptimizedOptions.prototype.setThumbnailSize=function(a){this.THUMB_SIZE=a;return this};b.PDFDoc.ViewerOptimizedOptions.prototype.setOverprint=function(a){switch(a){case b.PDFRasterizer.OverprintPreviewMode.e_op_off:this.OVERPRINT_MODE=
"OFF";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_on:this.OVERPRINT_MODE="ON";break;case b.PDFRasterizer.OverprintPreviewMode.e_op_pdfx_on:this.OVERPRINT_MODE="PDFX";break;default:console.log("unrecognized PDFNet.PDFRasterizer.OverprintPreviewMode type: "+a)}return this};b.MarkupAnnot.prototype=new b.Annot;b.TextMarkupAnnot.prototype=new b.MarkupAnnot;b.CaretAnnot.prototype=new b.MarkupAnnot;b.LineAnnot.prototype=new b.MarkupAnnot;b.CircleAnnot.prototype=new b.MarkupAnnot;b.FileAttachmentAnnot.prototype=
new b.MarkupAnnot;b.FreeTextAnnot.prototype=new b.MarkupAnnot;b.HighlightAnnot.prototype=new b.TextMarkupAnnot;b.InkAnnot.prototype=new b.MarkupAnnot;b.LinkAnnot.prototype=new b.Annot;b.MovieAnnot.prototype=new b.Annot;b.PolyLineAnnot.prototype=new b.LineAnnot;b.PolygonAnnot.prototype=new b.PolyLineAnnot;b.PopupAnnot.prototype=new b.Annot;b.RedactionAnnot.prototype=new b.MarkupAnnot;b.RubberStampAnnot.prototype=new b.MarkupAnnot;b.ScreenAnnot.prototype=new b.Annot;b.SoundAnnot.prototype=new b.MarkupAnnot;
b.SquareAnnot.prototype=new b.MarkupAnnot;b.SquigglyAnnot.prototype=new b.TextMarkupAnnot;b.StrikeOutAnnot.prototype=new b.TextMarkupAnnot;b.TextAnnot.prototype=new b.MarkupAnnot;b.UnderlineAnnot.prototype=new b.TextMarkupAnnot;b.WatermarkAnnot.prototype=new b.Annot;b.WidgetAnnot.prototype=new b.Annot;b.SignatureWidget.prototype=new b.WidgetAnnot;b.ComboBoxWidget.prototype=new b.WidgetAnnot;b.ListBoxWidget.prototype=new b.WidgetAnnot;b.TextWidget.prototype=new b.WidgetAnnot;b.CheckBoxWidget.prototype=
new b.WidgetAnnot;b.RadioButtonWidget.prototype=new b.WidgetAnnot;b.PushButtonWidget.prototype=new b.WidgetAnnot;b.PrinterMode.PaperSize={e_custom:0,e_letter:1,e_letter_small:2,e_tabloid:3,e_ledger:4,e_legal:5,e_statement:6,e_executive:7,e_a3:8,e_a4:9,e_a4_mall:10,e_a5:11,e_b4_jis:12,e_b5_jis:13,e_folio:14,e_quarto:15,e_10x14:16,e_11x17:17,e_note:18,e_envelope_9:19,e_envelope_10:20,e_envelope_11:21,e_envelope_12:22,e_envelope_14:23,e_c_size_sheet:24,e_d_size_sheet:25,e_e_size_sheet:26,e_envelope_dl:27,
e_envelope_c5:28,e_envelope_c3:29,e_envelope_c4:30,e_envelope_c6:31,e_envelope_c65:32,e_envelope_b4:33,e_envelope_b5:34,e_envelope_b6:35,e_envelope_italy:36,e_envelope_monarch:37,e_6_3_quarters_envelope:38,e_us_std_fanfold:39,e_german_std_fanfold:40,e_german_legal_fanfold:41,e_b4_iso:42,e_japanese_postcard:43,e_9x11:44,e_10x11:45,e_15x11:46,e_envelope_invite:47,e_reserved_48:48,e_reserved_49:49,e_letter_extra:50,e_legal_extra:51,e_tabloid_extra:52,e_a4_extra:53,e_letter_transverse:54,e_a4_transverse:55,
e_letter_extra_transverse:56,e_supera_supera_a4:57,e_Superb_Superb_a3:58,e_letter_plus:59,e_a4_plus:60,e_a5_transverse:61,e_b5_jis_transverse:62,e_a3_extra:63,e_a5_extra:64,e_b5_iso_extra:65,e_a2:66,e_a3_transverse:67,e_a3_extra_transverse:68,e_japanese_double_postcard:69,e_a6:70,e_japanese_envelope_kaku_2:71,e_japanese_envelope_kaku_3:72,e_japanese_envelope_chou_3:73,e_japanese_envelope_chou_4:74,e_letter_rotated:75,e_a3_rotated:76,e_a4_rotated:77,e_a5_rotated:78,e_b4_jis_rotated:79,e_b5_jis_rotated:80,
e_japanese_postcard_rotated:81,e_double_japanese_postcard_rotated:82,e_a6_rotated:83,e_japanese_envelope_kaku_2_rotated:84,e_japanese_envelope_kaku_3_rotated:85,e_japanese_envelope_chou_3_rotated:86,e_japanese_envelope_chou_4_rotated:87,e_b6_jis:88,e_b6_jis_rotated:89,e_12x11:90,e_japanese_envelope_you_4:91,e_japanese_envelope_you_4_rotated:92,e_PrinterMode_prc_16k:93,e_prc_32k:94,e_prc_32k_big:95,e_prc_envelop_1:96,e_prc_envelop_2:97,e_prc_envelop_3:98,e_prc_envelop_4:99,e_prc_envelop_5:100,e_prc_envelop_6:101,
e_prc_envelop_7:102,e_prc_envelop_8:103,e_prc_envelop_9:104,e_prc_envelop_10:105,e_prc_16k_rotated:106,e_prc_32k_rotated:107,e_prc_32k_big__rotated:108,e_prc_envelop_1_rotated:109,e_prc_envelop_2_rotated:110,e_prc_envelop_3_rotated:111,e_prc_envelop_4_rotated:112,e_prc_envelop_5_rotated:113,e_prc_envelop_6_rotated:114,e_prc_envelop_7_rotated:115,e_prc_envelop_8_rotated:116,e_prc_envelop_9_rotated:117,e_prc_envelop_10_rotated:118};b.Field.EventType={e_action_trigger_keystroke:13,e_action_trigger_format:14,
e_action_trigger_validate:15,e_action_trigger_calculate:16};b.Field.Type={e_button:0,e_check:1,e_radio:2,e_text:3,e_choice:4,e_signature:5,e_null:6};b.Field.Flag={e_read_only:0,e_required:1,e_no_export:2,e_pushbutton_flag:3,e_radio_flag:4,e_toggle_to_off:5,e_radios_in_unison:6,e_multiline:7,e_password:8,e_file_select:9,e_no_spellcheck:10,e_no_scroll:11,e_comb:12,e_rich_text:13,e_combo:14,e_edit:15,e_sort:16,e_multiselect:17,e_commit_on_sel_change:18};b.Field.TextJustification={e_left_justified:0,
e_centered:1,e_right_justified:2};b.Filter.StdFileOpenMode={e_read_mode:0,e_write_mode:1,e_append_mode:2};b.Filter.ReferencePos={e_begin:0,e_end:2,e_cur:1};b.OCGContext.OCDrawMode={e_VisibleOC:0,e_AllOC:1,e_NoOC:2};b.OCMD.VisibilityPolicyType={e_AllOn:0,e_AnyOn:1,e_AnyOff:2,e_AllOff:3};b.PDFACompliance.Conformance={e_Level1A:1,e_Level1B:2,e_Level2A:3,e_Level2B:4,e_Level2U:5,e_Level3A:6,e_Level3B:7,e_Level3U:8};b.PDFACompliance.ErrorCode={e_PDFA0_1_0:10,e_PDFA0_1_1:11,e_PDFA0_1_2:12,e_PDFA0_1_3:13,
e_PDFA0_1_4:14,e_PDFA0_1_5:15,e_PDFA1_2_1:121,e_PDFA1_2_2:122,e_PDFA1_3_1:131,e_PDFA1_3_2:132,e_PDFA1_3_3:133,e_PDFA1_3_4:134,e_PDFA1_4_1:141,e_PDFA1_4_2:142,e_PDFA1_6_1:161,e_PDFA1_7_1:171,e_PDFA1_7_2:172,e_PDFA1_7_3:173,e_PDFA1_7_4:174,e_PDFA1_8_1:181,e_PDFA1_8_2:182,e_PDFA1_8_3:183,e_PDFA1_8_4:184,e_PDFA1_8_5:185,e_PDFA1_8_6:186,e_PDFA1_10_1:1101,e_PDFA1_11_1:1111,e_PDFA1_11_2:1112,e_PDFA1_12_1:1121,e_PDFA1_12_2:1122,e_PDFA1_12_3:1123,e_PDFA1_12_4:1124,e_PDFA1_12_5:1125,e_PDFA1_12_6:1126,e_PDFA1_13_1:1131,
e_PDFA2_2_1:221,e_PDFA2_3_2:232,e_PDFA2_3_3:233,e_PDFA2_3_3_1:2331,e_PDFA2_3_3_2:2332,e_PDFA2_3_4_1:2341,e_PDFA2_4_1:241,e_PDFA2_4_2:242,e_PDFA2_4_3:243,e_PDFA2_4_4:244,e_PDFA2_5_1:251,e_PDFA2_5_2:252,e_PDFA2_6_1:261,e_PDFA2_7_1:271,e_PDFA2_8_1:281,e_PDFA2_9_1:291,e_PDFA2_10_1:2101,e_PDFA3_2_1:321,e_PDFA3_3_1:331,e_PDFA3_3_2:332,e_PDFA3_3_3_1:3331,e_PDFA3_3_3_2:3332,e_PDFA3_4_1:341,e_PDFA3_5_1:351,e_PDFA3_5_2:352,e_PDFA3_5_3:353,e_PDFA3_5_4:354,e_PDFA3_5_5:355,e_PDFA3_5_6:356,e_PDFA3_6_1:361,e_PDFA3_7_1:371,
e_PDFA3_7_2:372,e_PDFA3_7_3:373,e_PDFA4_1:41,e_PDFA4_2:42,e_PDFA4_3:43,e_PDFA4_4:44,e_PDFA4_5:45,e_PDFA4_6:46,e_PDFA5_2_1:521,e_PDFA5_2_2:522,e_PDFA5_2_3:523,e_PDFA5_2_4:524,e_PDFA5_2_5:525,e_PDFA5_2_6:526,e_PDFA5_2_7:527,e_PDFA5_2_8:528,e_PDFA5_2_9:529,e_PDFA5_2_10:5210,e_PDFA5_2_11:5211,e_PDFA5_3_1:531,e_PDFA5_3_2_1:5321,e_PDFA5_3_2_2:5322,e_PDFA5_3_2_3:5323,e_PDFA5_3_2_4:5324,e_PDFA5_3_2_5:5325,e_PDFA5_3_3_1:5331,e_PDFA5_3_3_2:5332,e_PDFA5_3_3_3:5333,e_PDFA5_3_3_4:5334,e_PDFA5_3_4_0:5340,e_PDFA5_3_4_1:5341,
e_PDFA5_3_4_2:5342,e_PDFA5_3_4_3:5343,e_PDFA6_1_1:611,e_PDFA6_1_2:612,e_PDFA6_2_1:621,e_PDFA6_2_2:622,e_PDFA6_2_3:623,e_PDFA7_2_1:721,e_PDFA7_2_2:722,e_PDFA7_2_3:723,e_PDFA7_2_4:724,e_PDFA7_2_5:725,e_PDFA7_3_1:731,e_PDFA7_3_2:732,e_PDFA7_3_3:733,e_PDFA7_3_4:734,e_PDFA7_3_5:735,e_PDFA7_3_6:736,e_PDFA7_3_7:737,e_PDFA7_3_8:738,e_PDFA7_3_9:739,e_PDFA7_5_1:751,e_PDFA7_8_1:781,e_PDFA7_8_2:782,e_PDFA7_8_3:783,e_PDFA7_8_4:784,e_PDFA7_8_5:785,e_PDFA7_8_6:786,e_PDFA7_8_7:787,e_PDFA7_8_8:788,e_PDFA7_8_9:789,
e_PDFA7_8_10:7810,e_PDFA7_8_11:7811,e_PDFA7_8_12:7812,e_PDFA7_8_13:7813,e_PDFA7_8_14:7814,e_PDFA7_8_15:7815,e_PDFA7_8_16:7816,e_PDFA7_8_17:7817,e_PDFA7_8_18:7818,e_PDFA7_8_19:7819,e_PDFA7_8_20:7820,e_PDFA7_8_21:7821,e_PDFA7_8_22:7822,e_PDFA7_8_23:7823,e_PDFA7_8_24:7824,e_PDFA7_8_25:7825,e_PDFA7_8_26:7826,e_PDFA7_8_27:7827,e_PDFA7_8_28:7828,e_PDFA7_8_29:7829,e_PDFA7_8_30:7830,e_PDFA7_8_31:7831,e_PDFA7_11_1:7111,e_PDFA7_11_2:7112,e_PDFA7_11_3:7113,e_PDFA7_11_4:7114,e_PDFA7_11_5:7115,e_PDFA9_1:91,e_PDFA9_2:92,
e_PDFA9_3:93,e_PDFA9_4:94,e_PDFA3_8_1:381,e_PDFA8_2_2:822,e_PDFA8_3_3_1:8331,e_PDFA8_3_3_2:8332,e_PDFA8_3_4_1:8341,e_PDFA1_2_3:123,e_PDFA1_10_2:1102,e_PDFA1_10_3:1103,e_PDFA1_12_10:11210,e_PDFA1_13_5:1135,e_PDFA2_3_10:2310,e_PDFA2_4_2_10:24220,e_PDFA2_4_2_11:24221,e_PDFA2_4_2_12:24222,e_PDFA2_4_2_13:24223,e_PDFA2_5_10:2510,e_PDFA2_5_11:2511,e_PDFA2_5_12:2512,e_PDFA2_8_3_1:2831,e_PDFA2_8_3_2:2832,e_PDFA2_8_3_3:2833,e_PDFA2_8_3_4:2834,e_PDFA2_8_3_5:2835,e_PDFA2_10_20:21020,e_PDFA2_10_21:21021,e_PDFA11_0_0:11E3,
e_PDFA6_2_11_8:62118,e_PDFA8_1:81,e_PDFA_3E1:1,e_PDFA_3E2:2,e_PDFA_3E3:3,e_PDFA_LAST:4};b.ContentItem.Type={e_MCR:0,e_MCID:1,e_OBJR:2,e_Unknown:3};b.Action.Type={e_GoTo:0,e_GoToR:1,e_GoToE:2,e_Launch:3,e_Thread:4,e_URI:5,e_Sound:6,e_Movie:7,e_Hide:8,e_Named:9,e_SubmitForm:10,e_ResetForm:11,e_ImportData:12,e_JavaScript:13,e_SetOCGState:14,e_Rendition:15,e_Trans:16,e_GoTo3DView:17,e_RichMediaExecute:18,e_Unknown:19};b.Action.FormActionFlag={e_exclude:0,e_include_no_value_fields:1,e_export_format:2,
e_get_method:3,e_submit_coordinates:4,e_xfdf:5,e_include_append_saves:6,e_include_annotations:7,e_submit_pdf:8,e_canonical_format:9,e_excl_non_user_annots:10,e_excl_F_key:11,e_embed_form:13};b.Page.EventType={e_action_trigger_page_open:11,e_action_trigger_page_close:12};b.Page.Box={e_media:0,e_crop:1,e_bleed:2,e_trim:3,e_art:4};b.Page.Rotate={e_0:0,e_90:1,e_180:2,e_270:3};b.Annot.EventType={e_action_trigger_activate:0,e_action_trigger_annot_enter:1,e_action_trigger_annot_exit:2,e_action_trigger_annot_down:3,
e_action_trigger_annot_up:4,e_action_trigger_annot_focus:5,e_action_trigger_annot_blur:6,e_action_trigger_annot_page_open:7,e_action_trigger_annot_page_close:8,e_action_trigger_annot_page_visible:9,e_action_trigger_annot_page_invisible:10};b.Annot.Type={e_Text:0,e_Link:1,e_FreeText:2,e_Line:3,e_Square:4,e_Circle:5,e_Polygon:6,e_Polyline:7,e_Highlight:8,e_Underline:9,e_Squiggly:10,e_StrikeOut:11,e_Stamp:12,e_Caret:13,e_Ink:14,e_Popup:15,e_FileAttachment:16,e_Sound:17,e_Movie:18,e_Widget:19,e_Screen:20,
e_PrinterMark:21,e_TrapNet:22,e_Watermark:23,e_3D:24,e_Redact:25,e_Projection:26,e_RichMedia:27,e_Unknown:28};b.Annot.Flag={e_invisible:0,e_hidden:1,e_print:2,e_no_zoom:3,e_no_rotate:4,e_no_view:5,e_annot_read_only:6,e_locked:7,e_toggle_no_view:8,e_locked_contents:9};b.AnnotBorderStyle.Style={e_solid:0,e_dashed:1,e_beveled:2,e_inset:3,e_underline:4};b.Annot.State={e_normal:0,e_rollover:1,e_down:2};b.LineAnnot.EndingStyle={e_Square:0,e_Circle:1,e_Diamond:2,e_OpenArrow:3,e_ClosedArrow:4,e_Butt:5,e_ROpenArrow:6,
e_RClosedArrow:7,e_Slash:8,e_None:9,e_Unknown:10};b.LineAnnot.IntentType={e_LineArrow:0,e_LineDimension:1,e_null:2};b.LineAnnot.CapPos={e_Inline:0,e_Top:1};b.FileAttachmentAnnot.Icon={e_Graph:0,e_PushPin:1,e_Paperclip:2,e_Tag:3,e_Unknown:4};b.FreeTextAnnot.IntentName={e_FreeText:0,e_FreeTextCallout:1,e_FreeTextTypeWriter:2,e_Unknown:3};b.LinkAnnot.HighlightingMode={e_none:0,e_invert:1,e_outline:2,e_push:3};b.MarkupAnnot.BorderEffect={e_None:0,e_Cloudy:1};b.PolyLineAnnot.IntentType={e_PolygonCloud:0,
e_PolyLineDimension:1,e_PolygonDimension:2,e_Unknown:3};b.RedactionAnnot.QuadForm={e_LeftJustified:0,e_Centered:1,e_RightJustified:2,e_None:3};b.RubberStampAnnot.Icon={e_Approved:0,e_Experimental:1,e_NotApproved:2,e_AsIs:3,e_Expired:4,e_NotForPublicRelease:5,e_Confidential:6,e_Final:7,e_Sold:8,e_Departmental:9,e_ForComment:10,e_TopSecret:11,e_ForPublicRelease:12,e_Draft:13,e_Unknown:14};b.ScreenAnnot.ScaleType={e_Anamorphic:0,e_Proportional:1};b.ScreenAnnot.ScaleCondition={e_Always:0,e_WhenBigger:1,
e_WhenSmaller:2,e_Never:3};b.ScreenAnnot.IconCaptionRelation={e_NoIcon:0,e_NoCaption:1,e_CBelowI:2,e_CAboveI:3,e_CRightILeft:4,e_CLeftIRight:5,e_COverlayI:6};b.SoundAnnot.Icon={e_Speaker:0,e_Mic:1,e_Unknown:2};b.TextAnnot.Icon={e_Comment:0,e_Key:1,e_Help:2,e_NewParagraph:3,e_Paragraph:4,e_Insert:5,e_Note:6,e_Unknown:7};b.WidgetAnnot.HighlightingMode={e_none:0,e_invert:1,e_outline:2,e_push:3,e_toggle:4};b.WidgetAnnot.ScaleType={e_Anamorphic:0,e_Proportional:1};b.WidgetAnnot.IconCaptionRelation={e_NoIcon:0,
e_NoCaption:1,e_CBelowI:2,e_CAboveI:3,e_CRightILeft:4,e_CLeftIRight:5,e_COverlayI:6};b.WidgetAnnot.ScaleCondition={e_Always:0,e_WhenBigger:1,e_WhenSmaller:2,e_Never:3};b.ColorSpace.Type={e_device_gray:0,e_device_rgb:1,e_device_cmyk:2,e_cal_gray:3,e_cal_rgb:4,e_lab:5,e_icc:6,e_indexed:7,e_pattern:8,e_separation:9,e_device_n:10,e_null:11};b.DocumentConversion.Result={e_Success:0,e_Incomplete:1,e_Failure:2};b.Convert.PrinterMode={e_auto:0,e_interop_only:1,e_printer_only:2,e_prefer_builtin_converter:3};
b.Destination.FitType={e_XYZ:0,e_Fit:1,e_FitH:2,e_FitV:3,e_FitR:4,e_FitB:5,e_FitBH:6,e_FitBV:7};b.GState.Attribute={e_transform:0,e_rendering_intent:1,e_stroke_cs:2,e_stroke_color:3,e_fill_cs:4,e_fill_color:5,e_line_width:6,e_line_cap:7,e_line_join:8,e_flatness:9,e_miter_limit:10,e_dash_pattern:11,e_char_spacing:12,e_word_spacing:13,e_horizontal_scale:14,e_leading:15,e_font:16,e_font_size:17,e_text_render_mode:18,e_text_rise:19,e_text_knockout:20,e_text_pos_offset:21,e_blend_mode:22,e_opacity_fill:23,
e_opacity_stroke:24,e_alpha_is_shape:25,e_soft_mask:26,e_smoothnes:27,e_auto_stoke_adjust:28,e_stroke_overprint:29,e_fill_overprint:30,e_overprint_mode:31,e_transfer_funct:32,e_BG_funct:33,e_UCR_funct:34,e_halftone:35,e_null:36};b.GState.LineCap={e_butt_cap:0,e_round_cap:1,e_square_cap:2};b.GState.LineJoin={e_miter_join:0,e_round_join:1,e_bevel_join:2};b.GState.TextRenderingMode={e_fill_text:0,e_stroke_text:1,e_fill_stroke_text:2,e_invisible_text:3,e_fill_clip_text:4,e_stroke_clip_text:5,e_fill_stroke_clip_text:6,
e_clip_text:7};b.GState.RenderingIntent={e_absolute_colorimetric:0,e_relative_colorimetric:1,e_saturation:2,e_perceptual:3};b.GState.BlendMode={e_bl_compatible:0,e_bl_normal:1,e_bl_multiply:2,e_bl_screen:3,e_bl_difference:4,e_bl_darken:5,e_bl_lighten:6,e_bl_color_dodge:7,e_bl_color_burn:8,e_bl_exclusion:9,e_bl_hard_light:10,e_bl_overlay:11,e_bl_soft_light:12,e_bl_luminosity:13,e_bl_hue:14,e_bl_saturation:15,e_bl_color:16};b.Element.Type={e_null:0,e_path:1,e_text_begin:2,e_text:3,e_text_new_line:4,
e_text_end:5,e_image:6,e_inline_image:7,e_shading:8,e_form:9,e_group_begin:10,e_group_end:11,e_marked_content_begin:12,e_marked_content_end:13,e_marked_content_point:14};b.Element.PathSegmentType={e_moveto:1,e_lineto:2,e_cubicto:3,e_conicto:4,e_rect:5,e_closepath:6};b.ElementWriter.WriteMode={e_underlay:0,e_overlay:1,e_replacement:2};b.Flattener.Threshold={e_very_strict:0,e_strict:1,e_default:2,e_keep_most:3,e_keep_all:4};b.Flattener.Mode={e_simple:0,e_fast:1};b.Font.StandardType1Font={e_times_roman:0,
e_times_bold:1,e_times_italic:2,e_times_bold_italic:3,e_helvetica:4,e_helvetica_bold:5,e_helvetica_oblique:6,e_helvetica_bold_oblique:7,e_courier:8,e_courier_bold:9,e_courier_oblique:10,e_courier_bold_oblique:11,e_symbol:12,e_zapf_dingbats:13,e_null:14};b.Font.Encoding={e_IdentityH:0,e_Indices:1};b.Font.Type={e_Type1:0,e_TrueType:1,e_MMType1:2,e_Type3:3,e_Type0:4,e_CIDType0:5,e_CIDType2:6};b.Function.Type={e_sampled:0,e_exponential:2,e_stitching:3,e_postscript:4};b.HTML2PDF.WebPageSettings.ErrorHandling=
{e_abort:0,e_skip:1,e_ignore:2};b.HTML2PDF.Proxy.Type={e_default:0,e_none:1,e_http:2,e_socks5:3};b.Image.InputFilter={e_none:0,e_jpeg:1,e_jp2:2,e_flate:3,e_g3:4,e_g4:5,e_ascii_hex:6};b.PageLabel.Style={e_decimal:0,e_roman_uppercase:1,e_roman_lowercase:2,e_alphabetic_uppercase:3,e_alphabetic_lowercase:4,e_none:5};b.PageSet.Filter={e_all:0,e_even:1,e_odd:2};b.PatternColor.Type={e_uncolored_tiling_pattern:0,e_colored_tiling_pattern:1,e_shading:2,e_null:3};b.PatternColor.TilingType={e_constant_spacing:0,
e_no_distortion:1,e_constant_spacing_fast_fill:2};b.GeometryCollection.SnappingMode={e_DefaultSnapMode:14,e_PointOnLine:1,e_LineMidpoint:2,e_LineIntersection:4,e_PathEndpoint:8};b.DigitalSignatureField.SubFilterType={e_adbe_x509_rsa_sha1:0,e_adbe_pkcs7_detached:1,e_adbe_pkcs7_sha1:2,e_ETSI_CAdES_detached:3,e_ETSI_RFC3161:4,e_unknown:5,e_absent:6};b.DigitalSignatureField.DocumentPermissions={e_no_changes_allowed:1,e_formfilling_signing_allowed:2,e_annotating_formfilling_signing_allowed:3,e_unrestricted:4};
b.DigitalSignatureField.FieldPermissions={e_lock_all:0,e_include:1,e_exclude:2};b.PDFDoc.EventType={e_action_trigger_doc_will_close:17,e_action_trigger_doc_will_save:18,e_action_trigger_doc_did_save:19,e_action_trigger_doc_will_print:20,e_action_trigger_doc_did_print:21};b.PDFDoc.InsertFlag={e_none:0,e_insert_bookmark:1};b.PDFDoc.ExtractFlag={e_forms_only:0,e_annots_only:1,e_both:2};b.PDFDocViewPrefs.PageMode={e_UseNone:0,e_UseThumbs:1,e_UseBookmarks:2,e_FullScreen:3,e_UseOC:4,e_UseAttachments:5};
b.PDFDocViewPrefs.PageLayout={e_Default:0,e_SinglePage:1,e_OneColumn:2,e_TwoColumnLeft:3,e_TwoColumnRight:4,e_TwoPageLeft:5,e_TwoPageRight:6};b.PDFDocViewPrefs.ViewerPref={e_HideToolbar:0,e_HideMenubar:1,e_HideWindowUI:2,e_FitWindow:3,e_CenterWindow:4,e_DisplayDocTitle:5};b.PDFRasterizer.Type={e_BuiltIn:0,e_GDIPlus:1};b.PDFRasterizer.OverprintPreviewMode={e_op_off:0,e_op_on:1,e_op_pdfx_on:2};b.PDFRasterizer.ColorPostProcessMode={e_postprocess_none:0,e_postprocess_invert:1};b.PDFDraw.PixelFormat={e_rgba:0,
e_bgra:1,e_rgb:2,e_bgr:3,e_gray:4,e_gray_alpha:5,e_cmyk:6};b.CMSType={e_lcms:0,e_icm:1,e_no_cms:2};b.CharacterOrdering={e_Identity:0,e_Japan1:1,e_Japan2:2,e_GB1:3,e_CNS1:4,e_Korea1:5};b.LogLevel={e_LogLevel_Off:-1,e_LogLevel_Fatal:5,e_LogLevel_Error:4,e_LogLevel_Warning:3,e_LogLevel_Info:2,e_LogLevel_Trace:1,e_LogLevel_Debug:0};b.Shading.Type={e_function_shading:0,e_axial_shading:1,e_radial_shading:2,e_free_gouraud_shading:3,e_lattice_gouraud_shading:4,e_coons_shading:5,e_tensor_shading:6,e_null:7};
b.Stamper.SizeType={e_relative_scale:1,e_absolute_size:2,e_font_size:3};b.Stamper.TextAlignment={e_align_left:-1,e_align_center:0,e_align_right:1};b.Stamper.HorizontalAlignment={e_horizontal_left:-1,e_horizontal_center:0,e_horizontal_right:1};b.Stamper.VerticalAlignment={e_vertical_bottom:-1,e_vertical_center:0,e_vertical_top:1};b.TextExtractor.ProcessingFlags={e_no_ligature_exp:1,e_no_dup_remove:2,e_punct_break:4,e_remove_hidden_text:8,e_no_invisible_text:16};b.TextExtractor.XMLOutputFlags={e_words_as_elements:1,
e_output_bbox:2,e_output_style_info:4};b.TextSearch.ResultCode={e_done:0,e_page:1,e_found:2};b.TextSearch.Mode={e_reg_expression:1,e_case_sensitive:2,e_whole_word:4,e_search_up:8,e_page_stop:16,e_highlight:32,e_ambient_string:64};b.Obj.Type={e_null:0,e_bool:1,e_number:2,e_name:3,e_string:4,e_dict:5,e_array:6,e_stream:7};b.SDFDoc.SaveOptions={e_incremental:1,e_remove_unused:2,e_hex_strings:4,e_omit_xref:8,e_linearized:16,e_compatibility:32};b.SecurityHandler.Permission={e_owner:1,e_doc_open:2,e_doc_modify:3,
e_print:4,e_print_high:5,e_extract_content:6,e_mod_annot:7,e_fill_forms:8,e_access_support:9,e_assemble_doc:10};b.SecurityHandler.AlgorithmType={e_RC4_40:1,e_RC4_128:2,e_AES:3,e_AES_256:4};b.VerificationOptions.SecurityLevel={e_compatibility_and_archiving:0,e_maximum:1};b.VerificationOptions.TimeMode={e_signing:0,e_timestamp:1,e_current:2};b.DigestAlgorithm.Type={e_SHA1:0,e_SHA256:1,e_SHA384:2,e_SHA512:3,e_RIPEMD160:4,e_unknown_digest_algorithm:5};b.VerificationResult.DocumentStatus={e_no_error:0,
e_corrupt_file:1,e_unsigned:2,e_bad_byteranges:3,e_corrupt_cryptographic_contents:4};b.VerificationResult.DigestStatus={e_digest_invalid:0,e_digest_verified:1,e_digest_verification_disabled:2,e_weak_digest_algorithm_but_digest_verifiable:3,e_no_digest_status:4,e_unsupported_encoding:5};b.VerificationResult.TrustStatus={e_trust_verified:0,e_untrusted:1,e_trust_verification_disabled:2,e_no_trust_status:3};b.VerificationResult.ModificationPermissionsStatus={e_invalidated_by_disallowed_changes:0,e_has_allowed_changes:1,
e_unmodified:2,e_permissions_verification_disabled:3,e_no_permissions_status:4};b.DisallowedChange.Type={e_form_filled:0,e_digital_signature_signed:1,e_page_template_instantiated:2,e_annotation_created_or_updated_or_deleted:3,e_other:4,e_unknown:5};b.Iterator.prototype.hasNext=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("Iterator.hasNext",
{itr:this.id},this.userPriority)};b.Iterator.prototype.next=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("Iterator.next",{itr:this.id},this.userPriority)};b.Iterator.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Iterator.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.DictIterator.prototype.hasNext=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("DictIterator.hasNext",{itr:this.id},this.userPriority)};b.DictIterator.prototype.key=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'key'. Expected 0 arguments. Function Signature: key()");return b.messageHandler.sendWithPromise("DictIterator.key",
{itr:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.DictIterator.prototype.value=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'value'. Expected 0 arguments. Function Signature: value()");return b.messageHandler.sendWithPromise("DictIterator.value",{itr:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.DictIterator.prototype.next=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("DictIterator.next",{itr:this.id},this.userPriority)};b.DictIterator.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,
1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("DictIterator.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Matrix2D.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Matrix2D.copy",{m:this},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Matrix2D.prototype.set=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'set'. Expected 6 arguments. Function Signature: set(number, number, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'set' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'set' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'set' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var g=this;this.yieldFunction="Matrix2D.set";return b.messageHandler.sendWithPromise("Matrix2D.set",{matrix:this,a:a,b:c,c:d,d:e,h:h,v:f},this.userPriority).then(function(a){g.yieldFunction=void 0;l(a.matrix,g)})};b.Matrix2D.prototype.concat=
function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concat'. Expected 6 arguments. Function Signature: concat(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'concat' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'concat' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'concat' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'concat' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'concat' is of type '"+typeof h+
"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'concat' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'concat'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var g=this;this.yieldFunction="Matrix2D.concat";return b.messageHandler.sendWithPromise("Matrix2D.concat",{matrix:this,a:a,b:c,c:d,d:e,h:h,v:f},this.userPriority).then(function(a){g.yieldFunction=void 0;l(a.matrix,g)})};b.Matrix2D.prototype.equals=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'equals'. Expected 1 argument. Function Signature: equals(PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'equals' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&a&&"Matrix2D"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'equals' is of type '"+a.name+
"'. Expected type 'Matrix2D'. Function Signature: equals(PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'equals' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: equals(PDFNet.Matrix2D).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'equals'. Perhaps a yield statement is required for "+this.yieldFunction+
"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'equals'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Matrix2D.equals",{m1:this,m2:a},this.userPriority)};b.Matrix2D.prototype.inverse=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'inverse'. Expected 0 arguments. Function Signature: inverse()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inverse'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Matrix2D.inverse",{matrix:this},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Matrix2D.prototype.translate=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'translate'. Expected 2 arguments. Function Signature: translate(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'translate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'translate' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: translate(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'translate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'translate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: translate(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'translate'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Matrix2D.translate";
return b.messageHandler.sendWithPromise("Matrix2D.translate",{matrix:this,h:a,v:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.matrix,d)})};b.Matrix2D.prototype.scale=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'scale'. Expected 2 arguments. Function Signature: scale(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'scale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: scale(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'scale' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: scale(number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'scale'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Matrix2D.scale";return b.messageHandler.sendWithPromise("Matrix2D.scale",{matrix:this,h:a,v:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.matrix,d)})};b.Matrix2D.createZeroMatrix=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createZeroMatrix'. Expected 0 arguments. Function Signature: createZeroMatrix()");return b.messageHandler.sendWithPromise("matrix2DCreateZeroMatrix",{},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Matrix2D.createIdentityMatrix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIdentityMatrix'. Expected 0 arguments. Function Signature: createIdentityMatrix()");
return b.messageHandler.sendWithPromise("matrix2DCreateIdentityMatrix",{},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Matrix2D.createRotationMatrix=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRotationMatrix'. Expected 1 argument. Function Signature: createRotationMatrix(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRotationMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createRotationMatrix' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRotationMatrix(number).");return b.messageHandler.sendWithPromise("matrix2DCreateRotationMatrix",{angle:a},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Field.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("fieldCreate",{field_dict:a.id},this.userPriority).then(function(a){return new b.Field(a)})};b.Field.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.isValid",{field:this},this.userPriority)};b.Field.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getType",{field:this},this.userPriority)};b.Field.prototype.getValue=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValue'. Expected 0 arguments. Function Signature: getValue()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValue'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getValue",{field:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Field.prototype.getValueAsString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValueAsString'. Expected 0 arguments. Function Signature: getValueAsString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValueAsString'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getValueAsString",{field:this},this.userPriority)};b.Field.prototype.getDefaultValueAsString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultValueAsString'. Expected 0 arguments. Function Signature: getDefaultValueAsString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultValueAsString'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getDefaultValueAsString",{field:this},this.userPriority)};b.Field.prototype.setValueAsString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValueAsString'. Expected 1 argument. Function Signature: setValueAsString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValueAsString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setValueAsString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setValueAsString(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValueAsString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.setValueAsString";return b.messageHandler.sendWithPromise("Field.setValueAsString",{field:this,value:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c);return new b.ViewChangeCollection(a.result)})};b.Field.prototype.setValue=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValue'. Expected 1 argument. Function Signature: setValue(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValue' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setValue' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setValue(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setValue' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setValue(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValue'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setValue";return b.messageHandler.sendWithPromise("Field.setValue",{field:this,value:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c);return new b.ViewChangeCollection(a.result)})};b.Field.prototype.setValueAsBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValueAsBool'. Expected 1 argument. Function Signature: setValueAsBool(boolean)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setValueAsBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setValueAsBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setValueAsBool(boolean).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValueAsBool'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setValueAsBool";return b.messageHandler.sendWithPromise("Field.setValueAsBool",{field:this,value:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c);return new b.ViewChangeCollection(a.result)})};b.Field.prototype.getTriggerAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getTriggerAction'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getTriggerAction",{field:this,trigger:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Field.prototype.getValueAsBool=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValueAsBool'. Expected 0 arguments. Function Signature: getValueAsBool()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValueAsBool'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getValueAsBool",{field:this},this.userPriority)};b.Field.prototype.refreshAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshAppearance'. Expected 0 arguments. Function Signature: refreshAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'refreshAppearance'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="Field.refreshAppearance";return b.messageHandler.sendWithPromise("Field.refreshAppearance",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.field,a)})};b.Field.prototype.eraseAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseAppearance'. Expected 0 arguments. Function Signature: eraseAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'eraseAppearance'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.eraseAppearance";return b.messageHandler.sendWithPromise("Field.eraseAppearance",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.field,a)})};b.Field.prototype.getDefaultValue=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getDefaultValue'. Expected 0 arguments. Function Signature: getDefaultValue()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getDefaultValue",{field:this},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Field.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getName",
{field:this},this.userPriority)};b.Field.prototype.getPartialName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPartialName'. Expected 0 arguments. Function Signature: getPartialName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPartialName'. Perhaps a yield statement is required for "+this.yieldFunction+
"?");return b.messageHandler.sendWithPromise("Field.getPartialName",{field:this},this.userPriority)};b.Field.prototype.rename=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rename'. Expected 1 argument. Function Signature: rename(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'rename' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: rename(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'rename'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.rename";return b.messageHandler.sendWithPromise("Field.rename",{field:this,field_name:a},
this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c)})};b.Field.prototype.isAnnot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAnnot'. Expected 0 arguments. Function Signature: isAnnot()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isAnnot'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.isAnnot",{field:this},this.userPriority)};b.Field.prototype.useSignatureHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'useSignatureHandler'. Expected 1 argument. Function Signature: useSignatureHandler(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'useSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'useSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: useSignatureHandler(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'useSignatureHandler'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.useSignatureHandler";return b.messageHandler.sendWithPromise("Field.useSignatureHandler",{field:this,signature_handler_id:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c);return new b.Obj(a.result)})};b.Field.prototype.getFlag=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlag'. Expected 1 argument. Function Signature: getFlag(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFlag(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFlag'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getFlag",
{field:this,flag:a},this.userPriority)};b.Field.prototype.setFlag=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlag'. Expected 2 arguments. Function Signature: setFlag(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlag' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFlag(number, boolean).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setFlag'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Field.setFlag";return b.messageHandler.sendWithPromise("Field.setFlag",{field:this,flag:a,value:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.field,d)})};b.Field.prototype.getJustification=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getJustification'. Expected 0 arguments. Function Signature: getJustification()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getJustification'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getJustification";return b.messageHandler.sendWithPromise("Field.getJustification",
{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.field,a);return b.result})};b.Field.prototype.setJustification=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJustification'. Expected 1 argument. Function Signature: setJustification(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJustification' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJustification' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJustification(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setJustification'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.setJustification";return b.messageHandler.sendWithPromise("Field.setJustification",{field:this,j:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c)})};b.Field.prototype.setMaxLen=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaxLen'. Expected 1 argument. Function Signature: setMaxLen(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaxLen' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMaxLen' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMaxLen(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setMaxLen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setMaxLen";
return b.messageHandler.sendWithPromise("Field.setMaxLen",{field:this,max_len:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c)})};b.Field.prototype.getMaxLen=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMaxLen'. Expected 0 arguments. Function Signature: getMaxLen()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getMaxLen'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getMaxLen",{field:this},this.userPriority)};b.Field.prototype.getDefaultAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultAppearance'. Expected 0 arguments. Function Signature: getDefaultAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultAppearance'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getDefaultAppearance";return b.messageHandler.sendWithPromise("Field.getDefaultAppearance",{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.field,a);return new b.GState(c.result)})};b.Field.prototype.getUpdateRect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUpdateRect'. Expected 0 arguments. Function Signature: getUpdateRect()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getUpdateRect'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getUpdateRect",{field:this},this.userPriority).then(function(a){return new b.Rect(a)})};b.Field.prototype.flatten=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flatten'. Expected 1 argument. Function Signature: flatten(PDFNet.Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'flatten' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'flatten' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: flatten(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'flatten' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: flatten(PDFNet.Page).");
}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'flatten'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.flatten";return b.messageHandler.sendWithPromise("Field.flatten",{field:this,page:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c)})};b.Field.prototype.findInheritedAttribute=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findInheritedAttribute'. Expected 1 argument. Function Signature: findInheritedAttribute(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'findInheritedAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findInheritedAttribute' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: findInheritedAttribute(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'findInheritedAttribute'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.findInheritedAttribute",{field:this,attrib:a},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Field.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getSDFObj",
{field:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Field.prototype.getOptCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOptCount'. Expected 0 arguments. Function Signature: getOptCount()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getOptCount'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getOptCount",{field:this},this.userPriority)};b.Field.prototype.getOpt=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpt'. Expected 1 argument. Function Signature: getOpt(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOpt' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getOpt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getOpt(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getOpt'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getOpt",{field:this,index:a},this.userPriority)};b.Field.prototype.isLockedByDigitalSignature=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLockedByDigitalSignature'. Expected 0 arguments. Function Signature: isLockedByDigitalSignature()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isLockedByDigitalSignature'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.isLockedByDigitalSignature",
{field:this},this.userPriority)};b.FDFDoc.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("fdfDocCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromFilePath=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromFilePath'. Expected 1 argument. Function Signature: createFromFilePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFilePath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromFilePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromFilePath(string).");
return b.messageHandler.sendWithPromise("fdfDocCreateFromFilePath",{filepath:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromUFilePath=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromUFilePath'. Expected 1 argument. Function Signature: createFromUFilePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromUFilePath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromUFilePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromUFilePath(string).");return b.messageHandler.sendWithPromise("fdfDocCreateFromUFilePath",{filepath:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromStream'. Expected 1 argument. Function Signature: createFromStream(PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: createFromStream(PDFNet.Filter).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: createFromStream(PDFNet.Filter).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("fdfDocCreateFromStream",
{no_own_stream:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromMemoryBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemoryBuffer'. Expected 1 argument. Function Signature: createFromMemoryBuffer(ArrayBuffer|TypedArray)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemoryBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromMemoryBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemoryBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'createFromMemoryBuffer' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemoryBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("fdfDocCreateFromMemoryBuffer",{buf:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("FDFDoc.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FDFDoc.prototype.isModified=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");return b.messageHandler.sendWithPromise("FDFDoc.isModified",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.save=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'save'. Expected 1 argument. Function Signature: save(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'save' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: save(string).");return b.messageHandler.sendWithPromise("FDFDoc.save",{doc:this.id,path:a},this.userPriority)};b.FDFDoc.prototype.saveMemoryBuffer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveMemoryBuffer'. Expected 0 arguments. Function Signature: saveMemoryBuffer()");return b.messageHandler.sendWithPromise("FDFDoc.saveMemoryBuffer",
{doc:this.id},this.userPriority).then(function(a){return new Uint8Array(a)})};b.FDFDoc.prototype.getTrailer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("FDFDoc.getTrailer",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.FDFDoc.prototype.getRoot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getRoot'. Expected 0 arguments. Function Signature: getRoot()");return b.messageHandler.sendWithPromise("FDFDoc.getRoot",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.FDFDoc.prototype.getFDF=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFDF'. Expected 0 arguments. Function Signature: getFDF()");return b.messageHandler.sendWithPromise("FDFDoc.getFDF",{doc:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.FDFDoc.prototype.getPDFFileName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPDFFileName'. Expected 0 arguments. Function Signature: getPDFFileName()");return b.messageHandler.sendWithPromise("FDFDoc.getPDFFileName",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.setPDFFileName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPDFFileName'. Expected 1 argument. Function Signature: setPDFFileName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPDFFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPDFFileName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPDFFileName(string).");return b.messageHandler.sendWithPromise("FDFDoc.setPDFFileName",{doc:this.id,filepath:a},this.userPriority)};b.FDFDoc.prototype.getID=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getID'. Expected 0 arguments. Function Signature: getID()");return b.messageHandler.sendWithPromise("FDFDoc.getID",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.FDFDoc.prototype.setID=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setID'. Expected 1 argument. Function Signature: setID(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setID' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setID' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setID(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setID' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setID(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("FDFDoc.setID",{doc:this.id,id:a.id},this.userPriority)};b.FDFDoc.prototype.getFieldIteratorBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");return b.messageHandler.sendWithPromise("FDFDoc.getFieldIteratorBegin",{doc:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,
"FDFField");createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.getFieldIterator=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFieldIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getFieldIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");return b.messageHandler.sendWithPromise("FDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"FDFField");createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.getField=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getField'. Expected 1 argument. Function Signature: getField(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getField(string).");return b.messageHandler.sendWithPromise("FDFDoc.getField",{doc:this.id,field_name:a},this.userPriority).then(function(a){return new b.FDFField(a)})};
b.FDFDoc.prototype.fieldCreate=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreate'. Expected 2 to 3 arguments. Function Signature: fieldCreate(string, number, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'fieldCreate' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreate(string, number, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fieldCreate(string, number, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'fieldCreate' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreate' is of type '"+typeof d+
"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("FDFDoc.fieldCreate",{doc:this.id,field_name:a,type:c,field_value:d.id},this.userPriority).then(function(a){return new b.FDFField(a)})};b.FDFDoc.prototype.fieldCreateFromString=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreateFromString'. Expected 3 arguments. Function Signature: fieldCreateFromString(string, number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreateFromString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreateFromString(string, number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreateFromString' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fieldCreateFromString(string, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreateFromString' is of type '"+
typeof d+"'. Expected type 'string'. Function Signature: fieldCreateFromString(string, number, string).");return b.messageHandler.sendWithPromise("FDFDoc.fieldCreateFromString",{doc:this.id,field_name:a,type:c,field_value:d},this.userPriority).then(function(a){return new b.FDFField(a)})};b.FDFDoc.prototype.getSDFDoc=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFDoc'. Expected 0 arguments. Function Signature: getSDFDoc()");return b.messageHandler.sendWithPromise("FDFDoc.getSDFDoc",
{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.SDFDoc(a)})};b.FDFDoc.createFromXFDF=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromXFDF'. Expected 1 argument. Function Signature: createFromXFDF(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromXFDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createFromXFDF' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromXFDF(string).");return b.messageHandler.sendWithPromise("fdfDocCreateFromXFDF",{file_name:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.saveAsXFDF=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsXFDF'. Expected 1 argument. Function Signature: saveAsXFDF(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveAsXFDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveAsXFDF' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: saveAsXFDF(string).");return b.messageHandler.sendWithPromise("FDFDoc.saveAsXFDF",{doc:this.id,file_name:a},this.userPriority)};b.FDFDoc.prototype.saveAsXFDFAsString=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsXFDFAsString'. Expected 0 arguments. Function Signature: saveAsXFDFAsString()");return b.messageHandler.sendWithPromise("FDFDoc.saveAsXFDFAsString",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.mergeAnnots=function(a,c){"undefined"===typeof c&&(c="");if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mergeAnnots'. Expected 1 to 2 arguments. Function Signature: mergeAnnots(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'mergeAnnots' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mergeAnnots' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: mergeAnnots(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'mergeAnnots' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'mergeAnnots' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: mergeAnnots(string, string).");return b.messageHandler.sendWithPromise("FDFDoc.mergeAnnots",{doc:this.id,command_file:a,permitted_user:c},this.userPriority)};b.FDFField.create=function(a,c){"undefined"===typeof a&&(a=new b.Obj("0"));"undefined"===typeof c&&(c=new b.Obj("0"));if(2<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected at most 2 arguments. Function Signature: create(PDFNet.Obj, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj, PDFNet.Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("fdfFieldCreate",{field_dict:a.id,fdf_dict:c.id},this.userPriority).then(function(a){return new b.FDFField(a)})};b.FDFField.prototype.getValue=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValue'. Expected 0 arguments. Function Signature: getValue()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getValue";return b.messageHandler.sendWithPromise("FDFField.getValue",{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.field,a);return new b.Obj(c.result)})};b.FDFField.prototype.setValue=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValue'. Expected 1 argument. Function Signature: setValue(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setValue' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setValue(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'setValue' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setValue(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="FDFField.setValue";return b.messageHandler.sendWithPromise("FDFField.setValue",
{field:this,value:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.field,c)})};b.FDFField.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getName'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getName";return b.messageHandler.sendWithPromise("FDFField.getName",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.field,a);return b.result})};b.FDFField.prototype.getPartialName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPartialName'. Expected 0 arguments. Function Signature: getPartialName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPartialName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getPartialName";return b.messageHandler.sendWithPromise("FDFField.getPartialName",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.field,a);return b.result})};b.FDFField.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("FDFField.getSDFObj",{field:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.FDFField.prototype.findAttribute=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findAttribute'. Expected 1 argument. Function Signature: findAttribute(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'findAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findAttribute' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: findAttribute(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'findAttribute'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("FDFField.findAttribute",{field:this,attrib:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.Filter.prototype.createASCII85Encode=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createASCII85Encode'. Expected 2 arguments. Function Signature: createASCII85Encode(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createASCII85Encode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createASCII85Encode' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: createASCII85Encode(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createASCII85Encode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createASCII85Encode' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createASCII85Encode(number, number).");var d=-1;
if(0!=this.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==this.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("Filter.createASCII85Encode",{no_own_input_filter:this.id,line_width:a,buf_sz:c},
this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createMappedFileFromUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createMappedFileFromUString'. Expected 1 argument. Function Signature: createMappedFileFromUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createMappedFileFromUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createMappedFileFromUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createMappedFileFromUString(string).");return b.messageHandler.sendWithPromise("filterCreateMappedFileFromUString",{filename:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createMemoryFilter=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createMemoryFilter'. Expected 2 arguments. Function Signature: createMemoryFilter(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createMemoryFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createMemoryFilter' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createMemoryFilter(number, boolean).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createMemoryFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createMemoryFilter' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createMemoryFilter(number, boolean).");return b.messageHandler.sendWithPromise("filterCreateMemoryFilter",{buf_sz:a,is_input:c},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBFromElement=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBFromElement'. Expected 1 argument. Function Signature: createImage2RGBFromElement(PDFNet.Element)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Element)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGBFromElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: createImage2RGBFromElement(PDFNet.Element).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBFromElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: createImage2RGBFromElement(PDFNet.Element).");}return b.messageHandler.sendWithPromise("filterCreateImage2RGBFromElement",
{elem:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBFromObj'. Expected 1 argument. Function Signature: createImage2RGBFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGBFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createImage2RGBFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createImage2RGBFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("filterCreateImage2RGBFromObj",
{obj:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGB=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGB'. Expected 1 argument. Function Signature: createImage2RGB(PDFNet.Image)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGB' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGB' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImage2RGB(PDFNet.Image).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGB' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImage2RGB(PDFNet.Image).");}return b.messageHandler.sendWithPromise("filterCreateImage2RGB",{img:a.id},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBAFromElement=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBAFromElement'. Expected 2 arguments. Function Signature: createImage2RGBAFromElement(PDFNet.Element, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBAFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Element)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGBAFromElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: createImage2RGBAFromElement(PDFNet.Element, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBAFromElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: createImage2RGBAFromElement(PDFNet.Element, boolean).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createImage2RGBAFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImage2RGBAFromElement' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBAFromElement(PDFNet.Element, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBAFromElement",{elem:a.id,
premultiply:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBAFromObj=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBAFromObj'. Expected 2 arguments. Function Signature: createImage2RGBAFromObj(PDFNet.Obj, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBAFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGBAFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createImage2RGBAFromObj(PDFNet.Obj, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBAFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createImage2RGBAFromObj(PDFNet.Obj, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImage2RGBAFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImage2RGBAFromObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBAFromObj(PDFNet.Obj, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBAFromObj",{obj:a.id,premultiply:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBA=function(a,c){if(2!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBA'. Expected 2 arguments. Function Signature: createImage2RGBA(PDFNet.Image, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBA' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage2RGBA' is of type '"+
a.name+"'. Expected type 'Image'. Function Signature: createImage2RGBA(PDFNet.Image, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBA' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImage2RGBA(PDFNet.Image, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImage2RGBA' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createImage2RGBA' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBA(PDFNet.Image, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBA",{img:a.id,premultiply:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Filter.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Filter.prototype.mappedFileFileSize=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mappedFileFileSize'. Expected 0 arguments. Function Signature: mappedFileFileSize()");return b.messageHandler.sendWithPromise("Filter.mappedFileFileSize",{filter:this.id},this.userPriority)};b.Filter.prototype.mappedFileCompare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mappedFileCompare'. Expected 1 argument. Function Signature: mappedFileCompare(PDFNet.Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'mappedFileCompare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'mappedFileCompare' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: mappedFileCompare(PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'mappedFileCompare' is of type '"+
typeof a+"'. Expected type 'Filter'. Function Signature: mappedFileCompare(PDFNet.Filter).");}return b.messageHandler.sendWithPromise("Filter.mappedFileCompare",{mf1:this.id,mf2:a.id},this.userPriority)};b.Filter.prototype.attachFilter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=
d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("Filter.attachFilter",{filter:this.id,no_own_attach_filter:a.id},this.userPriority)};b.Filter.prototype.releaseAttachedFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'releaseAttachedFilter'. Expected 0 arguments. Function Signature: releaseAttachedFilter()");return b.messageHandler.sendWithPromise("Filter.releaseAttachedFilter",{filter:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.getAttachedFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");
return b.messageHandler.sendWithPromise("Filter.getAttachedFilter",{filter:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.Filter.prototype.getSourceFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSourceFilter'. Expected 0 arguments. Function Signature: getSourceFilter()");return b.messageHandler.sendWithPromise("Filter.getSourceFilter",{filter:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Filter(a)})};b.Filter.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Filter.getName",{filter:this.id},this.userPriority)};b.Filter.prototype.getDecodeName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodeName'. Expected 0 arguments. Function Signature: getDecodeName()");
return b.messageHandler.sendWithPromise("Filter.getDecodeName",{filter:this.id},this.userPriority)};b.Filter.prototype.begin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 0 arguments. Function Signature: begin()");return b.messageHandler.sendWithPromise("Filter.begin",{filter:this.id},this.userPriority)};b.Filter.prototype.size=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'size'. Expected 0 arguments. Function Signature: size()");
return b.messageHandler.sendWithPromise("Filter.size",{filter:this.id},this.userPriority)};b.Filter.prototype.consume=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'consume'. Expected 1 argument. Function Signature: consume(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'consume' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'consume' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: consume(number).");return b.messageHandler.sendWithPromise("Filter.consume",{filter:this.id,num_bytes:a},this.userPriority)};b.Filter.prototype.count=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("Filter.count",{filter:this.id},this.userPriority)};
b.Filter.prototype.setCount=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCount'. Expected 1 argument. Function Signature: setCount(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setCount(number).");
return b.messageHandler.sendWithPromise("Filter.setCount",{filter:this.id,new_count:a},this.userPriority)};b.Filter.prototype.setStreamLength=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamLength'. Expected 1 argument. Function Signature: setStreamLength(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamLength' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStreamLength(number).");return b.messageHandler.sendWithPromise("Filter.setStreamLength",{filter:this.id,bytes:a},this.userPriority)};b.Filter.prototype.flush=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");
return b.messageHandler.sendWithPromise("Filter.flush",{filter:this.id},this.userPriority)};b.Filter.prototype.flushAll=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");return b.messageHandler.sendWithPromise("Filter.flushAll",{filter:this.id},this.userPriority)};b.Filter.prototype.isInputFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isInputFilter'. Expected 0 arguments. Function Signature: isInputFilter()");
return b.messageHandler.sendWithPromise("Filter.isInputFilter",{filter:this.id},this.userPriority)};b.Filter.prototype.canSeek=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'canSeek'. Expected 0 arguments. Function Signature: canSeek()");return b.messageHandler.sendWithPromise("Filter.canSeek",{filter:this.id},this.userPriority)};b.Filter.prototype.writeToFile=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeToFile'. Expected 2 arguments. Function Signature: writeToFile(string, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeToFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeToFile' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeToFile(string, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'writeToFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'writeToFile' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: writeToFile(string, boolean).");return b.messageHandler.sendWithPromise("Filter.writeToFile",{filter:this.id,path:a,append:c},this.userPriority)};b.Filter.prototype.seek=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");return b.messageHandler.sendWithPromise("Filter.seek",{filter:this.id,offset:a,origin:c},this.userPriority)};b.Filter.prototype.tell=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("Filter.tell",
{filter:this.id},this.userPriority)};b.Filter.prototype.createInputIterator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createInputIterator'. Expected 0 arguments. Function Signature: createInputIterator()");return b.messageHandler.sendWithPromise("Filter.createInputIterator",{filter:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.getFilePath=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFilePath'. Expected 0 arguments. Function Signature: getFilePath()");return b.messageHandler.sendWithPromise("Filter.getFilePath",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterGetBuffer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterGetBuffer'. Expected 0 arguments. Function Signature: memoryFilterGetBuffer()");
return b.messageHandler.sendWithPromise("Filter.memoryFilterGetBuffer",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterSetAsInputFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterSetAsInputFilter'. Expected 0 arguments. Function Signature: memoryFilterSetAsInputFilter()");return b.messageHandler.sendWithPromise("Filter.memoryFilterSetAsInputFilter",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterReset=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterReset'. Expected 0 arguments. Function Signature: memoryFilterReset()");return b.messageHandler.sendWithPromise("Filter.memoryFilterReset",{filter:this.id},this.userPriority)};b.FilterReader.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Filter)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: create(PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: create(PDFNet.Filter).");
}return b.messageHandler.sendWithPromise("filterReaderCreate",{filter:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FilterReader(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FilterReader.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=
c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("FilterReader.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FilterReader.prototype.attachFilter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");
throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");}return b.messageHandler.sendWithPromise("FilterReader.attachFilter",{reader:this.id,filter:a.id},this.userPriority)};b.FilterReader.prototype.getAttachedFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");
return b.messageHandler.sendWithPromise("FilterReader.getAttachedFilter",{reader:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.FilterReader.prototype.seek=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");
return b.messageHandler.sendWithPromise("FilterReader.seek",{reader:this.id,offset:a,origin:c},this.userPriority)};b.FilterReader.prototype.tell=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("FilterReader.tell",{reader:this.id},this.userPriority)};b.FilterReader.prototype.count=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("FilterReader.count",{reader:this.id},this.userPriority)};b.FilterReader.prototype.flush=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("FilterReader.flush",{reader:this.id},this.userPriority)};b.FilterReader.prototype.flushAll=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");return b.messageHandler.sendWithPromise("FilterReader.flushAll",{reader:this.id},this.userPriority)};b.FilterReader.prototype.get=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 0 arguments. Function Signature: get()");return b.messageHandler.sendWithPromise("FilterReader.get",
{reader:this.id},this.userPriority)};b.FilterReader.prototype.peek=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'peek'. Expected 0 arguments. Function Signature: peek()");return b.messageHandler.sendWithPromise("FilterReader.peek",{reader:this.id},this.userPriority)};b.FilterWriter.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: create(PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: create(PDFNet.Filter).");
}return b.messageHandler.sendWithPromise("filterWriterCreate",{filter:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FilterWriter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FilterWriter.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=
c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("FilterWriter.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FilterWriter.prototype.attachFilter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");
throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(PDFNet.Filter).");}return b.messageHandler.sendWithPromise("FilterWriter.attachFilter",{writer:this.id,filter:a.id},this.userPriority)};b.FilterWriter.prototype.getAttachedFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");
return b.messageHandler.sendWithPromise("FilterWriter.getAttachedFilter",{writer:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.FilterWriter.prototype.seek=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");
return b.messageHandler.sendWithPromise("FilterWriter.seek",{writer:this.id,offset:a,origin:c},this.userPriority)};b.FilterWriter.prototype.tell=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("FilterWriter.tell",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.count=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("FilterWriter.count",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.flush=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("FilterWriter.flush",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.flushAll=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");return b.messageHandler.sendWithPromise("FilterWriter.flushAll",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.writeUChar=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUChar'. Expected 1 argument. Function Signature: writeUChar(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'writeUChar' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUChar' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUChar(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUChar",{writer:this.id,ch:a},this.userPriority)};b.FilterWriter.prototype.writeInt16=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt16'. Expected 1 argument. Function Signature: writeInt16(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt16' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt16' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeInt16(number).");
return b.messageHandler.sendWithPromise("FilterWriter.writeInt16",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt16=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt16'. Expected 1 argument. Function Signature: writeUInt16(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt16' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt16' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt16(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUInt16",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeInt32=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt32'. Expected 1 argument. Function Signature: writeInt32(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt32' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt32' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeInt32(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeInt32",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt32=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt32'. Expected 1 argument. Function Signature: writeUInt32(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt32' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt32' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt32(number).");
return b.messageHandler.sendWithPromise("FilterWriter.writeUInt32",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeInt64=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt64'. Expected 1 argument. Function Signature: writeInt64(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt64' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt64' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeInt64(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeInt64",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt64=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt64'. Expected 1 argument. Function Signature: writeUInt64(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt64' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt64' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt64(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUInt64",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeString=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeString'. Expected 1 argument. Function Signature: writeString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeString(string).");
return b.messageHandler.sendWithPromise("FilterWriter.writeString",{writer:this.id,str:a},this.userPriority)};b.FilterWriter.prototype.writeFilter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeFilter'. Expected 1 argument. Function Signature: writeFilter(PDFNet.FilterReader)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterReader)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'writeFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: writeFilter(PDFNet.FilterReader).");throw new TypeError("1st input argument '"+a+"' in function 'writeFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: writeFilter(PDFNet.FilterReader).");}return b.messageHandler.sendWithPromise("FilterWriter.writeFilter",{writer:this.id,
reader:a.id},this.userPriority)};b.FilterWriter.prototype.writeLine=function(a,c){"undefined"===typeof c&&(c=13);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeLine'. Expected 1 to 2 arguments. Function Signature: writeLine(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeLine' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a&&
null!==a)throw new TypeError("1st input argument '"+a+"' in function 'writeLine' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeLine(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'writeLine' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'writeLine' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: writeLine(string, number).");
return b.messageHandler.sendWithPromise("FilterWriter.writeLine",{writer:this.id,line:a,eol:c},this.userPriority)};b.FilterWriter.prototype.writeBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeBuffer'. Expected 1 argument. Function Signature: writeBuffer(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'writeBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: writeBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'writeBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: writeBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("FilterWriter.writeBuffer",
{writer:this.id,buf:c},this.userPriority)};b.OCG.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("ocgCreate",{pdfdoc:a.id,name:c},this.userPriority).then(function(a){return"0"===a?null:new b.OCG(a)})};b.OCG.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("ocgCreateFromObj",{ocg_dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCG(a)})};b.OCG.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("OCG.copy",{ocg:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCG(a)})};b.OCG.prototype.getSDFObj=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("OCG.getSDFObj",{ocg:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCG.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("OCG.isValid",
{ocg:this.id},this.userPriority)};b.OCG.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("OCG.getName",{c:this.id},this.userPriority)};b.OCG.prototype.setName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("OCG.setName",{c:this.id,value:a},this.userPriority)};b.OCG.prototype.getIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getIntent'. Expected 0 arguments. Function Signature: getIntent()");return b.messageHandler.sendWithPromise("OCG.getIntent",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCG.prototype.setIntent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntent'. Expected 1 argument. Function Signature: setIntent(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setIntent' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setIntent(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setIntent' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setIntent(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("OCG.setIntent",{c:this.id,value:a.id},this.userPriority)};b.OCG.prototype.hasUsage=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasUsage'. Expected 0 arguments. Function Signature: hasUsage()");return b.messageHandler.sendWithPromise("OCG.hasUsage",{c:this.id},this.userPriority)};b.OCG.prototype.getUsage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUsage'. Expected 1 argument. Function Signature: getUsage(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getUsage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getUsage' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getUsage(string).");return b.messageHandler.sendWithPromise("OCG.getUsage",{c:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCG.prototype.getCurrentState=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentState'. Expected 1 argument. Function Signature: getCurrentState(PDFNet.OCGContext)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getCurrentState' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: getCurrentState(PDFNet.OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'getCurrentState' is of type '"+
typeof a+"'. Expected type 'OCGContext'. Function Signature: getCurrentState(PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("OCG.getCurrentState",{c:this.id,ctx:a.id},this.userPriority)};b.OCG.prototype.setCurrentState=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCurrentState'. Expected 2 arguments. Function Signature: setCurrentState(PDFNet.OCGContext, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGContext)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCurrentState' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setCurrentState(PDFNet.OCGContext, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setCurrentState' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: setCurrentState(PDFNet.OCGContext, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setCurrentState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setCurrentState(PDFNet.OCGContext, boolean).");return b.messageHandler.sendWithPromise("OCG.setCurrentState",{c:this.id,ctx:a.id,state:c},this.userPriority)};b.OCG.prototype.getInitialState=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitialState'. Expected 1 argument. Function Signature: getInitialState(PDFNet.OCGConfig)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGConfig)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getInitialState' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: getInitialState(PDFNet.OCGConfig).");throw new TypeError("1st input argument '"+a+"' in function 'getInitialState' is of type '"+
typeof a+"'. Expected type 'OCGConfig'. Function Signature: getInitialState(PDFNet.OCGConfig).");}return b.messageHandler.sendWithPromise("OCG.getInitialState",{c:this.id,cfg:a.id},this.userPriority)};b.OCG.prototype.setInitialState=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitialState'. Expected 2 arguments. Function Signature: setInitialState(PDFNet.OCGConfig, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGConfig)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInitialState' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: setInitialState(PDFNet.OCGConfig, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setInitialState' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: setInitialState(PDFNet.OCGConfig, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInitialState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setInitialState(PDFNet.OCGConfig, boolean).");return b.messageHandler.sendWithPromise("OCG.setInitialState",{c:this.id,cfg:a.id,state:c},this.userPriority)};b.OCG.prototype.isLocked=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLocked'. Expected 1 argument. Function Signature: isLocked(PDFNet.OCGConfig)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'isLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGConfig)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'isLocked' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: isLocked(PDFNet.OCGConfig).");throw new TypeError("1st input argument '"+a+"' in function 'isLocked' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: isLocked(PDFNet.OCGConfig).");
}return b.messageHandler.sendWithPromise("OCG.isLocked",{c:this.id,cfg:a.id},this.userPriority)};b.OCG.prototype.setLocked=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLocked'. Expected 2 arguments. Function Signature: setLocked(PDFNet.OCGConfig, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.OCGConfig)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setLocked' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: setLocked(PDFNet.OCGConfig, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setLocked' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: setLocked(PDFNet.OCGConfig, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setLocked' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setLocked(PDFNet.OCGConfig, boolean).");return b.messageHandler.sendWithPromise("OCG.setLocked",{c:this.id,cfg:a.id,state:c},this.userPriority)};b.OCGConfig.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("ocgConfigCreateFromObj",{dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCGConfig(a)})};b.OCGConfig.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.PDFDoc, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: create(PDFNet.PDFDoc, boolean).");return b.messageHandler.sendWithPromise("ocgConfigCreate",{pdfdoc:a.id,default_config:c},this.userPriority).then(function(a){return"0"===a?null:new b.OCGConfig(a)})};b.OCGConfig.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("OCGConfig.copy",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCGConfig(a)})};b.OCGConfig.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("OCGConfig.getSDFObj",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCGConfig.prototype.getOrder=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOrder'. Expected 0 arguments. Function Signature: getOrder()");return b.messageHandler.sendWithPromise("OCGConfig.getOrder",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCGConfig.prototype.setOrder=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOrder'. Expected 1 argument. Function Signature: setOrder(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOrder' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setOrder' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setOrder(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setOrder' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setOrder(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("OCGConfig.setOrder",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("OCGConfig.getName",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("OCGConfig.setName",
{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getCreator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreator'. Expected 0 arguments. Function Signature: getCreator()");return b.messageHandler.sendWithPromise("OCGConfig.getCreator",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setCreator=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreator'. Expected 1 argument. Function Signature: setCreator(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCreator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCreator(string).");return b.messageHandler.sendWithPromise("OCGConfig.setCreator",{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getInitBaseState=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitBaseState'. Expected 0 arguments. Function Signature: getInitBaseState()");return b.messageHandler.sendWithPromise("OCGConfig.getInitBaseState",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setInitBaseState=function(a){"undefined"===typeof a&&(a="ON");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitBaseState'. Expected at most 1 arguments. Function Signature: setInitBaseState(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitBaseState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'setInitBaseState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setInitBaseState(string).");return b.messageHandler.sendWithPromise("OCGConfig.setInitBaseState",{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getInitOnStates=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitOnStates'. Expected 0 arguments. Function Signature: getInitOnStates()");return b.messageHandler.sendWithPromise("OCGConfig.getInitOnStates",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCGConfig.prototype.setInitOnStates=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitOnStates'. Expected 1 argument. Function Signature: setInitOnStates(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitOnStates' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInitOnStates' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setInitOnStates(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setInitOnStates' is of type '"+typeof a+
"'. Expected type 'Obj'. Function Signature: setInitOnStates(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setInitOnStates",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getInitOffStates=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitOffStates'. Expected 0 arguments. Function Signature: getInitOffStates()");return b.messageHandler.sendWithPromise("OCGConfig.getInitOffStates",{c:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.OCGConfig.prototype.setInitOffStates=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitOffStates'. Expected 1 argument. Function Signature: setInitOffStates(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitOffStates' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInitOffStates' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setInitOffStates(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setInitOffStates' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setInitOffStates(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setInitOffStates",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntent'. Expected 0 arguments. Function Signature: getIntent()");
return b.messageHandler.sendWithPromise("OCGConfig.getIntent",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCGConfig.prototype.setIntent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntent'. Expected 1 argument. Function Signature: setIntent(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setIntent' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setIntent(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setIntent' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setIntent(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setIntent",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getLockedOCGs=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLockedOCGs'. Expected 0 arguments. Function Signature: getLockedOCGs()");return b.messageHandler.sendWithPromise("OCGConfig.getLockedOCGs",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCGConfig.prototype.setLockedOCGs=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLockedOCGs'. Expected 1 argument. Function Signature: setLockedOCGs(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLockedOCGs' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setLockedOCGs' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setLockedOCGs(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setLockedOCGs' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setLockedOCGs(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("OCGConfig.setLockedOCGs",{c:this.id,value:a.id},this.userPriority)};b.OCGContext.createFromConfig=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromConfig'. Expected 1 argument. Function Signature: createFromConfig(PDFNet.OCGConfig)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromConfig' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGConfig)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromConfig' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: createFromConfig(PDFNet.OCGConfig).");throw new TypeError("1st input argument '"+a+"' in function 'createFromConfig' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: createFromConfig(PDFNet.OCGConfig).");}return b.messageHandler.sendWithPromise("ocgContextCreateFromConfig",
{cfg:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.OCGContext(a);createdObjects.push({name:a.name,id:a.id});return a})};b.OCGContext.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("OCGContext.copy",{c:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.OCGContext(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.OCGContext.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("OCGContext.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.OCGContext.prototype.getState=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getState'. Expected 1 argument. Function Signature: getState(PDFNet.OCG)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.OCG)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getState' is of type '"+a.name+"'. Expected type 'OCG'. Function Signature: getState(PDFNet.OCG).");throw new TypeError("1st input argument '"+a+"' in function 'getState' is of type '"+typeof a+"'. Expected type 'OCG'. Function Signature: getState(PDFNet.OCG).");}return b.messageHandler.sendWithPromise("OCGContext.getState",{c:this.id,grp:a.id},this.userPriority)};b.OCGContext.prototype.setState=function(a,
c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setState'. Expected 2 arguments. Function Signature: setState(PDFNet.OCG, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCG)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setState' is of type '"+a.name+"'. Expected type 'OCG'. Function Signature: setState(PDFNet.OCG, boolean).");
throw new TypeError("1st input argument '"+a+"' in function 'setState' is of type '"+typeof a+"'. Expected type 'OCG'. Function Signature: setState(PDFNet.OCG, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setState(PDFNet.OCG, boolean).");
return b.messageHandler.sendWithPromise("OCGContext.setState",{c:this.id,grp:a.id,state:c},this.userPriority)};b.OCGContext.prototype.resetStates=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'resetStates'. Expected 1 argument. Function Signature: resetStates(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'resetStates' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'resetStates' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: resetStates(boolean).");return b.messageHandler.sendWithPromise("OCGContext.resetStates",{c:this.id,all_on:a},this.userPriority)};b.OCGContext.prototype.setNonOCDrawing=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNonOCDrawing'. Expected 1 argument. Function Signature: setNonOCDrawing(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNonOCDrawing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNonOCDrawing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setNonOCDrawing(boolean).");return b.messageHandler.sendWithPromise("OCGContext.setNonOCDrawing",{c:this.id,draw_non_OC:a},this.userPriority)};b.OCGContext.prototype.getNonOCDrawing=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNonOCDrawing'. Expected 0 arguments. Function Signature: getNonOCDrawing()");return b.messageHandler.sendWithPromise("OCGContext.getNonOCDrawing",{c:this.id},this.userPriority)};b.OCGContext.prototype.setOCDrawMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOCDrawMode'. Expected 1 argument. Function Signature: setOCDrawMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCDrawMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOCDrawMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOCDrawMode(number).");return b.messageHandler.sendWithPromise("OCGContext.setOCDrawMode",{c:this.id,oc_draw_mode:a},this.userPriority)};b.OCGContext.prototype.getOCMode=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCMode'. Expected 0 arguments. Function Signature: getOCMode()");return b.messageHandler.sendWithPromise("OCGContext.getOCMode",{c:this.id},this.userPriority)};b.OCMD.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ocmdCreateFromObj",{ocmd_dict:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.OCMD(a)})};b.OCMD.create=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Obj, number).");return b.messageHandler.sendWithPromise("ocmdCreate",{pdfdoc:a.id,ocgs:c.id,vis_policy:d},this.userPriority).then(function(a){return"0"===a?null:new b.OCMD(a)})};b.OCMD.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("OCMD.copy",{ocmd:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCMD(a)})};b.OCMD.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("OCMD.getSDFObj",{ocmd:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCMD.prototype.getOCGs=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCGs'. Expected 0 arguments. Function Signature: getOCGs()");return b.messageHandler.sendWithPromise("OCMD.getOCGs",{ocmd:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCMD.prototype.getVisibilityExpression=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibilityExpression'. Expected 0 arguments. Function Signature: getVisibilityExpression()");
return b.messageHandler.sendWithPromise("OCMD.getVisibilityExpression",{ocmd:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.OCMD.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("OCMD.isValid",{ocmd:this.id},this.userPriority)};b.OCMD.prototype.isCurrentlyVisible=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isCurrentlyVisible'. Expected 1 argument. Function Signature: isCurrentlyVisible(PDFNet.OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isCurrentlyVisible' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'isCurrentlyVisible' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: isCurrentlyVisible(PDFNet.OCGContext).");
throw new TypeError("1st input argument '"+a+"' in function 'isCurrentlyVisible' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: isCurrentlyVisible(PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("OCMD.isCurrentlyVisible",{ocmd:this.id,ctx:a.id},this.userPriority)};b.OCMD.prototype.getVisibilityPolicy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibilityPolicy'. Expected 0 arguments. Function Signature: getVisibilityPolicy()");
return b.messageHandler.sendWithPromise("OCMD.getVisibilityPolicy",{ocmd:this.id},this.userPriority)};b.OCMD.prototype.setVisibilityPolicy=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVisibilityPolicy'. Expected 1 argument. Function Signature: setVisibilityPolicy(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVisibilityPolicy' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVisibilityPolicy' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVisibilityPolicy(number).");return b.messageHandler.sendWithPromise("OCMD.setVisibilityPolicy",{ocmd:this.id,vis_policy:a},this.userPriority)};b.PDFACompliance.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFACompliance.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFACompliance.prototype.getErrorCount=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getErrorCount'. Expected 0 arguments. Function Signature: getErrorCount()");return b.messageHandler.sendWithPromise("PDFACompliance.getErrorCount",{pdfac:this.id},this.userPriority)};b.PDFACompliance.prototype.getError=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getError'. Expected 1 argument. Function Signature: getError(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getError' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getError' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getError(number).");return b.messageHandler.sendWithPromise("PDFACompliance.getError",{pdfac:this.id,idx:a},this.userPriority)};b.PDFACompliance.prototype.getRefObjCount=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObjCount'. Expected 1 argument. Function Signature: getRefObjCount(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRefObjCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRefObjCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getRefObjCount(number).");
return b.messageHandler.sendWithPromise("PDFACompliance.getRefObjCount",{pdfac:this.id,id:a},this.userPriority)};b.PDFACompliance.prototype.getRefObj=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObj'. Expected 2 arguments. Function Signature: getRefObj(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRefObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRefObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getRefObj(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getRefObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getRefObj' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getRefObj(number, number).");
return b.messageHandler.sendWithPromise("PDFACompliance.getRefObj",{pdfac:this.id,id:a,err_idx:c},this.userPriority)};b.PDFACompliance.getPDFAErrorMessage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPDFAErrorMessage'. Expected 1 argument. Function Signature: getPDFAErrorMessage(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPDFAErrorMessage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPDFAErrorMessage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPDFAErrorMessage(number).");return b.messageHandler.sendWithPromise("pdfaComplianceGetPDFAErrorMessage",{id:a},this.userPriority)};b.PDFACompliance.prototype.saveAsFromFileName=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsFromFileName'. Expected 1 to 2 arguments. Function Signature: saveAsFromFileName(string, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveAsFromFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveAsFromFileName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: saveAsFromFileName(string, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveAsFromFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveAsFromFileName' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: saveAsFromFileName(string, boolean).");return b.messageHandler.sendWithPromise("PDFACompliance.saveAsFromFileName",{pdfac:this.id,file_path:a,linearized:c},this.userPriority)};b.PDFACompliance.prototype.saveAsFromBuffer=function(a){"undefined"===typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsFromBuffer'. Expected at most 1 arguments. Function Signature: saveAsFromBuffer(boolean)");
if(a instanceof Promise)throw new TypeError("3rd input argument in function 'saveAsFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("3rd input argument '"+a+"' in function 'saveAsFromBuffer' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: saveAsFromBuffer(boolean).");return b.messageHandler.sendWithPromise("PDFACompliance.saveAsFromBuffer",{pdfac:this.id,linearized:a},this.userPriority).then(function(a){return new Uint8Array(a)})};
b.AttrObj.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("attrObjCreate",{dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.AttrObj(a)})};b.AttrObj.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("AttrObj.copy",{a:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.AttrObj(a)})};b.AttrObj.prototype.getOwner=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOwner'. Expected 0 arguments. Function Signature: getOwner()");return b.messageHandler.sendWithPromise("AttrObj.getOwner",{obj:this.id},this.userPriority)};b.AttrObj.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("AttrObj.getSDFObj",{obj:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ClassMap.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("classMapCreate",{dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ClassMap(a)})};b.ClassMap.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("ClassMap.copy",{p:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.ClassMap(a)})};b.ClassMap.prototype.isValid=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("ClassMap.isValid",{map:this.id},this.userPriority)};b.ClassMap.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("ClassMap.getSDFObj",
{map:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ContentItem.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.copy",{c:this},this.userPriority).then(function(a){return new b.ContentItem(a)})};b.ContentItem.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getType",{item:this},this.userPriority)};b.ContentItem.prototype.getParent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParent'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="ContentItem.getParent";return b.messageHandler.sendWithPromise("ContentItem.getParent",{item:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.item,a);return new b.SElement(c.result.obj,c.result.k)})};b.ContentItem.prototype.getPage=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPage'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="ContentItem.getPage";return b.messageHandler.sendWithPromise("ContentItem.getPage",{item:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.item,a);return new b.Page(c.result)})};b.ContentItem.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getSDFObj",{item:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.ContentItem.prototype.getMCID=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCID'. Expected 0 arguments. Function Signature: getMCID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getMCID'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getMCID",
{item:this},this.userPriority)};b.ContentItem.prototype.getContainingStm=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContainingStm'. Expected 0 arguments. Function Signature: getContainingStm()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getContainingStm'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getContainingStm",{item:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ContentItem.prototype.getStmOwner=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStmOwner'. Expected 0 arguments. Function Signature: getStmOwner()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStmOwner'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getStmOwner",{item:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ContentItem.prototype.getRefObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObj'. Expected 0 arguments. Function Signature: getRefObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getRefObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getRefObj",{item:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.RoleMap.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("roleMapCreate",{dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.RoleMap(a)})};
b.RoleMap.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("RoleMap.copy",{p:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.RoleMap(a)})};b.RoleMap.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");
return b.messageHandler.sendWithPromise("RoleMap.isValid",{map:this.id},this.userPriority)};b.RoleMap.prototype.getDirectMap=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDirectMap'. Expected 1 argument. Function Signature: getDirectMap(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getDirectMap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getDirectMap' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getDirectMap(string).");return b.messageHandler.sendWithPromise("RoleMap.getDirectMap",{map:this.id,type:a},this.userPriority)};b.RoleMap.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("RoleMap.getSDFObj",{map:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SElement.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("sElementCreate",{dict:a.id},this.userPriority).then(function(a){return new b.SElement(a)})};b.SElement.createFromPDFDoc=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromPDFDoc'. Expected 2 arguments. Function Signature: createFromPDFDoc(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromPDFDoc' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromPDFDoc' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createFromPDFDoc' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromPDFDoc(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("sElementCreateFromPDFDoc",{doc:a.id,struct_type:c},this.userPriority).then(function(a){return new b.SElement(a)})};b.SElement.prototype.insert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(PDFNet.SElement, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SElement)&&a&&"SElement"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'insert' is of type '"+a.name+"'. Expected type 'SElement'. Function Signature: insert(PDFNet.SElement, number).");throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+
typeof a+"'. Expected type 'SElement'. Function Signature: insert(PDFNet.SElement, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insert(PDFNet.SElement, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'insert'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'insert'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var d=this;this.yieldFunction=
"SElement.insert";return b.messageHandler.sendWithPromise("SElement.insert",{e:this,kid:a,insert_before:c},this.userPriority).then(function(b){d.yieldFunction=void 0;l(b.e,d);l(b.kid,a)})};b.SElement.prototype.createContentItem=function(a,c,d){"undefined"===typeof d&&(d=-1);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createContentItem'. Expected 2 to 3 arguments. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createContentItem' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number).");throw new TypeError("1st input argument '"+
a+"' in function 'createContentItem' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createContentItem' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number).");
throw new TypeError("2nd input argument '"+c+"' in function 'createContentItem' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createContentItem' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createContentItem(PDFNet.PDFDoc, PDFNet.Page, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'createContentItem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var e=this;this.yieldFunction="SElement.createContentItem";return b.messageHandler.sendWithPromise("SElement.createContentItem",
{e:this,doc:a.id,page:c.id,insert_before:d},this.userPriority).then(function(a){e.yieldFunction=void 0;l(a.e,e);return a.result})};b.SElement.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.isValid",{e:this},this.userPriority)};b.SElement.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getType",{e:this},this.userPriority)};b.SElement.prototype.getNumKids=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumKids'. Expected 0 arguments. Function Signature: getNumKids()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumKids'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getNumKids",{e:this},this.userPriority)};b.SElement.prototype.isContentItem=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isContentItem'. Expected 1 argument. Function Signature: isContentItem(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'isContentItem' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: isContentItem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isContentItem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.isContentItem",
{e:this,index:a},this.userPriority)};b.SElement.prototype.getAsContentItem=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsContentItem'. Expected 1 argument. Function Signature: getAsContentItem(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getAsContentItem' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAsContentItem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAsContentItem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAsContentItem",{e:this,index:a},this.userPriority).then(function(a){return new b.ContentItem(a)})};
b.SElement.prototype.getAsStructElem=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsStructElem'. Expected 1 argument. Function Signature: getAsStructElem(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsStructElem' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsStructElem' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getAsStructElem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAsStructElem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAsStructElem",{e:this,index:a},this.userPriority).then(function(a){return new b.SElement(a)})};
b.SElement.prototype.getParent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParent'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getParent",
{e:this},this.userPriority).then(function(a){return new b.SElement(a)})};b.SElement.prototype.getStructTreeRoot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructTreeRoot'. Expected 0 arguments. Function Signature: getStructTreeRoot()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStructTreeRoot'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getStructTreeRoot",{e:this},this.userPriority).then(function(a){return"0"===a?null:new b.STree(a)})};b.SElement.prototype.hasTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTitle'. Expected 0 arguments. Function Signature: hasTitle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasTitle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasTitle",{e:this},this.userPriority)};b.SElement.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getTitle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getTitle",{e:this},this.userPriority)};b.SElement.prototype.getID=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getID'. Expected 0 arguments. Function Signature: getID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getID'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getID",{e:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SElement.prototype.hasActualText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasActualText'. Expected 0 arguments. Function Signature: hasActualText()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasActualText'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasActualText",{e:this},this.userPriority)};b.SElement.prototype.getActualText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getActualText'. Expected 0 arguments. Function Signature: getActualText()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getActualText'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getActualText",{e:this},this.userPriority)};b.SElement.prototype.hasAlt=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasAlt'. Expected 0 arguments. Function Signature: hasAlt()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasAlt'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasAlt",{e:this},this.userPriority)};b.SElement.prototype.getAlt=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAlt'. Expected 0 arguments. Function Signature: getAlt()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAlt'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAlt",{e:this},this.userPriority)};b.SElement.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getSDFObj",{e:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.STree.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("sTreeCreate",{struct_dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.STree(a)})};
b.STree.createFromPDFDoc=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromPDFDoc'. Expected 1 argument. Function Signature: createFromPDFDoc(PDFNet.PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'createFromPDFDoc' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'createFromPDFDoc' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("sTreeCreateFromPDFDoc",{doc:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.STree(a)})};
b.STree.prototype.insert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(PDFNet.SElement, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SElement)&&a&&"SElement"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'insert' is of type '"+
a.name+"'. Expected type 'SElement'. Function Signature: insert(PDFNet.SElement, number).");throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+typeof a+"'. Expected type 'SElement'. Function Signature: insert(PDFNet.SElement, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insert(PDFNet.SElement, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'insert'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var d=this;this.yieldFunction="STree.insert";return b.messageHandler.sendWithPromise("STree.insert",
{tree:this.id,kid:a,insert_before:c},this.userPriority).then(function(b){d.yieldFunction=void 0;l(b.kid,a)})};b.STree.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("STree.copy",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.STree(a)})};b.STree.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("STree.isValid",{tree:this.id},this.userPriority)};b.STree.prototype.getNumKids=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumKids'. Expected 0 arguments. Function Signature: getNumKids()");return b.messageHandler.sendWithPromise("STree.getNumKids",{tree:this.id},this.userPriority)};b.STree.prototype.getKid=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKid'. Expected 1 argument. Function Signature: getKid(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getKid' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getKid' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getKid(number).");
return b.messageHandler.sendWithPromise("STree.getKid",{tree:this.id,index:a},this.userPriority).then(function(a){return new b.SElement(a)})};b.STree.prototype.getRoleMap=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRoleMap'. Expected 0 arguments. Function Signature: getRoleMap()");return b.messageHandler.sendWithPromise("STree.getRoleMap",{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.RoleMap(a)})};b.STree.prototype.getClassMap=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getClassMap'. Expected 0 arguments. Function Signature: getClassMap()");return b.messageHandler.sendWithPromise("STree.getClassMap",{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.ClassMap(a)})};b.STree.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("STree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Action.createGoto=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGoto'. Expected 1 argument. Function Signature: createGoto(PDFNet.Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGoto' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Destination)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createGoto' is of type '"+a.name+"'. Expected type 'Destination'. Function Signature: createGoto(PDFNet.Destination).");throw new TypeError("1st input argument '"+a+"' in function 'createGoto' is of type '"+typeof a+"'. Expected type 'Destination'. Function Signature: createGoto(PDFNet.Destination).");}return b.messageHandler.sendWithPromise("actionCreateGoto",{dest:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Action(a)})};b.Action.createGotoWithKey=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGotoWithKey'. Expected 2 arguments. Function Signature: createGotoWithKey(string, PDFNet.Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGotoWithKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createGotoWithKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createGotoWithKey(string, PDFNet.Destination).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoWithKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Destination)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createGotoWithKey' is of type '"+c.name+"'. Expected type 'Destination'. Function Signature: createGotoWithKey(string, PDFNet.Destination).");
throw new TypeError("2nd input argument '"+c+"' in function 'createGotoWithKey' is of type '"+typeof c+"'. Expected type 'Destination'. Function Signature: createGotoWithKey(string, PDFNet.Destination).");}return b.messageHandler.sendWithPromise("actionCreateGotoWithKey",{key:a,dest:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createGotoRemote=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGotoRemote'. Expected 2 arguments. Function Signature: createGotoRemote(PDFNet.FileSpec, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGotoRemote' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createGotoRemote' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: createGotoRemote(PDFNet.FileSpec, number).");throw new TypeError("1st input argument '"+a+"' in function 'createGotoRemote' is of type '"+
typeof a+"'. Expected type 'FileSpec'. Function Signature: createGotoRemote(PDFNet.FileSpec, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoRemote' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createGotoRemote' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createGotoRemote(PDFNet.FileSpec, number).");
return b.messageHandler.sendWithPromise("actionCreateGotoRemote",{file:a.id,page_num:c},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createGotoRemoteSetNewWindow=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGotoRemoteSetNewWindow'. Expected 3 arguments. Function Signature: createGotoRemoteSetNewWindow(PDFNet.FileSpec, number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FileSpec)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createGotoRemoteSetNewWindow' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: createGotoRemoteSetNewWindow(PDFNet.FileSpec, number, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: createGotoRemoteSetNewWindow(PDFNet.FileSpec, number, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createGotoRemoteSetNewWindow(PDFNet.FileSpec, number, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: createGotoRemoteSetNewWindow(PDFNet.FileSpec, number, boolean).");return b.messageHandler.sendWithPromise("actionCreateGotoRemoteSetNewWindow",{file:a.id,page_num:c,new_window:d},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createURI=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createURI'. Expected 2 arguments. Function Signature: createURI(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURI' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createURI' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURI(PDFNet.SDFDoc, string).");
throw new TypeError("1st input argument '"+a+"' in function 'createURI' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURI(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createURI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURI' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURI(PDFNet.SDFDoc, string).");
return b.messageHandler.sendWithPromise("actionCreateURI",{sdfdoc:a.id,uri:c},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createURIWithUString=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURIWithUString'. Expected 2 arguments. Function Signature: createURIWithUString(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURIWithUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createURIWithUString' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURIWithUString(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createURIWithUString' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURIWithUString(PDFNet.SDFDoc, string).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createURIWithUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURIWithUString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURIWithUString(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateURIWithUString",{sdfdoc:a.id,current:c},this.userPriority).then(function(a){return"0"===
a?null:new b.Action(a)})};b.Action.createSubmitForm=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSubmitForm'. Expected 1 argument. Function Signature: createSubmitForm(PDFNet.FileSpec)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSubmitForm' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createSubmitForm' is of type '"+
a.name+"'. Expected type 'FileSpec'. Function Signature: createSubmitForm(PDFNet.FileSpec).");throw new TypeError("1st input argument '"+a+"' in function 'createSubmitForm' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: createSubmitForm(PDFNet.FileSpec).");}return b.messageHandler.sendWithPromise("actionCreateSubmitForm",{url:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createLaunch=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createLaunch'. Expected 2 arguments. Function Signature: createLaunch(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createLaunch' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createLaunch' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createLaunch(PDFNet.SDFDoc, string).");
throw new TypeError("1st input argument '"+a+"' in function 'createLaunch' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createLaunch(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createLaunch' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createLaunch' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createLaunch(PDFNet.SDFDoc, string).");
return b.messageHandler.sendWithPromise("actionCreateLaunch",{sdfdoc:a.id,path:c},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createHideField=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createHideField'. Expected 3 arguments. Function Signature: createHideField(PDFNet.SDFDoc, number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createHideField' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createHideField(PDFNet.SDFDoc, number, string).");throw new TypeError("1st input argument '"+a+"' in function 'createHideField' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createHideField(PDFNet.SDFDoc, number, string).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createHideField' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createHideField(PDFNet.SDFDoc, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createHideField' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createHideField(PDFNet.SDFDoc, number, string).");return b.messageHandler.sendWithPromise("actionCreateHideField",{sdfdoc:a.id,list_length:c,field_list:d},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createImportData=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createImportData'. Expected 2 arguments. Function Signature: createImportData(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImportData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImportData' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: createImportData(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createImportData' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImportData(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImportData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createImportData' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createImportData(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateImportData",{sdfdoc:a.id,path:c},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createResetForm=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createResetForm'. Expected 1 argument. Function Signature: createResetForm(PDFNet.SDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createResetForm' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createResetForm' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createResetForm(PDFNet.SDFDoc).");throw new TypeError("1st input argument '"+a+
"' in function 'createResetForm' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createResetForm(PDFNet.SDFDoc).");}return b.messageHandler.sendWithPromise("actionCreateResetForm",{sdfdoc:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.createJavaScript=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createJavaScript'. Expected 2 arguments. Function Signature: createJavaScript(PDFNet.SDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createJavaScript' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createJavaScript(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+
a+"' in function 'createJavaScript' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createJavaScript(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createJavaScript' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createJavaScript(PDFNet.SDFDoc, string).");
return b.messageHandler.sendWithPromise("actionCreateJavaScript",{sdfdoc:a.id,script:c},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("actionCreate",{in_obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};
b.Action.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Action.copy",{in_action:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Action.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.Action)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: compare(PDFNet.Action).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: compare(PDFNet.Action).");
}return b.messageHandler.sendWithPromise("Action.compare",{action:this.id,in_action:a.id},this.userPriority)};b.Action.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Action.isValid",{action:this.id},this.userPriority)};b.Action.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Action.getType",{action:this.id},this.userPriority)};b.Action.prototype.getDest=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDest'. Expected 0 arguments. Function Signature: getDest()");return b.messageHandler.sendWithPromise("Action.getDest",{action:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Destination(a)})};b.Action.prototype.getNext=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNext'. Expected 0 arguments. Function Signature: getNext()");return b.messageHandler.sendWithPromise("Action.getNext",{action:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Action.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("Action.getSDFObj",{action:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Action.prototype.getFormActionFlag=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFormActionFlag'. Expected 1 argument. Function Signature: getFormActionFlag(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFormActionFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFormActionFlag(number).");return b.messageHandler.sendWithPromise("Action.getFormActionFlag",{action:this.id,flag:a},this.userPriority)};b.Action.prototype.setFormActionFlag=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFormActionFlag'. Expected 2 arguments. Function Signature: setFormActionFlag(number, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFormActionFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFormActionFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFormActionFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFormActionFlag(number, boolean).");return b.messageHandler.sendWithPromise("Action.setFormActionFlag",{action:this.id,flag:a,value:c},this.userPriority)};b.Action.prototype.needsWriteLock=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'needsWriteLock'. Expected 0 arguments. Function Signature: needsWriteLock()");
return b.messageHandler.sendWithPromise("Action.needsWriteLock",{action:this.id},this.userPriority)};b.Action.prototype.execute=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'execute'. Expected 0 arguments. Function Signature: execute()");return b.messageHandler.sendWithPromise("Action.execute",{action:this.id},this.userPriority)};b.Action.prototype.executeKeyStrokeAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'executeKeyStrokeAction'. Expected 1 argument. Function Signature: executeKeyStrokeAction(PDFNet.KeyStrokeEventData)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'executeKeyStrokeAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.KeyStrokeEventData)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'executeKeyStrokeAction' is of type '"+a.name+
"'. Expected type 'KeyStrokeEventData'. Function Signature: executeKeyStrokeAction(PDFNet.KeyStrokeEventData).");throw new TypeError("1st input argument '"+a+"' in function 'executeKeyStrokeAction' is of type '"+typeof a+"'. Expected type 'KeyStrokeEventData'. Function Signature: executeKeyStrokeAction(PDFNet.KeyStrokeEventData).");}return b.messageHandler.sendWithPromise("Action.executeKeyStrokeAction",{action:this.id,data:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.KeyStrokeActionResult(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeActionResult.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.isValid",{action_ret:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.getText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getText'. Expected 0 arguments. Function Signature: getText()");
return b.messageHandler.sendWithPromise("KeyStrokeActionResult.getText",{action_ret:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<
deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("KeyStrokeActionResult.copy",{action_ret:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.KeyStrokeActionResult(a);createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeEventData.create=function(a,c,d,e,h){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 5 arguments. Function Signature: create(string, string, string, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(string, string, string, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'create' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: create(string, string, string, number, number).");
return b.messageHandler.sendWithPromise("keyStrokeEventDataCreate",{field_name:a,current:c,change:d,selection_start:e,selection_end:h},this.userPriority).then(function(a){if("0"===a)return null;a=new b.KeyStrokeEventData(a);createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeEventData.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,
c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("KeyStrokeEventData.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.KeyStrokeEventData.prototype.copy=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("KeyStrokeEventData.copy",{data:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.KeyStrokeEventData(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Page.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("pageCreate",{page_dict:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};b.Page.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Page.copy",{p:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};b.Page.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Page.isValid",{page:this.id},this.userPriority)};b.Page.prototype.getIndex=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIndex'. Expected 0 arguments. Function Signature: getIndex()");
return b.messageHandler.sendWithPromise("Page.getIndex",{page:this.id},this.userPriority)};b.Page.prototype.getTriggerAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("Page.getTriggerAction",{page:this.id,trigger:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.getBox=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBox'. Expected 1 argument. Function Signature: getBox(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getBox(number).");return b.messageHandler.sendWithPromise("Page.getBox",{page:this.id,type:a},this.userPriority).then(function(a){return new b.Rect(a)})};b.Page.prototype.setBox=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBox'. Expected 2 arguments. Function Signature: setBox(number, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBox(number, PDFNet.Rect).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setBox' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: setBox(number, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'setBox' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: setBox(number, PDFNet.Rect).");
}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setBox'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Page.setBox",{page:this.id,type:a,box:c},this.userPriority)};b.Page.prototype.getCropBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCropBox'. Expected 0 arguments. Function Signature: getCropBox()");
return b.messageHandler.sendWithPromise("Page.getCropBox",{page:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Page.prototype.setCropBox=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCropBox'. Expected 1 argument. Function Signature: setCropBox(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCropBox' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCropBox' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setCropBox(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setCropBox' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setCropBox(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCropBox'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Page.setCropBox",{page:this.id,box:a},this.userPriority)};b.Page.prototype.getMediaBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMediaBox'. Expected 0 arguments. Function Signature: getMediaBox()");return b.messageHandler.sendWithPromise("Page.getMediaBox",{page:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Page.prototype.setMediaBox=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMediaBox'. Expected 1 argument. Function Signature: setMediaBox(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMediaBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setMediaBox' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setMediaBox(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setMediaBox' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setMediaBox(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setMediaBox'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Page.setMediaBox",{page:this.id,box:a},this.userPriority)};b.Page.prototype.getVisibleContentBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibleContentBox'. Expected 0 arguments. Function Signature: getVisibleContentBox()");return b.messageHandler.sendWithPromise("Page.getVisibleContentBox",{page:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Page.prototype.getRotation=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRotation'. Expected 0 arguments. Function Signature: getRotation()");return b.messageHandler.sendWithPromise("Page.getRotation",{page:this.id},this.userPriority)};b.Page.prototype.setRotation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Page.setRotation",{page:this.id,angle:a},this.userPriority)};b.Page.addRotations=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'addRotations'. Expected 2 arguments. Function Signature: addRotations(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addRotations' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addRotations(number, number).");if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'addRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addRotations' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addRotations(number, number).");return b.messageHandler.sendWithPromise("pageAddRotations",{r0:a,r1:c},this.userPriority)};b.Page.subtractRotations=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'subtractRotations'. Expected 2 arguments. Function Signature: subtractRotations(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'subtractRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'subtractRotations' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: subtractRotations(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'subtractRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'subtractRotations' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: subtractRotations(number, number).");return b.messageHandler.sendWithPromise("pageSubtractRotations",{r0:a,r1:c},this.userPriority)};b.Page.rotationToDegree=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rotationToDegree'. Expected 1 argument. Function Signature: rotationToDegree(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rotationToDegree' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rotationToDegree' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: rotationToDegree(number).");
return b.messageHandler.sendWithPromise("pageRotationToDegree",{r:a},this.userPriority)};b.Page.degreeToRotation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'degreeToRotation'. Expected 1 argument. Function Signature: degreeToRotation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'degreeToRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'degreeToRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: degreeToRotation(number).");return b.messageHandler.sendWithPromise("pageDegreeToRotation",{r:a},this.userPriority)};b.Page.prototype.getPageWidth=function(a){"undefined"===typeof a&&(a=b.Page.Box.e_crop);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageWidth'. Expected at most 1 arguments. Function Signature: getPageWidth(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getPageWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageWidth(number).");return b.messageHandler.sendWithPromise("Page.getPageWidth",{page:this.id,box_type:a},this.userPriority)};b.Page.prototype.getPageHeight=function(a){"undefined"===
typeof a&&(a=b.Page.Box.e_crop);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageHeight'. Expected at most 1 arguments. Function Signature: getPageHeight(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageHeight' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageHeight' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPageHeight(number).");return b.messageHandler.sendWithPromise("Page.getPageHeight",{page:this.id,box_type:a},this.userPriority)};b.Page.prototype.getDefaultMatrix=function(a,c,d){"undefined"===typeof a&&(a=!1);"undefined"===typeof c&&(c=b.Page.Box.e_crop);"undefined"===typeof d&&(d=b.Page.Rotate.e_0);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultMatrix'. Expected at most 3 arguments. Function Signature: getDefaultMatrix(boolean, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getDefaultMatrix' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: getDefaultMatrix(boolean, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getDefaultMatrix' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getDefaultMatrix(boolean, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getDefaultMatrix' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: getDefaultMatrix(boolean, number, number).");return b.messageHandler.sendWithPromise("Page.getDefaultMatrix",{page:this.id,flip_y:a,box_type:c,angle:d},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Page.prototype.getAnnots=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAnnots'. Expected 0 arguments. Function Signature: getAnnots()");return b.messageHandler.sendWithPromise("Page.getAnnots",
{page:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.getNumAnnots=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumAnnots'. Expected 0 arguments. Function Signature: getNumAnnots()");return b.messageHandler.sendWithPromise("Page.getNumAnnots",{page:this.id},this.userPriority)};b.Page.prototype.getAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAnnot'. Expected 1 argument. Function Signature: getAnnot(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAnnot' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAnnot(number).");return b.messageHandler.sendWithPromise("Page.getAnnot",{page:this.id,index:a},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};
b.Page.prototype.annotInsert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotInsert'. Expected 2 arguments. Function Signature: annotInsert(number, PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'annotInsert' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: annotInsert(number, PDFNet.Annot).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'annotInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Annot)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'annotInsert' is of type '"+c.name+"'. Expected type 'Annot'. Function Signature: annotInsert(number, PDFNet.Annot).");throw new TypeError("2nd input argument '"+
c+"' in function 'annotInsert' is of type '"+typeof c+"'. Expected type 'Annot'. Function Signature: annotInsert(number, PDFNet.Annot).");}return b.messageHandler.sendWithPromise("Page.annotInsert",{page:this.id,pos:a,annot:c.id},this.userPriority)};b.Page.prototype.annotPushBack=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotPushBack'. Expected 1 argument. Function Signature: annotPushBack(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotPushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'annotPushBack' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: annotPushBack(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotPushBack' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotPushBack(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("Page.annotPushBack",{page:this.id,annot:a.id},this.userPriority)};
b.Page.prototype.annotPushFront=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotPushFront'. Expected 1 argument. Function Signature: annotPushFront(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotPushFront' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'annotPushFront' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: annotPushFront(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotPushFront' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotPushFront(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("Page.annotPushFront",{page:this.id,annot:a.id},this.userPriority)};b.Page.prototype.annotRemove=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotRemove'. Expected 1 argument. Function Signature: annotRemove(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotRemove' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'annotRemove' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: annotRemove(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotRemove' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotRemove(PDFNet.Annot).");
}return b.messageHandler.sendWithPromise("Page.annotRemove",{page:this.id,annot:a.id},this.userPriority)};b.Page.prototype.annotRemoveByIndex=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotRemoveByIndex'. Expected 1 argument. Function Signature: annotRemoveByIndex(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotRemoveByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'annotRemoveByIndex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: annotRemoveByIndex(number).");return b.messageHandler.sendWithPromise("Page.annotRemoveByIndex",{page:this.id,index:a},this.userPriority)};b.Page.prototype.scale=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'scale'. Expected 1 argument. Function Signature: scale(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'scale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: scale(number).");return b.messageHandler.sendWithPromise("Page.scale",{page:this.id,scale:a},this.userPriority)};b.Page.prototype.flattenField=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'flattenField'. Expected 1 argument. Function Signature: flattenField(PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Field)&&a&&"Field"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'flattenField' is of type '"+a.name+"'. Expected type 'Field'. Function Signature: flattenField(PDFNet.Field).");
throw new TypeError("1st input argument '"+a+"' in function 'flattenField' is of type '"+typeof a+"'. Expected type 'Field'. Function Signature: flattenField(PDFNet.Field).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'flattenField'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="Page.flattenField";
return b.messageHandler.sendWithPromise("Page.flattenField",{page:this.id,field_to_flatten:a},this.userPriority).then(function(b){c.yieldFunction=void 0;l(b.field_to_flatten,a)})};b.Page.prototype.hasTransition=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTransition'. Expected 0 arguments. Function Signature: hasTransition()");return b.messageHandler.sendWithPromise("Page.hasTransition",{page:this.id},this.userPriority)};b.Page.prototype.getUserUnitSize=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUserUnitSize'. Expected 0 arguments. Function Signature: getUserUnitSize()");return b.messageHandler.sendWithPromise("Page.getUserUnitSize",{page:this.id},this.userPriority)};b.Page.prototype.setUserUnitSize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUserUnitSize'. Expected 1 argument. Function Signature: setUserUnitSize(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUserUnitSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUserUnitSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setUserUnitSize(number).");return b.messageHandler.sendWithPromise("Page.setUserUnitSize",{page:this.id,unit_size:a},this.userPriority)};b.Page.prototype.getResourceDict=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getResourceDict'. Expected 0 arguments. Function Signature: getResourceDict()");return b.messageHandler.sendWithPromise("Page.getResourceDict",{page:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.getContents=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContents'. Expected 0 arguments. Function Signature: getContents()");
return b.messageHandler.sendWithPromise("Page.getContents",{page:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.getThumb=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getThumb'. Expected 0 arguments. Function Signature: getThumb()");return b.messageHandler.sendWithPromise("Page.getThumb",{page:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.getSDFObj=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Page.getSDFObj",{page:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Page.prototype.findInheritedAttribute=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findInheritedAttribute'. Expected 1 argument. Function Signature: findInheritedAttribute(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'findInheritedAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findInheritedAttribute' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findInheritedAttribute(string).");return b.messageHandler.sendWithPromise("Page.findInheritedAttribute",{page:this.id,attrib:a},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Annot.create=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Rect)&&d&&"Rect"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'create' is of type '"+
d.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect).");throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, number, PDFNet.Rect).");}if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'create'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("annotCreate",{doc:a.id,type:c,pos:d},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};b.Annot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("annotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Annot(a)})};b.Annot.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Annot.copy",{d:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};b.Annot.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: compare(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: compare(PDFNet.Annot).");
}return b.messageHandler.sendWithPromise("Annot.compare",{annot:this.id,d:a.id},this.userPriority)};b.Annot.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Annot.isValid",{annot:this.id},this.userPriority)};b.Annot.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("Annot.getSDFObj",{annot:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Annot.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Annot.getType",{annot:this.id},this.userPriority)};b.Annot.prototype.isMarkup=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isMarkup'. Expected 0 arguments. Function Signature: isMarkup()");return b.messageHandler.sendWithPromise("Annot.isMarkup",{annot:this.id},this.userPriority)};b.Annot.prototype.getRect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRect'. Expected 0 arguments. Function Signature: getRect()");return b.messageHandler.sendWithPromise("Annot.getRect",{annot:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};
b.Annot.prototype.getVisibleContentBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibleContentBox'. Expected 0 arguments. Function Signature: getVisibleContentBox()");return b.messageHandler.sendWithPromise("Annot.getVisibleContentBox",{annot:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Annot.prototype.setRect=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRect'. Expected 1 argument. Function Signature: setRect(PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setRect(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setRect(PDFNet.Rect).");
}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setRect",{annot:this.id,pos:a},this.userPriority)};b.Annot.prototype.resize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'resize'. Expected 1 argument. Function Signature: resize(PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'resize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'resize' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: resize(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'resize' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: resize(PDFNet.Rect).");
}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'resize'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.resize",{annot:this.id,newrect:a},this.userPriority)};b.Annot.prototype.setContents=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContents'. Expected 1 argument. Function Signature: setContents(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContents' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setContents' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setContents(string).");return b.messageHandler.sendWithPromise("Annot.setContents",{annot:this.id,contents:a},this.userPriority)};b.Annot.prototype.getContents=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContents'. Expected 0 arguments. Function Signature: getContents()");return b.messageHandler.sendWithPromise("Annot.getContents",{annot:this.id},this.userPriority)};b.Annot.prototype.getTriggerAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("Annot.getTriggerAction",{annot:this.id,trigger:a},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Annot.prototype.getCustomData=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCustomData'. Expected 1 argument. Function Signature: getCustomData(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCustomData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getCustomData' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: getCustomData(string).");return b.messageHandler.sendWithPromise("Annot.getCustomData",{annot:this.id,key:a},this.userPriority)};b.Annot.prototype.setCustomData=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCustomData'. Expected 2 arguments. Function Signature: setCustomData(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCustomData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCustomData' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCustomData(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCustomData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setCustomData' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setCustomData(string, string).");
return b.messageHandler.sendWithPromise("Annot.setCustomData",{annot:this.id,key:a,value:c},this.userPriority)};b.Annot.prototype.deleteCustomData=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'deleteCustomData'. Expected 1 argument. Function Signature: deleteCustomData(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'deleteCustomData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'deleteCustomData' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: deleteCustomData(string).");return b.messageHandler.sendWithPromise("Annot.deleteCustomData",{annot:this.id,key:a},this.userPriority)};b.Annot.prototype.getPage=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");
return b.messageHandler.sendWithPromise("Annot.getPage",{annot:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};b.Annot.prototype.setPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPage'. Expected 1 argument. Function Signature: setPage(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: setPage(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'setPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: setPage(PDFNet.Page).");}return b.messageHandler.sendWithPromise("Annot.setPage",{annot:this.id,page:a.id},this.userPriority)};b.Annot.prototype.getUniqueID=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUniqueID'. Expected 0 arguments. Function Signature: getUniqueID()");return b.messageHandler.sendWithPromise("Annot.getUniqueID",{annot:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Annot.prototype.getDate=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDate'. Expected 0 arguments. Function Signature: getDate()");
return b.messageHandler.sendWithPromise("Annot.getDate",{annot:this.id},this.userPriority).then(function(a){return new b.Date(a)})};b.Annot.prototype.setDate=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDate'. Expected 1 argument. Function Signature: setDate(PDFNet.Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Date)&&a&&"Date"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setDate' is of type '"+a.name+"'. Expected type 'Date'. Function Signature: setDate(PDFNet.Date).");throw new TypeError("1st input argument '"+a+"' in function 'setDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setDate(PDFNet.Date).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setDate",{annot:this.id,date:a},this.userPriority)};b.Annot.prototype.getFlag=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlag'. Expected 1 argument. Function Signature: getFlag(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFlag(number).");return b.messageHandler.sendWithPromise("Annot.getFlag",{annot:this.id,flag:a},this.userPriority)};b.Annot.prototype.setFlag=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlag'. Expected 2 arguments. Function Signature: setFlag(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFlag(number, boolean).");
return b.messageHandler.sendWithPromise("Annot.setFlag",{annot:this.id,flag:a,value:c},this.userPriority)};b.AnnotBorderStyle.create=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 4 arguments. Function Signature: create(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");return b.messageHandler.sendWithPromise("annotBorderStyleCreate",{s:a,b_width:c,b_hr:d,b_vr:e},this.userPriority).then(function(a){if("0"===a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.AnnotBorderStyle.createWithDashPattern=function(a,c,d,e,h){var f=
h;h instanceof Array&&(f=new Float64Array(h));g.isArrayBuffer(f)||(f=f.buffer,h.byteLength<f.byteLength&&(f=f.slice(h.byteOffset,h.byteOffset+h.byteLength)));if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithDashPattern'. Expected 5 arguments. Function Signature: createWithDashPattern(number, number, number, number, Array)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createWithDashPattern' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, Array).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createWithDashPattern' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, Array).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createWithDashPattern' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, Array).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createWithDashPattern' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, Array).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(f)){if("object"===typeof h&&h.name)throw new TypeError("5th input argument in function 'createWithDashPattern' is of type '"+h.name+"'. Expected type 'Array'. Function Signature: createWithDashPattern(number, number, number, number, Array).");throw new TypeError("5th input argument '"+h+"' in function 'createWithDashPattern' is of type '"+typeof h+"'. Expected type 'Array'. Function Signature: createWithDashPattern(number, number, number, number, Array).");}return b.messageHandler.sendWithPromise("annotBorderStyleCreateWithDashPattern",
{s:a,b_width:c,b_hr:d,b_vr:e,buffer:f},this.userPriority).then(function(a){if("0"===a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.AnnotBorderStyle.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.copy",{bs:this.id},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.AnnotBorderStyle.prototype.getStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getStyle",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setStyle'. Expected 1 argument. Function Signature: setStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStyle(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setStyle",
{bs:this.id,style:a},this.userPriority)};b.AnnotBorderStyle.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("AnnotBorderStyle.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Annot.prototype.getAppearance=function(a,c){"undefined"===typeof a&&(a=b.Annot.State.e_normal);"undefined"===typeof c&&(c=null);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAppearance'. Expected at most 2 arguments. Function Signature: getAppearance(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAppearance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAppearance(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c&&null!==c)throw new TypeError("2nd input argument '"+c+"' in function 'getAppearance' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: getAppearance(number, string).");return b.messageHandler.sendWithPromise("Annot.getAppearance",{annot:this.id,annot_state:a,app_state:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Annot.prototype.setAppearance=function(a,c,d){"undefined"===typeof c&&(c=b.Annot.State.e_normal);"undefined"===typeof d&&(d=null);if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAppearance'. Expected 1 to 3 arguments. Function Signature: setAppearance(PDFNet.Obj, number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setAppearance' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setAppearance(PDFNet.Obj, number, string).");throw new TypeError("1st input argument '"+a+"' in function 'setAppearance' is of type '"+
typeof a+"'. Expected type 'Obj'. Function Signature: setAppearance(PDFNet.Obj, number, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setAppearance' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAppearance(PDFNet.Obj, number, string).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d&&null!==d)throw new TypeError("3rd input argument '"+d+"' in function 'setAppearance' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: setAppearance(PDFNet.Obj, number, string).");return b.messageHandler.sendWithPromise("Annot.setAppearance",{annot:this.id,app_stream:a.id,annot_state:c,app_state:d},
this.userPriority)};b.Annot.prototype.removeAppearance=function(a,c){"undefined"===typeof a&&(a=b.Annot.State.e_normal);"undefined"===typeof c&&(c=null);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeAppearance'. Expected at most 2 arguments. Function Signature: removeAppearance(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeAppearance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removeAppearance(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'removeAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c&&null!==c)throw new TypeError("2nd input argument '"+c+"' in function 'removeAppearance' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: removeAppearance(number, string).");return b.messageHandler.sendWithPromise("Annot.removeAppearance",{annot:this.id,annot_state:a,app_state:c},this.userPriority)};b.Annot.prototype.flatten=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flatten'. Expected 1 argument. Function Signature: flatten(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flatten' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'flatten' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: flatten(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'flatten' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: flatten(PDFNet.Page).");}return b.messageHandler.sendWithPromise("Annot.flatten",{annot:this.id,page:a.id},this.userPriority)};b.Annot.prototype.getActiveAppearanceState=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getActiveAppearanceState'. Expected 0 arguments. Function Signature: getActiveAppearanceState()");return b.messageHandler.sendWithPromise("Annot.getActiveAppearanceState",{annot:this.id},this.userPriority)};b.Annot.prototype.setActiveAppearanceState=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setActiveAppearanceState'. Expected 1 argument. Function Signature: setActiveAppearanceState(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setActiveAppearanceState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setActiveAppearanceState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setActiveAppearanceState(string).");return b.messageHandler.sendWithPromise("Annot.setActiveAppearanceState",{annot:this.id,astate:a},
this.userPriority)};b.Annot.prototype.getColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");return b.messageHandler.sendWithPromise("Annot.getColor",{annot:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorAsRGB=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getColorAsRGB'. Expected 0 arguments. Function Signature: getColorAsRGB()");return b.messageHandler.sendWithPromise("Annot.getColorAsRGB",{annot:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorAsCMYK=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorAsCMYK'. Expected 0 arguments. Function Signature: getColorAsCMYK()");
return b.messageHandler.sendWithPromise("Annot.getColorAsCMYK",{annot:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorAsGray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorAsGray'. Expected 0 arguments. Function Signature: getColorAsGray()");return b.messageHandler.sendWithPromise("Annot.getColorAsGray",{annot:this.id},this.userPriority).then(function(a){a=
new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorCompNum'. Expected 0 arguments. Function Signature: getColorCompNum()");return b.messageHandler.sendWithPromise("Annot.getColorCompNum",{annot:this.id},this.userPriority)};b.Annot.prototype.setColorDefault=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setColorDefault'. Expected 1 argument. Function Signature: setColorDefault(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setColorDefault' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setColorDefault(PDFNet.ColorPt).");
throw new TypeError("1st input argument '"+a+"' in function 'setColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setColorDefault(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setColorDefault'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setColorDefault",
{annot:this.id,col:a.id},this.userPriority)};b.Annot.prototype.setColor=function(a,c){"undefined"===typeof c&&(c=3);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColor'. Expected 1 to 2 arguments. Function Signature: setColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setColor",
{annot:this.id,col:a.id,numcomp:c},this.userPriority)};b.Annot.prototype.getStructParent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructParent'. Expected 0 arguments. Function Signature: getStructParent()");return b.messageHandler.sendWithPromise("Annot.getStructParent",{annot:this.id},this.userPriority)};b.Annot.prototype.setStructParent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStructParent'. Expected 1 argument. Function Signature: setStructParent(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStructParent' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStructParent' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStructParent(number).");return b.messageHandler.sendWithPromise("Annot.setStructParent",{annot:this.id,parkeyval:a},this.userPriority)};b.Annot.prototype.getOptionalContent=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOptionalContent'. Expected 0 arguments. Function Signature: getOptionalContent()");return b.messageHandler.sendWithPromise("Annot.getOptionalContent",{annot:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Annot.prototype.setOptionalContent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOptionalContent'. Expected 1 argument. Function Signature: setOptionalContent(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOptionalContent' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setOptionalContent' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setOptionalContent(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setOptionalContent' is of type '"+
typeof a+"'. Expected type 'Obj'. Function Signature: setOptionalContent(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("Annot.setOptionalContent",{annot:this.id,content:a.id},this.userPriority)};b.Annot.prototype.refreshAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshAppearance'. Expected 0 arguments. Function Signature: refreshAppearance()");return b.messageHandler.sendWithPromise("Annot.refreshAppearance",{annot:this.id},
this.userPriority)};b.Annot.prototype.getRotation=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRotation'. Expected 0 arguments. Function Signature: getRotation()");return b.messageHandler.sendWithPromise("Annot.getRotation",{annot:this.id},this.userPriority)};b.Annot.prototype.setRotation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Annot.setRotation",{annot:this.id,angle:a},this.userPriority)};b.AnnotBorderStyle.prototype.getWidth=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWidth'. Expected 0 arguments. Function Signature: getWidth()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getWidth",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setWidth=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWidth'. Expected 1 argument. Function Signature: setWidth(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setWidth(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setWidth",{bs:this.id,width:a},this.userPriority)};b.AnnotBorderStyle.prototype.getHR=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHR'. Expected 0 arguments. Function Signature: getHR()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getHR",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setHR=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHR'. Expected 1 argument. Function Signature: setHR(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHR' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHR' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHR(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setHR",{bs:this.id,horizontal_radius:a},this.userPriority)};b.AnnotBorderStyle.prototype.getVR=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVR'. Expected 0 arguments. Function Signature: getVR()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getVR",
{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setVR=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVR'. Expected 1 argument. Function Signature: setVR(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVR' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setVR(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setVR",{bs:this.id,vertical_radius:a},this.userPriority)};b.AnnotBorderStyle.prototype.getDashPattern=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDashPattern'. Expected 0 arguments. Function Signature: getDashPattern()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getDashPattern",{bs:this.id},
this.userPriority).then(function(a){return new Float64Array(a)})};b.Annot.prototype.getBorderStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderStyle'. Expected 0 arguments. Function Signature: getBorderStyle()");return b.messageHandler.sendWithPromise("Annot.getBorderStyle",{annot:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};
b.Annot.prototype.setBorderStyle=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderStyle'. Expected 1 to 2 arguments. Function Signature: setBorderStyle(PDFNet.AnnotBorderStyle, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'setBorderStyle' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyle(PDFNet.AnnotBorderStyle, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderStyle' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyle(PDFNet.AnnotBorderStyle, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderStyle' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setBorderStyle(PDFNet.AnnotBorderStyle, boolean).");return b.messageHandler.sendWithPromise("Annot.setBorderStyle",{annot:this.id,bs:a.id,oldStyleOnly:c},this.userPriority)};b.Annot.getBorderStyleStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderStyleStyle'. Expected 1 argument. Function Signature: getBorderStyleStyle(PDFNet.AnnotBorderStyle)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getBorderStyleStyle' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: getBorderStyleStyle(PDFNet.AnnotBorderStyle).");throw new TypeError("1st input argument '"+a+"' in function 'getBorderStyleStyle' is of type '"+
typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: getBorderStyleStyle(PDFNet.AnnotBorderStyle).");}return b.messageHandler.sendWithPromise("annotGetBorderStyleStyle",{bs:a.id},this.userPriority)};b.Annot.setBorderStyleStyle=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderStyleStyle'. Expected 2 arguments. Function Signature: setBorderStyleStyle(PDFNet.AnnotBorderStyle, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.AnnotBorderStyle)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBorderStyleStyle' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyleStyle(PDFNet.AnnotBorderStyle, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderStyleStyle' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyleStyle(PDFNet.AnnotBorderStyle, number).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'setBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderStyleStyle' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderStyleStyle(PDFNet.AnnotBorderStyle, number).");return b.messageHandler.sendWithPromise("annotSetBorderStyleStyle",{bs:a.id,bst:c},this.userPriority)};b.AnnotBorderStyle.prototype.compare=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.AnnotBorderStyle)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+
a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: compare(PDFNet.AnnotBorderStyle).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: compare(PDFNet.AnnotBorderStyle).");}return b.messageHandler.sendWithPromise("AnnotBorderStyle.compare",{a:this.id,b:a.id},this.userPriority)};b.CaretAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("caretAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.CaretAnnot(a)})};b.CaretAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+
"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("caretAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.CaretAnnot(a)})};b.CaretAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("caretAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.CaretAnnot(a)})};b.CaretAnnot.prototype.getSymbol=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSymbol'. Expected 0 arguments. Function Signature: getSymbol()");
return b.messageHandler.sendWithPromise("CaretAnnot.getSymbol",{caret:this.id},this.userPriority)};b.CaretAnnot.prototype.setSymbol=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSymbol'. Expected 1 argument. Function Signature: setSymbol(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSymbol' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setSymbol' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSymbol(string).");return b.messageHandler.sendWithPromise("CaretAnnot.setSymbol",{caret:this.id,symbol:a},this.userPriority)};b.LineAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("lineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.LineAnnot(a)})};b.LineAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("lineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.LineAnnot(a)})};b.LineAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("lineAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.LineAnnot(a)})};b.LineAnnot.prototype.getStartPoint=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStartPoint'. Expected 0 arguments. Function Signature: getStartPoint()");
return b.messageHandler.sendWithPromise("LineAnnot.getStartPoint",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setStartPoint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStartPoint'. Expected 1 argument. Function Signature: setStartPoint(PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStartPoint' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setStartPoint(PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'setStartPoint' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setStartPoint(PDFNet.Point).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setStartPoint'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LineAnnot.setStartPoint",{line:this.id,sp:a},this.userPriority)};b.LineAnnot.prototype.getEndPoint=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndPoint'. Expected 0 arguments. Function Signature: getEndPoint()");
return b.messageHandler.sendWithPromise("LineAnnot.getEndPoint",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setEndPoint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndPoint'. Expected 1 argument. Function Signature: setEndPoint(PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setEndPoint' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setEndPoint(PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'setEndPoint' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setEndPoint(PDFNet.Point).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setEndPoint'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LineAnnot.setEndPoint",{line:this.id,ep:a},this.userPriority)};b.LineAnnot.prototype.getStartStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStartStyle'. Expected 0 arguments. Function Signature: getStartStyle()");return b.messageHandler.sendWithPromise("LineAnnot.getStartStyle",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setStartStyle=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStartStyle'. Expected 1 argument. Function Signature: setStartStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStartStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStartStyle(number).");
return b.messageHandler.sendWithPromise("LineAnnot.setStartStyle",{line:this.id,ss:a},this.userPriority)};b.LineAnnot.prototype.getEndStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndStyle'. Expected 0 arguments. Function Signature: getEndStyle()");return b.messageHandler.sendWithPromise("LineAnnot.getEndStyle",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setEndStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setEndStyle'. Expected 1 argument. Function Signature: setEndStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndStyle(number).");return b.messageHandler.sendWithPromise("LineAnnot.setEndStyle",
{line:this.id,es:a},this.userPriority)};b.LineAnnot.prototype.getLeaderLineLength=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineLength'. Expected 0 arguments. Function Signature: getLeaderLineLength()");return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineLength",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setLeaderLineLength=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeaderLineLength'. Expected 1 argument. Function Signature: setLeaderLineLength(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineLength' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeaderLineLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineLength(number).");return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineLength",{line:this.id,length:a},this.userPriority)};
b.LineAnnot.prototype.getLeaderLineExtensionLength=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineExtensionLength'. Expected 0 arguments. Function Signature: getLeaderLineExtensionLength()");return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineExtensionLength",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setLeaderLineExtensionLength=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setLeaderLineExtensionLength'. Expected 1 argument. Function Signature: setLeaderLineExtensionLength(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineExtensionLength' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeaderLineExtensionLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineExtensionLength(number).");
return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineExtensionLength",{line:this.id,length:a},this.userPriority)};b.LineAnnot.prototype.getShowCaption=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShowCaption'. Expected 0 arguments. Function Signature: getShowCaption()");return b.messageHandler.sendWithPromise("LineAnnot.getShowCaption",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setShowCaption=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setShowCaption'. Expected 1 argument. Function Signature: setShowCaption(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setShowCaption' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setShowCaption' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setShowCaption(boolean).");
return b.messageHandler.sendWithPromise("LineAnnot.setShowCaption",{line:this.id,showCaption:a},this.userPriority)};b.LineAnnot.prototype.getIntentType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentType'. Expected 0 arguments. Function Signature: getIntentType()");return b.messageHandler.sendWithPromise("LineAnnot.getIntentType",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setIntentType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setIntentType'. Expected 1 argument. Function Signature: setIntentType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIntentType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIntentType(number).");return b.messageHandler.sendWithPromise("LineAnnot.setIntentType",
{line:this.id,it:a},this.userPriority)};b.LineAnnot.prototype.getCapPos=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCapPos'. Expected 0 arguments. Function Signature: getCapPos()");return b.messageHandler.sendWithPromise("LineAnnot.getCapPos",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setCapPos=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCapPos'. Expected 1 argument. Function Signature: setCapPos(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCapPos' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCapPos' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setCapPos(number).");return b.messageHandler.sendWithPromise("LineAnnot.setCapPos",{line:this.id,it:a},this.userPriority)};b.LineAnnot.prototype.getLeaderLineOffset=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineOffset'. Expected 0 arguments. Function Signature: getLeaderLineOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineOffset",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setLeaderLineOffset=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeaderLineOffset'. Expected 1 argument. Function Signature: setLeaderLineOffset(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeaderLineOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineOffset",{line:this.id,length:a},this.userPriority)};
b.LineAnnot.prototype.getTextHOffset=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextHOffset'. Expected 0 arguments. Function Signature: getTextHOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getTextHOffset",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setTextHOffset=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextHOffset'. Expected 1 argument. Function Signature: setTextHOffset(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextHOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextHOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextHOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setTextHOffset",{line:this.id,offset:a},this.userPriority)};b.LineAnnot.prototype.getTextVOffset=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextVOffset'. Expected 0 arguments. Function Signature: getTextVOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getTextVOffset",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setTextVOffset=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextVOffset'. Expected 1 argument. Function Signature: setTextVOffset(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextVOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextVOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextVOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setTextVOffset",{line:this.id,offset:a},this.userPriority)};b.CircleAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("circleAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.CircleAnnot(a)})};b.CircleAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("circleAnnotCreateFromAnnot",{circle:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.CircleAnnot(a)})};b.CircleAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("circleAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.CircleAnnot(a)})};b.CircleAnnot.prototype.getInteriorColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");return b.messageHandler.sendWithPromise("CircleAnnot.getInteriorColor",{circle:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.CircleAnnot.prototype.getInteriorColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("CircleAnnot.getInteriorColorCompNum",{circle:this.id},this.userPriority)};b.CircleAnnot.prototype.setInteriorColorDefault=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setInteriorColorDefault'. Expected 1 argument. Function Signature: setInteriorColorDefault(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorDefault'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setInteriorColorDefault",{circle:this.id,col:a.id},this.userPriority)};b.CircleAnnot.prototype.setInteriorColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setInteriorColor",{circle:this.id,col:a.id,numcomp:c},this.userPriority)};b.CircleAnnot.prototype.getContentRect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("CircleAnnot.getContentRect",{circle:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};
b.CircleAnnot.prototype.setContentRect=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setContentRect",{circle:this.id,cr:a},this.userPriority)};b.CircleAnnot.prototype.getPadding=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("CircleAnnot.getPadding",{circle:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.CircleAnnot.prototype.setPadding=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setPadding' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setPadding' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setPadding",{circle:this.id,cr:a},this.userPriority)};b.FileAttachmentAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.prototype.export=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'export'. Expected at most 1 arguments. Function Signature: export(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: export(string).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.export",{fileatt:this.id,save_as:a},this.userPriority)};b.FileAttachmentAnnot.prototype.createFromAnnot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 0 arguments. Function Signature: createFromAnnot()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.createFromAnnot",
{fileatt:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};b.FileAttachmentAnnot.createWithFileSpec=function(a,c,d,e){"undefined"===typeof e&&(e=b.FileAttachmentAnnot.Icon.e_PushPin);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithFileSpec'. Expected 3 to 4 arguments. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithFileSpec' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");throw new TypeError("1st input argument '"+a+"' in function 'createWithFileSpec' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithFileSpec' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");throw new TypeError("2nd input argument '"+
c+"' in function 'createWithFileSpec' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.FileSpec)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithFileSpec' is of type '"+
d.name+"'. Expected type 'FileSpec'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithFileSpec' is of type '"+typeof d+"'. Expected type 'FileSpec'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createWithFileSpec' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createWithFileSpec(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.FileSpec, number).");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithFileSpec'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateWithFileSpec",{doc:a.id,pos:c,fs:d.id,icon_name:e},this.userPriority).then(function(a){return"0"===a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.createDefault=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDefault'. Expected 3 arguments. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createDefault' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'createDefault' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createDefault' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string).");throw new TypeError("2nd input argument '"+c+"' in function 'createDefault' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createDefault' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createDefault(PDFNet.SDFDoc, PDFNet.Rect, string).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createDefault'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateDefault",{doc:a.id,pos:c,path:d},this.userPriority).then(function(a){return"0"===a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.prototype.getFileSpec=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileSpec'. Expected 0 arguments. Function Signature: getFileSpec()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getFileSpec",{fileatt:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.FileSpec(a)})};b.FileAttachmentAnnot.prototype.setFileSpec=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFileSpec'. Expected 1 argument. Function Signature: setFileSpec(PDFNet.FileSpec)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFileSpec' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: setFileSpec(PDFNet.FileSpec).");throw new TypeError("1st input argument '"+a+"' in function 'setFileSpec' is of type '"+typeof a+
"'. Expected type 'FileSpec'. Function Signature: setFileSpec(PDFNet.FileSpec).");}return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setFileSpec",{fileatt:this.id,file:a.id},this.userPriority)};b.FileAttachmentAnnot.prototype.getIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getIcon",{fileatt:this.id},
this.userPriority)};b.FileAttachmentAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.FileAttachmentAnnot.Icon.e_PushPin);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setIcon",{fileatt:this.id,type:a},this.userPriority)};b.FileAttachmentAnnot.prototype.getIconName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getIconName",
{fileatt:this.id},this.userPriority)};b.FileAttachmentAnnot.prototype.setIconName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setIconName",{fileatt:this.id,iname:a},this.userPriority)};b.FreeTextAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("freeTextAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("freeTextAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("freeTextAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.prototype.getDefaultAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultAppearance'. Expected 0 arguments. Function Signature: getDefaultAppearance()");
return b.messageHandler.sendWithPromise("FreeTextAnnot.getDefaultAppearance",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setDefaultAppearance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultAppearance'. Expected 1 argument. Function Signature: setDefaultAppearance(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultAppearance' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDefaultAppearance(string).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setDefaultAppearance",{ft:this.id,app_str:a},this.userPriority)};b.FreeTextAnnot.prototype.getQuaddingFormat=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuaddingFormat'. Expected 0 arguments. Function Signature: getQuaddingFormat()");
return b.messageHandler.sendWithPromise("FreeTextAnnot.getQuaddingFormat",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setQuaddingFormat=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuaddingFormat'. Expected 1 argument. Function Signature: setQuaddingFormat(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuaddingFormat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuaddingFormat' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuaddingFormat(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setQuaddingFormat",{ft:this.id,format:a},this.userPriority)};b.FreeTextAnnot.prototype.getCalloutLinePoints=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCalloutLinePoints'. Expected 3 arguments. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getCalloutLinePoints' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("1st input argument '"+
a+"' in function 'getCalloutLinePoints' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'getCalloutLinePoints' is of type '"+
c.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'getCalloutLinePoints' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Point)&&d&&"Point"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'getCalloutLinePoints' is of type '"+d.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("3rd input argument '"+d+"' in function 'getCalloutLinePoints' is of type '"+typeof d+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");
}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.getCalloutLinePoints",{ft:this.id,p1:a,p2:c,p3:d},this.userPriority)};b.FreeTextAnnot.prototype.setCalloutLinePoints=function(a,
c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCalloutLinePoints'. Expected 3 arguments. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCalloutLinePoints' is of type '"+
a.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'setCalloutLinePoints' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setCalloutLinePoints' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'setCalloutLinePoints' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Point)&&d&&"Point"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'setCalloutLinePoints' is of type '"+d.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");throw new TypeError("3rd input argument '"+
d+"' in function 'setCalloutLinePoints' is of type '"+typeof d+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(PDFNet.Point, PDFNet.Point, PDFNet.Point).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setCalloutLinePoints",{ft:this.id,p1:a,p2:c,p3:d},this.userPriority)};b.FreeTextAnnot.prototype.setCalloutLinePointsTwo=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCalloutLinePointsTwo'. Expected 2 arguments. Function Signature: setCalloutLinePointsTwo(PDFNet.Point, PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCalloutLinePointsTwo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCalloutLinePointsTwo' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(PDFNet.Point, PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'setCalloutLinePointsTwo' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(PDFNet.Point, PDFNet.Point).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'setCalloutLinePointsTwo' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setCalloutLinePointsTwo' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(PDFNet.Point, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'setCalloutLinePointsTwo' is of type '"+
typeof c+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(PDFNet.Point, PDFNet.Point).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCalloutLinePointsTwo'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setCalloutLinePointsTwo'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setCalloutLinePointsTwo",{ft:this.id,p1:a,p2:c},this.userPriority)};b.FreeTextAnnot.prototype.getIntentName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentName'. Expected 0 arguments. Function Signature: getIntentName()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getIntentName",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setIntentName=
function(a){"undefined"===typeof a&&(a=b.FreeTextAnnot.IntentName.e_FreeText);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentName'. Expected at most 1 arguments. Function Signature: setIntentName(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setIntentName' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIntentName(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setIntentName",{ft:this.id,mode:a},this.userPriority)};b.FreeTextAnnot.prototype.setIntentNameDefault=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentNameDefault'. Expected 0 arguments. Function Signature: setIntentNameDefault()");return b.messageHandler.sendWithPromise("FreeTextAnnot.setIntentNameDefault",
{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.getEndingStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndingStyle'. Expected 0 arguments. Function Signature: getEndingStyle()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getEndingStyle",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setEndingStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndingStyle'. Expected 1 argument. Function Signature: setEndingStyle(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndingStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndingStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndingStyle(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setEndingStyle",{ft:this.id,style:a},this.userPriority)};b.FreeTextAnnot.prototype.setEndingStyleName=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndingStyleName'. Expected 1 argument. Function Signature: setEndingStyleName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndingStyleName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndingStyleName' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: setEndingStyleName(string).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setEndingStyleName",{ft:this.id,est:a},this.userPriority)};b.FreeTextAnnot.prototype.setTextColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextColor'. Expected 2 arguments. Function Signature: setTextColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTextColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setTextColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setTextColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setTextColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTextColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setTextColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTextColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setTextColor",
{ft:this.id,color:a.id,col_comp:c},this.userPriority)};b.FreeTextAnnot.prototype.getTextColor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextColor'. Expected 1 argument. Function Signature: getTextColor(number)");if(a instanceof Promise)throw new TypeError("2nd input argument in function 'getTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("2nd input argument '"+
a+"' in function 'getTextColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTextColor(number).");var c=this;this.yieldFunction="FreeTextAnnot.getTextColor";return b.messageHandler.sendWithPromise("FreeTextAnnot.getTextColor",{ft:this.id,col_comp:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.FreeTextAnnot.prototype.setLineColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineColor'. Expected 2 arguments. Function Signature: setLineColor(PDFNet.ColorPt, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setLineColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setLineColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setLineColor' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setLineColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setLineColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setLineColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setLineColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setLineColor",{ft:this.id,color:a.id,col_comp:c},this.userPriority)};b.FreeTextAnnot.prototype.getLineColor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineColor'. Expected 1 argument. Function Signature: getLineColor(number)");
if(a instanceof Promise)throw new TypeError("2nd input argument in function 'getLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("2nd input argument '"+a+"' in function 'getLineColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getLineColor(number).");var c=this;this.yieldFunction="FreeTextAnnot.getLineColor";return b.messageHandler.sendWithPromise("FreeTextAnnot.getLineColor",{ft:this.id,
col_comp:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.FreeTextAnnot.prototype.setFontSize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFontSize'. Expected 1 argument. Function Signature: setFontSize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFontSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFontSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFontSize(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setFontSize",{ft:this.id,font_size:a},this.userPriority)};b.FreeTextAnnot.prototype.getFontSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");
return b.messageHandler.sendWithPromise("FreeTextAnnot.getFontSize",{ft:this.id},this.userPriority)};b.HighlightAnnot.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("highlightAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.HighlightAnnot(a)})};b.HighlightAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("highlightAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.HighlightAnnot(a)})};b.HighlightAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("highlightAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.HighlightAnnot(a)})};b.InkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("inkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.InkAnnot(a)})};b.InkAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("inkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.InkAnnot(a)})};b.InkAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("inkAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.InkAnnot(a)})};b.InkAnnot.prototype.getPathCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPathCount'. Expected 0 arguments. Function Signature: getPathCount()");return b.messageHandler.sendWithPromise("InkAnnot.getPathCount",{ink:this.id},this.userPriority)};b.InkAnnot.prototype.getPointCount=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPointCount'. Expected 1 argument. Function Signature: getPointCount(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPointCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPointCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPointCount(number).");
return b.messageHandler.sendWithPromise("InkAnnot.getPointCount",{ink:this.id,pathindex:a},this.userPriority)};b.InkAnnot.prototype.getPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPoint'. Expected 2 arguments. Function Signature: getPoint(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPoint(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getPoint' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getPoint(number, number).");
return b.messageHandler.sendWithPromise("InkAnnot.getPoint",{ink:this.id,pathindex:a,pointindex:c},this.userPriority)};b.InkAnnot.prototype.setPoint=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPoint'. Expected 3 arguments. Function Signature: setPoint(number, number, PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPoint(number, number, PDFNet.Point).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPoint' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPoint(number, number, PDFNet.Point).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Point)&&d&&"Point"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'setPoint' is of type '"+d.name+"'. Expected type 'Point'. Function Signature: setPoint(number, number, PDFNet.Point).");throw new TypeError("3rd input argument '"+d+"' in function 'setPoint' is of type '"+
typeof d+"'. Expected type 'Point'. Function Signature: setPoint(number, number, PDFNet.Point).");}if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'setPoint'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("InkAnnot.setPoint",{ink:this.id,pathindex:a,pointindex:c,pt:d},this.userPriority)};
b.InkAnnot.prototype.erase=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 3 arguments. Function Signature: erase(PDFNet.Point, PDFNet.Point, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&a&&"Point"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'erase' is of type '"+
a.name+"'. Expected type 'Point'. Function Signature: erase(PDFNet.Point, PDFNet.Point, number).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: erase(PDFNet.Point, PDFNet.Point, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===
typeof c&&c.name)throw new TypeError("2nd input argument in function 'erase' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: erase(PDFNet.Point, PDFNet.Point, number).");throw new TypeError("2nd input argument '"+c+"' in function 'erase' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: erase(PDFNet.Point, PDFNet.Point, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'erase' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: erase(PDFNet.Point, PDFNet.Point, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'erase'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!==
typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'erase'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("InkAnnot.erase",{ink:this.id,pt1:a,pt2:c,width:d},this.userPriority)};b.InkAnnot.prototype.getHighlightIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighlightIntent'. Expected 0 arguments. Function Signature: getHighlightIntent()");
return b.messageHandler.sendWithPromise("InkAnnot.getHighlightIntent",{ink:this.id},this.userPriority)};b.InkAnnot.prototype.setHighlightIntent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightIntent'. Expected 1 argument. Function Signature: setHighlightIntent(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightIntent' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setHighlightIntent(boolean).");return b.messageHandler.sendWithPromise("InkAnnot.setHighlightIntent",{ink:this.id,highlight:a},this.userPriority)};b.LinkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("linkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.LinkAnnot(a)})};b.LinkAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("linkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.LinkAnnot(a)})};b.LinkAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("linkAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.LinkAnnot(a)})};b.LinkAnnot.prototype.removeAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeAction'. Expected 0 arguments. Function Signature: removeAction()");
return b.messageHandler.sendWithPromise("LinkAnnot.removeAction",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.getAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("LinkAnnot.getAction",{link:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.LinkAnnot.prototype.setAction=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(PDFNet.Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");
throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");}return b.messageHandler.sendWithPromise("LinkAnnot.setAction",{link:this.id,action:a.id},this.userPriority)};b.LinkAnnot.prototype.getHighlightingMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighlightingMode'. Expected 0 arguments. Function Signature: getHighlightingMode()");
return b.messageHandler.sendWithPromise("LinkAnnot.getHighlightingMode",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.setHighlightingMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightingMode'. Expected 1 argument. Function Signature: setHighlightingMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightingMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightingMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHighlightingMode(number).");return b.messageHandler.sendWithPromise("LinkAnnot.setHighlightingMode",{link:this.id,value:a},this.userPriority)};b.LinkAnnot.prototype.getQuadPointCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");
return b.messageHandler.sendWithPromise("LinkAnnot.getQuadPointCount",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.getQuadPoint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");return b.messageHandler.sendWithPromise("LinkAnnot.getQuadPoint",{link:this.id,idx:a},this.userPriority)};b.LinkAnnot.prototype.setQuadPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, PDFNet.QuadPoint)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.QuadPoint)&&c&&"QuadPoint"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LinkAnnot.setQuadPoint",{link:this.id,idx:a,qp:c},this.userPriority)};b.getNormalizedUrl=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNormalizedUrl'. Expected 1 argument. Function Signature: getNormalizedUrl(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getNormalizedUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getNormalizedUrl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getNormalizedUrl(string).");return b.messageHandler.sendWithPromise("getNormalizedUrl",{url:a},this.userPriority)};b.MarkupAnnot.createFromObj=function(a){"undefined"===
typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("markupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.MarkupAnnot(a)})};b.MarkupAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("markupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.MarkupAnnot(a)})};b.MarkupAnnot.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");
return b.messageHandler.sendWithPromise("MarkupAnnot.getTitle",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("MarkupAnnot.setTitle",{markup:this.id,title:a},this.userPriority)};b.MarkupAnnot.prototype.setTitleUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitleUString'. Expected 1 argument. Function Signature: setTitleUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitleUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitleUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitleUString(string).");return b.messageHandler.sendWithPromise("MarkupAnnot.setTitleUString",{markup:this.id,title:a},this.userPriority)};b.MarkupAnnot.prototype.getPopup=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPopup'. Expected 0 arguments. Function Signature: getPopup()");
return b.messageHandler.sendWithPromise("MarkupAnnot.getPopup",{markup:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};b.MarkupAnnot.prototype.setPopup=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPopup'. Expected 1 argument. Function Signature: setPopup(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPopup' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setPopup' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: setPopup(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'setPopup' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setPopup(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("MarkupAnnot.setPopup",{markup:this.id,ppup:a.id},this.userPriority)};b.MarkupAnnot.prototype.getOpacity=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpacity'. Expected 0 arguments. Function Signature: getOpacity()");return b.messageHandler.sendWithPromise("MarkupAnnot.getOpacity",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setOpacity=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpacity'. Expected 1 argument. Function Signature: setOpacity(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOpacity(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.setOpacity",{markup:this.id,op:a},this.userPriority)};b.MarkupAnnot.prototype.getSubject=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubject'. Expected 0 arguments. Function Signature: getSubject()");return b.messageHandler.sendWithPromise("MarkupAnnot.getSubject",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setSubject=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSubject'. Expected 1 argument. Function Signature: setSubject(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSubject' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSubject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSubject(string).");return b.messageHandler.sendWithPromise("MarkupAnnot.setSubject",{markup:this.id,contents:a},this.userPriority)};b.MarkupAnnot.prototype.getCreationDates=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreationDates'. Expected 0 arguments. Function Signature: getCreationDates()");
return b.messageHandler.sendWithPromise("MarkupAnnot.getCreationDates",{markup:this.id},this.userPriority).then(function(a){return new b.Date(a)})};b.MarkupAnnot.prototype.getBorderEffect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderEffect'. Expected 0 arguments. Function Signature: getBorderEffect()");return b.messageHandler.sendWithPromise("MarkupAnnot.getBorderEffect",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setBorderEffect=
function(a){"undefined"===typeof a&&(a=b.MarkupAnnot.BorderEffect.e_None);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderEffect'. Expected at most 1 arguments. Function Signature: setBorderEffect(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderEffect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setBorderEffect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBorderEffect(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.setBorderEffect",{markup:this.id,effect:a},this.userPriority)};b.MarkupAnnot.prototype.getBorderEffectIntensity=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderEffectIntensity'. Expected 0 arguments. Function Signature: getBorderEffectIntensity()");
return b.messageHandler.sendWithPromise("MarkupAnnot.getBorderEffectIntensity",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setBorderEffectIntensity=function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderEffectIntensity'. Expected at most 1 arguments. Function Signature: setBorderEffectIntensity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderEffectIntensity' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBorderEffectIntensity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBorderEffectIntensity(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.setBorderEffectIntensity",{markup:this.id,intensity:a},this.userPriority)};b.MarkupAnnot.prototype.setCreationDates=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreationDates'. Expected 1 argument. Function Signature: setCreationDates(PDFNet.Date)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreationDates' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&a&&"Date"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCreationDates' is of type '"+a.name+"'. Expected type 'Date'. Function Signature: setCreationDates(PDFNet.Date).");throw new TypeError("1st input argument '"+a+"' in function 'setCreationDates' is of type '"+
typeof a+"'. Expected type 'Date'. Function Signature: setCreationDates(PDFNet.Date).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCreationDates'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setCreationDates",{markup:this.id,dt:a},this.userPriority)};b.MarkupAnnot.prototype.getInteriorColor=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");return b.messageHandler.sendWithPromise("MarkupAnnot.getInteriorColor",{markup:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.MarkupAnnot.prototype.getInteriorColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("MarkupAnnot.getInteriorColorCompNum",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setInteriorColorRGB=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColorRGB'. Expected 1 argument. Function Signature: setInteriorColorRGB(PDFNet.ColorPt)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setInteriorColorRGB' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInteriorColorRGB' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorRGB(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorRGB' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorRGB(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorRGB'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setInteriorColorRGB",{markup:this.id,col:a.id},this.userPriority)};
b.MarkupAnnot.prototype.setInteriorColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setInteriorColor",{markup:this.id,c:a.id,compnum:c},this.userPriority)};b.MarkupAnnot.prototype.getContentRect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("MarkupAnnot.getContentRect",{markup:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};
b.MarkupAnnot.prototype.setContentRect=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setContentRect",{markup:this.id,cr:a},this.userPriority)};b.MarkupAnnot.prototype.getPadding=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("MarkupAnnot.getPadding",{markup:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.MarkupAnnot.prototype.setPadding=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setPadding' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setPadding' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setPadding",{markup:this.id,rd:a},this.userPriority)};b.MarkupAnnot.prototype.rotateAppearance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rotateAppearance'. Expected 1 argument. Function Signature: rotateAppearance(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rotateAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rotateAppearance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: rotateAppearance(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.rotateAppearance",{markup:this.id,angle:a},this.userPriority)};b.MovieAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("movieAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.MovieAnnot(a)})};b.MovieAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("movieAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.MovieAnnot(a)})};b.MovieAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("movieAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.MovieAnnot(a)})};b.MovieAnnot.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");
return b.messageHandler.sendWithPromise("MovieAnnot.getTitle",{movie:this.id},this.userPriority)};b.MovieAnnot.prototype.setTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("MovieAnnot.setTitle",{movie:this.id,title:a},this.userPriority)};b.MovieAnnot.prototype.isToBePlayed=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isToBePlayed'. Expected 0 arguments. Function Signature: isToBePlayed()");return b.messageHandler.sendWithPromise("MovieAnnot.isToBePlayed",
{movie:this.id},this.userPriority)};b.MovieAnnot.prototype.setToBePlayed=function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setToBePlayed'. Expected at most 1 arguments. Function Signature: setToBePlayed(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setToBePlayed' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setToBePlayed' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setToBePlayed(boolean).");return b.messageHandler.sendWithPromise("MovieAnnot.setToBePlayed",{movie:this.id,isplay:a},this.userPriority)};b.PolyLineAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("polyLineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PolyLineAnnot(a)})};b.PolyLineAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("polyLineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.PolyLineAnnot(a)})};b.PolyLineAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("polyLineAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.PolyLineAnnot(a)})};b.PolyLineAnnot.prototype.getVertexCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVertexCount'. Expected 0 arguments. Function Signature: getVertexCount()");
return b.messageHandler.sendWithPromise("PolyLineAnnot.getVertexCount",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.getVertex=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVertex'. Expected 1 argument. Function Signature: getVertex(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getVertex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getVertex(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.getVertex",{polyline:this.id,idx:a},this.userPriority)};b.PolyLineAnnot.prototype.setVertex=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVertex'. Expected 2 arguments. Function Signature: setVertex(number, PDFNet.Point)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVertex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVertex(number, PDFNet.Point).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setVertex' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setVertex(number, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'setVertex' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: setVertex(number, PDFNet.Point).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setVertex'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PolyLineAnnot.setVertex",{polyline:this.id,idx:a,pt:c},this.userPriority)};b.PolyLineAnnot.prototype.getStartStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStartStyle'. Expected 0 arguments. Function Signature: getStartStyle()");
return b.messageHandler.sendWithPromise("PolyLineAnnot.getStartStyle",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setStartStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStartStyle'. Expected 1 argument. Function Signature: setStartStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStartStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStartStyle(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setStartStyle",{polyline:this.id,style:a},this.userPriority)};b.PolyLineAnnot.prototype.getEndStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndStyle'. Expected 0 arguments. Function Signature: getEndStyle()");
return b.messageHandler.sendWithPromise("PolyLineAnnot.getEndStyle",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setEndStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndStyle'. Expected 1 argument. Function Signature: setEndStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndStyle(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setEndStyle",{polyline:this.id,style:a},this.userPriority)};b.PolyLineAnnot.prototype.getIntentName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentName'. Expected 0 arguments. Function Signature: getIntentName()");
return b.messageHandler.sendWithPromise("PolyLineAnnot.getIntentName",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setIntentName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentName'. Expected 1 argument. Function Signature: setIntentName(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIntentName' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIntentName(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setIntentName",{polyline:this.id,mode:a},this.userPriority)};b.PolygonAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("polygonAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PolygonAnnot(a)})};b.PolygonAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("polygonAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.PolygonAnnot(a)})};b.PolygonAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("polygonAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.PolygonAnnot(a)})};b.PopupAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("popupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PopupAnnot(a)})};b.PopupAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+
"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("popupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PopupAnnot(a)})};b.PopupAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("popupAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.PopupAnnot(a)})};b.PopupAnnot.prototype.getParent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");
return b.messageHandler.sendWithPromise("PopupAnnot.getParent",{popup:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Annot(a)})};b.PopupAnnot.prototype.setParent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setParent'. Expected 1 argument. Function Signature: setParent(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setParent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setParent' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: setParent(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'setParent' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setParent(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("PopupAnnot.setParent",{popup:this.id,parent:a.id},this.userPriority)};b.PopupAnnot.prototype.isOpen=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");return b.messageHandler.sendWithPromise("PopupAnnot.isOpen",{popup:this.id},this.userPriority)};b.PopupAnnot.prototype.setOpen=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");return b.messageHandler.sendWithPromise("PopupAnnot.setOpen",{popup:this.id,isopen:a},this.userPriority)};b.RedactionAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("redactionAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.RedactionAnnot(a)})};b.RedactionAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("redactionAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.RedactionAnnot(a)})};b.RedactionAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("redactionAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.RedactionAnnot(a)})};b.RedactionAnnot.prototype.getQuadPointCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");
return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadPointCount",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.getQuadPoint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadPoint",{redaction:this.id,idx:a},this.userPriority)};b.RedactionAnnot.prototype.setQuadPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, PDFNet.QuadPoint)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.QuadPoint)&&c&&"QuadPoint"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("RedactionAnnot.setQuadPoint",{redaction:this.id,idx:a,qp:c},this.userPriority)};b.RedactionAnnot.prototype.setAppFormXO=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAppFormXO'. Expected 1 argument. Function Signature: setAppFormXO(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAppFormXO' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setAppFormXO' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setAppFormXO(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setAppFormXO' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setAppFormXO(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("RedactionAnnot.setAppFormXO",{redaction:this.id,formxo:a.id},this.userPriority)};b.RedactionAnnot.prototype.getOverlayText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOverlayText'. Expected 0 arguments. Function Signature: getOverlayText()");return b.messageHandler.sendWithPromise("RedactionAnnot.getOverlayText",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setOverlayText=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverlayText'. Expected 1 argument. Function Signature: setOverlayText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverlayText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverlayText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setOverlayText(string).");
return b.messageHandler.sendWithPromise("RedactionAnnot.setOverlayText",{redaction:this.id,title:a},this.userPriority)};b.RedactionAnnot.prototype.getUseRepeat=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUseRepeat'. Expected 0 arguments. Function Signature: getUseRepeat()");return b.messageHandler.sendWithPromise("RedactionAnnot.getUseRepeat",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setUseRepeat=function(a){"undefined"===
typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUseRepeat'. Expected at most 1 arguments. Function Signature: setUseRepeat(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUseRepeat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUseRepeat' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setUseRepeat(boolean).");
return b.messageHandler.sendWithPromise("RedactionAnnot.setUseRepeat",{redaction:this.id,userepeat:a},this.userPriority)};b.RedactionAnnot.prototype.getOverlayTextAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOverlayTextAppearance'. Expected 0 arguments. Function Signature: getOverlayTextAppearance()");return b.messageHandler.sendWithPromise("RedactionAnnot.getOverlayTextAppearance",{redaction:this.id},this.userPriority)};
b.RedactionAnnot.prototype.setOverlayTextAppearance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverlayTextAppearance'. Expected 1 argument. Function Signature: setOverlayTextAppearance(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverlayTextAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setOverlayTextAppearance' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setOverlayTextAppearance(string).");return b.messageHandler.sendWithPromise("RedactionAnnot.setOverlayTextAppearance",{redaction:this.id,app:a},this.userPriority)};b.RedactionAnnot.prototype.getQuadForm=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadForm'. Expected 0 arguments. Function Signature: getQuadForm()");return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadForm",
{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setQuadForm=function(a){"undefined"===typeof a&&(a=b.RedactionAnnot.QuadForm.e_LeftJustified);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadForm'. Expected at most 1 arguments. Function Signature: setQuadForm(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadForm' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadForm' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadForm(number).");return b.messageHandler.sendWithPromise("RedactionAnnot.setQuadForm",{redaction:this.id,form:a},this.userPriority)};b.RedactionAnnot.prototype.getAppFormXO=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAppFormXO'. Expected 0 arguments. Function Signature: getAppFormXO()");
return b.messageHandler.sendWithPromise("RedactionAnnot.getAppFormXO",{redaction:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.RubberStampAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("rubberStampAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("rubberStampAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("rubberStampAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.prototype.getIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");return b.messageHandler.sendWithPromise("RubberStampAnnot.getIcon",{stamp:this.id},this.userPriority)};b.RubberStampAnnot.prototype.setIcon=
function(a){"undefined"===typeof a&&(a=b.RubberStampAnnot.Icon.e_Draft);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIcon",{stamp:this.id,type:a},this.userPriority)};b.RubberStampAnnot.prototype.setIconDefault=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconDefault'. Expected 0 arguments. Function Signature: setIconDefault()");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIconDefault",{stamp:this.id},
this.userPriority)};b.RubberStampAnnot.prototype.getIconName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");return b.messageHandler.sendWithPromise("RubberStampAnnot.getIconName",{stamp:this.id},this.userPriority)};b.RubberStampAnnot.prototype.setIconName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIconName",{stamp:this.id,iconstring:a},this.userPriority)};b.ScreenAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("screenAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("screenAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getTitle",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setTitle",{s:this.id,title:a},this.userPriority)};b.ScreenAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("screenAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.prototype.getAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getAction",{s:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.ScreenAnnot.prototype.setAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(PDFNet.Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Action)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setAction",{s:this.id,action:a.id},this.userPriority)};
b.ScreenAnnot.prototype.getBorderColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColor'. Expected 0 arguments. Function Signature: getBorderColor()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBorderColor",{s:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ScreenAnnot.prototype.setBorderColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setBorderColor'. Expected 2 arguments. Function Signature: setBorderColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBorderColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");
throw new TypeError("1st input argument '"+a+"' in function 'setBorderColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");
if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBorderColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ScreenAnnot.setBorderColor",{s:this.id,col:a.id,numcomp:c},this.userPriority)};b.ScreenAnnot.prototype.getBorderColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBorderColorCompNum'. Expected 0 arguments. Function Signature: getBorderColorCompNum()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBorderColorCompNum",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.getBackgroundColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColorCompNum'. Expected 0 arguments. Function Signature: getBackgroundColorCompNum()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBackgroundColorCompNum",
{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.getBackgroundColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColor'. Expected 0 arguments. Function Signature: getBackgroundColor()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBackgroundColor",{s:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ScreenAnnot.prototype.setBackgroundColor=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBackgroundColor'. Expected 2 arguments. Function Signature: setBackgroundColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBackgroundColor' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBackgroundColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'setBackgroundColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBackgroundColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ScreenAnnot.setBackgroundColor",
{s:this.id,col:a.id,numcomp:c},this.userPriority)};b.ScreenAnnot.prototype.getStaticCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticCaptionText'. Expected 0 arguments. Function Signature: getStaticCaptionText()");return b.messageHandler.sendWithPromise("ScreenAnnot.getStaticCaptionText",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setStaticCaptionText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setStaticCaptionText'. Expected 1 argument. Function Signature: setStaticCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStaticCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStaticCaptionText(string).");
return b.messageHandler.sendWithPromise("ScreenAnnot.setStaticCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getRolloverCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverCaptionText'. Expected 0 arguments. Function Signature: getRolloverCaptionText()");return b.messageHandler.sendWithPromise("ScreenAnnot.getRolloverCaptionText",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setRolloverCaptionText=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverCaptionText'. Expected 1 argument. Function Signature: setRolloverCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRolloverCaptionText' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setRolloverCaptionText(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setRolloverCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getMouseDownCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownCaptionText'. Expected 0 arguments. Function Signature: getMouseDownCaptionText()");return b.messageHandler.sendWithPromise("ScreenAnnot.getMouseDownCaptionText",
{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setMouseDownCaptionText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownCaptionText'. Expected 1 argument. Function Signature: setMouseDownCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setMouseDownCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMouseDownCaptionText(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setMouseDownCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getStaticIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticIcon'. Expected 0 arguments. Function Signature: getStaticIcon()");return b.messageHandler.sendWithPromise("ScreenAnnot.getStaticIcon",
{s:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setStaticIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticIcon'. Expected 1 argument. Function Signature: setStaticIcon(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStaticIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setStaticIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setStaticIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setStaticIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setStaticIcon",{s:this.id,icon:a.id},this.userPriority)};b.ScreenAnnot.prototype.getRolloverIcon=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverIcon'. Expected 0 arguments. Function Signature: getRolloverIcon()");return b.messageHandler.sendWithPromise("ScreenAnnot.getRolloverIcon",{s:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setRolloverIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverIcon'. Expected 1 argument. Function Signature: setRolloverIcon(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setRolloverIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setRolloverIcon' is of type '"+typeof a+
"'. Expected type 'Obj'. Function Signature: setRolloverIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setRolloverIcon",{s:this.id,icon:a.id},this.userPriority)};b.ScreenAnnot.prototype.getMouseDownIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownIcon'. Expected 0 arguments. Function Signature: getMouseDownIcon()");return b.messageHandler.sendWithPromise("ScreenAnnot.getMouseDownIcon",{s:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setMouseDownIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownIcon'. Expected 1 argument. Function Signature: setMouseDownIcon(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setMouseDownIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setMouseDownIcon",{s:this.id,icon:a.id},this.userPriority)};
b.ScreenAnnot.prototype.getScaleType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleType'. Expected 0 arguments. Function Signature: getScaleType()");return b.messageHandler.sendWithPromise("ScreenAnnot.getScaleType",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setScaleType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleType'. Expected 1 argument. Function Signature: setScaleType(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleType(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setScaleType",{s:this.id,st:a},this.userPriority)};b.ScreenAnnot.prototype.getIconCaptionRelation=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconCaptionRelation'. Expected 0 arguments. Function Signature: getIconCaptionRelation()");return b.messageHandler.sendWithPromise("ScreenAnnot.getIconCaptionRelation",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setIconCaptionRelation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconCaptionRelation'. Expected 1 argument. Function Signature: setIconCaptionRelation(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconCaptionRelation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconCaptionRelation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIconCaptionRelation(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setIconCaptionRelation",{s:this.id,icr:a},this.userPriority)};
b.ScreenAnnot.prototype.getScaleCondition=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleCondition'. Expected 0 arguments. Function Signature: getScaleCondition()");return b.messageHandler.sendWithPromise("ScreenAnnot.getScaleCondition",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setScaleCondition=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleCondition'. Expected 1 argument. Function Signature: setScaleCondition(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleCondition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleCondition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleCondition(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setScaleCondition",{s:this.id,sc:a},this.userPriority)};b.ScreenAnnot.prototype.getFitFull=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitFull'. Expected 0 arguments. Function Signature: getFitFull()");return b.messageHandler.sendWithPromise("ScreenAnnot.getFitFull",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setFitFull=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFitFull'. Expected 1 argument. Function Signature: setFitFull(boolean)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setFitFull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFitFull' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFitFull(boolean).");return b.messageHandler.sendWithPromise("ScreenAnnot.setFitFull",{s:this.id,ff:a},this.userPriority)};b.ScreenAnnot.prototype.getHIconLeftOver=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHIconLeftOver'. Expected 0 arguments. Function Signature: getHIconLeftOver()");return b.messageHandler.sendWithPromise("ScreenAnnot.getHIconLeftOver",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setHIconLeftOver=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHIconLeftOver'. Expected 1 argument. Function Signature: setHIconLeftOver(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHIconLeftOver(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setHIconLeftOver",{s:this.id,hl:a},this.userPriority)};b.ScreenAnnot.prototype.getVIconLeftOver=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVIconLeftOver'. Expected 0 arguments. Function Signature: getVIconLeftOver()");return b.messageHandler.sendWithPromise("ScreenAnnot.getVIconLeftOver",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setVIconLeftOver=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVIconLeftOver'. Expected 1 argument. Function Signature: setVIconLeftOver(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVIconLeftOver(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setVIconLeftOver",{s:this.id,vl:a},this.userPriority)};b.SoundAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("soundAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SoundAnnot(a)})};b.SoundAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("soundAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SoundAnnot(a)})};b.SoundAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("soundAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.SoundAnnot(a)})};b.SoundAnnot.createWithData=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithData'. Expected 6 arguments. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithData' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createWithData' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithData' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");throw new TypeError("2nd input argument '"+
c+"' in function 'createWithData' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithData' is of type '"+
d.name+"'. Expected type 'Filter'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithData' is of type '"+typeof d+"'. Expected type 'Filter'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createWithData' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'createWithData' is of type '"+
typeof h+"'. Expected type 'number'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createWithData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'createWithData' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createWithData(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Filter, number, number, number).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithData'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");var g=-1;if(0!=d.id){for(var r=createdObjects.length-1;0<=r;r--)if(createdObjects[r].id==d.id){g=r;break}if(-1!=g)for(createdObjects.splice(g,1),r=deallocStackCounter.length-1;0<=r;r--)if(deallocStackCounter[r]>
g)--deallocStackCounter[r];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("soundAnnotCreateWithData",{doc:a.id,pos:c,no_own_stream:d.id,sample_bits:e,sample_freq:h,num_channels:f},this.userPriority).then(function(a){return"0"===a?null:new b.SoundAnnot(a)})};b.SoundAnnot.createAtPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createAtPoint'. Expected 2 arguments. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createAtPoint' is of type '"+a.name+
"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'createAtPoint' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&c&&"Point"!==
c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createAtPoint' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'createAtPoint' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createAtPoint'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("soundAnnotCreateAtPoint",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.SoundAnnot(a)})};b.SoundAnnot.prototype.getSoundStream=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoundStream'. Expected 0 arguments. Function Signature: getSoundStream()");return b.messageHandler.sendWithPromise("SoundAnnot.getSoundStream",{sound:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.SoundAnnot.prototype.setSoundStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoundStream'. Expected 1 argument. Function Signature: setSoundStream(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoundStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setSoundStream' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setSoundStream(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setSoundStream' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setSoundStream(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("SoundAnnot.setSoundStream",{sound:this.id,icon:a.id},this.userPriority)};b.SoundAnnot.prototype.getIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");
return b.messageHandler.sendWithPromise("SoundAnnot.getIcon",{sound:this.id},this.userPriority)};b.SoundAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.SoundAnnot.Icon.e_Speaker);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("SoundAnnot.setIcon",{sound:this.id,type:a},this.userPriority)};b.SoundAnnot.prototype.getIconName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");
return b.messageHandler.sendWithPromise("SoundAnnot.getIconName",{sound:this.id},this.userPriority)};b.SoundAnnot.prototype.setIconName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("SoundAnnot.setIconName",{sound:this.id,type:a},this.userPriority)};b.SquareAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("squareAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SquareAnnot(a)})};b.SquareAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("squareAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.SquareAnnot(a)})};b.SquareAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("squareAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.SquareAnnot(a)})};b.SquareAnnot.prototype.getInteriorColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");
return b.messageHandler.sendWithPromise("SquareAnnot.getInteriorColor",{square:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SquareAnnot.prototype.getInteriorColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("SquareAnnot.getInteriorColorCompNum",
{square:this.id},this.userPriority)};b.SquareAnnot.prototype.setInteriorColorDefault=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColorDefault'. Expected 1 argument. Function Signature: setInteriorColorDefault(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorDefault'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setInteriorColorDefault",{square:this.id,col:a.id},this.userPriority)};b.SquareAnnot.prototype.setInteriorColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(PDFNet.ColorPt, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(PDFNet.ColorPt, number).");if("undefined"!==
typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setInteriorColor",{square:this.id,col:a.id,numcomp:c},this.userPriority)};b.SquareAnnot.prototype.getContentRect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("SquareAnnot.getContentRect",{square:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.SquareAnnot.prototype.setContentRect=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(PDFNet.Rect)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+
"'. Expected type 'Rect'. Function Signature: setContentRect(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setContentRect",{square:this.id,cr:a},this.userPriority)};b.SquareAnnot.prototype.getPadding=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("SquareAnnot.getPadding",{square:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.SquareAnnot.prototype.setPadding=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setPadding' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setPadding' is of type '"+typeof a+
"'. Expected type 'Rect'. Function Signature: setPadding(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setPadding",{square:this.id,cr:a},this.userPriority)};b.SquigglyAnnot.createFromObj=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("squigglyAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SquigglyAnnot(a)})};b.SquigglyAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+
"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("squigglyAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SquigglyAnnot(a)})};b.SquigglyAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("squigglyAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.SquigglyAnnot(a)})};b.StrikeOutAnnot.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("strikeOutAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.StrikeOutAnnot(a)})};b.StrikeOutAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("strikeOutAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.StrikeOutAnnot(a)})};b.StrikeOutAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("strikeOutAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.StrikeOutAnnot(a)})};b.TextAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("textAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.TextAnnot(a)})};b.TextAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+
"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("textAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.TextAnnot(a)})};b.TextAnnot.createAtPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createAtPoint'. Expected 2 arguments. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createAtPoint' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");throw new TypeError("1st input argument '"+a+"' in function 'createAtPoint' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&c&&"Point"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createAtPoint' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");throw new TypeError("2nd input argument '"+c+"' in function 'createAtPoint' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: createAtPoint(PDFNet.SDFDoc, PDFNet.Point).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createAtPoint'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textAnnotCreateAtPoint",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.TextAnnot(a)})};b.TextAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.TextAnnot(a)})};b.TextAnnot.prototype.isOpen=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");return b.messageHandler.sendWithPromise("TextAnnot.isOpen",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setOpen=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");return b.messageHandler.sendWithPromise("TextAnnot.setOpen",{text:this.id,isopen:a},this.userPriority)};b.TextAnnot.prototype.getIcon=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");return b.messageHandler.sendWithPromise("TextAnnot.getIcon",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.TextAnnot.Icon.e_Note);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("TextAnnot.setIcon",{text:this.id,icon:a},this.userPriority)};b.TextAnnot.prototype.setIconDefault=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconDefault'. Expected 0 arguments. Function Signature: setIconDefault()");return b.messageHandler.sendWithPromise("TextAnnot.setIconDefault",{text:this.id},this.userPriority)};b.TextAnnot.prototype.getIconName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");return b.messageHandler.sendWithPromise("TextAnnot.getIconName",
{text:this.id},this.userPriority)};b.TextAnnot.prototype.setIconName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("TextAnnot.setIconName",{text:this.id,icon:a},this.userPriority)};b.TextAnnot.prototype.getState=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getState'. Expected 0 arguments. Function Signature: getState()");return b.messageHandler.sendWithPromise("TextAnnot.getState",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setState=
function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setState'. Expected at most 1 arguments. Function Signature: setState(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setState' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: setState(string).");return b.messageHandler.sendWithPromise("TextAnnot.setState",{text:this.id,state:a},this.userPriority)};b.TextAnnot.prototype.getStateModel=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStateModel'. Expected 0 arguments. Function Signature: getStateModel()");return b.messageHandler.sendWithPromise("TextAnnot.getStateModel",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setStateModel=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStateModel'. Expected 1 argument. Function Signature: setStateModel(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStateModel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStateModel' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStateModel(string).");
return b.messageHandler.sendWithPromise("TextAnnot.setStateModel",{text:this.id,sm:a},this.userPriority)};b.UnderlineAnnot.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("underlineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.UnderlineAnnot(a)})};b.UnderlineAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("underlineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.UnderlineAnnot(a)})};b.UnderlineAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("underlineAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.UnderlineAnnot(a)})};b.WatermarkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("watermarkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.WatermarkAnnot(a)})};b.WatermarkAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("watermarkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.WatermarkAnnot(a)})};b.WatermarkAnnot.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("watermarkAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"===a?null:new b.WatermarkAnnot(a)})};b.TextMarkupAnnot.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("textMarkupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.TextMarkupAnnot(a)})};b.TextMarkupAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("textMarkupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.TextMarkupAnnot(a)})};b.TextMarkupAnnot.prototype.getQuadPointCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");return b.messageHandler.sendWithPromise("TextMarkupAnnot.getQuadPointCount",{textmarkup:this.id},this.userPriority)};b.TextMarkupAnnot.prototype.getQuadPoint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");return b.messageHandler.sendWithPromise("TextMarkupAnnot.getQuadPoint",{textmarkup:this.id,idx:a},this.userPriority)};b.TextMarkupAnnot.prototype.setQuadPoint=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, PDFNet.QuadPoint)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.QuadPoint)&&c&&"QuadPoint"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, PDFNet.QuadPoint).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextMarkupAnnot.setQuadPoint",{textmarkup:this.id,idx:a,qp:c},this.userPriority)};b.WidgetAnnot.create=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+
"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'create' is of type '"+
d.name+"'. Expected type 'Field'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: create(PDFNet.SDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'create'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");var e=this;this.yieldFunction="WidgetAnnot.create";return b.messageHandler.sendWithPromise("widgetAnnotCreate",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){e.yieldFunction=void 0;
l(a.field,d);return new b.WidgetAnnot(a.result)})};b.WidgetAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("widgetAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"===a?
null:new b.WidgetAnnot(a)})};b.WidgetAnnot.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("widgetAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.WidgetAnnot(a)})};b.WidgetAnnot.prototype.getField=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getField'. Expected 0 arguments. Function Signature: getField()");return b.messageHandler.sendWithPromise("WidgetAnnot.getField",{widget:this.id},this.userPriority).then(function(a){return new b.Field(a)})};b.WidgetAnnot.prototype.getHighlightingMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighlightingMode'. Expected 0 arguments. Function Signature: getHighlightingMode()");return b.messageHandler.sendWithPromise("WidgetAnnot.getHighlightingMode",
{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setHighlightingMode=function(a){"undefined"===typeof a&&(a=b.WidgetAnnot.HighlightingMode.e_invert);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightingMode'. Expected at most 1 arguments. Function Signature: setHighlightingMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightingMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightingMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHighlightingMode(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setHighlightingMode",{widget:this.id,value:a},this.userPriority)};b.WidgetAnnot.prototype.getAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getAction",{widget:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.WidgetAnnot.prototype.setAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(PDFNet.Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Action)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setAction",{widget:this.id,action:a.id},this.userPriority)};
b.WidgetAnnot.prototype.getBorderColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColor'. Expected 0 arguments. Function Signature: getBorderColor()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBorderColor",{widget:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.WidgetAnnot.prototype.setBorderColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setBorderColor'. Expected 2 arguments. Function Signature: setBorderColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBorderColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");
throw new TypeError("1st input argument '"+a+"' in function 'setBorderColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderColor(PDFNet.ColorPt, number).");
if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBorderColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("WidgetAnnot.setBorderColor",{widget:this.id,col:a.id,compnum:c},this.userPriority)};b.WidgetAnnot.prototype.getBorderColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBorderColorCompNum'. Expected 0 arguments. Function Signature: getBorderColorCompNum()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBorderColorCompNum",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.getBackgroundColorCompNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColorCompNum'. Expected 0 arguments. Function Signature: getBackgroundColorCompNum()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBackgroundColorCompNum",
{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.getBackgroundColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColor'. Expected 0 arguments. Function Signature: getBackgroundColor()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBackgroundColor",{widget:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.WidgetAnnot.prototype.setBackgroundColor=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBackgroundColor'. Expected 2 arguments. Function Signature: setBackgroundColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBackgroundColor' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBackgroundColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'setBackgroundColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBackgroundColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBackgroundColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("WidgetAnnot.setBackgroundColor",
{widget:this.id,col:a.id,compnum:c},this.userPriority)};b.WidgetAnnot.prototype.getStaticCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticCaptionText'. Expected 0 arguments. Function Signature: getStaticCaptionText()");return b.messageHandler.sendWithPromise("WidgetAnnot.getStaticCaptionText",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setStaticCaptionText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setStaticCaptionText'. Expected 1 argument. Function Signature: setStaticCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStaticCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStaticCaptionText(string).");
return b.messageHandler.sendWithPromise("WidgetAnnot.setStaticCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getRolloverCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverCaptionText'. Expected 0 arguments. Function Signature: getRolloverCaptionText()");return b.messageHandler.sendWithPromise("WidgetAnnot.getRolloverCaptionText",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setRolloverCaptionText=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverCaptionText'. Expected 1 argument. Function Signature: setRolloverCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRolloverCaptionText' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setRolloverCaptionText(string).");return b.messageHandler.sendWithPromise("WidgetAnnot.setRolloverCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getMouseDownCaptionText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownCaptionText'. Expected 0 arguments. Function Signature: getMouseDownCaptionText()");return b.messageHandler.sendWithPromise("WidgetAnnot.getMouseDownCaptionText",
{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setMouseDownCaptionText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownCaptionText'. Expected 1 argument. Function Signature: setMouseDownCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setMouseDownCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMouseDownCaptionText(string).");return b.messageHandler.sendWithPromise("WidgetAnnot.setMouseDownCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getStaticIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticIcon'. Expected 0 arguments. Function Signature: getStaticIcon()");return b.messageHandler.sendWithPromise("WidgetAnnot.getStaticIcon",
{widget:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.WidgetAnnot.prototype.setStaticIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticIcon'. Expected 1 argument. Function Signature: setStaticIcon(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStaticIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setStaticIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setStaticIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setStaticIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setStaticIcon",{widget:this.id,icon:a.id},this.userPriority)};b.WidgetAnnot.prototype.getRolloverIcon=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverIcon'. Expected 0 arguments. Function Signature: getRolloverIcon()");return b.messageHandler.sendWithPromise("WidgetAnnot.getRolloverIcon",{widget:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.WidgetAnnot.prototype.setRolloverIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverIcon'. Expected 1 argument. Function Signature: setRolloverIcon(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setRolloverIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setRolloverIcon' is of type '"+typeof a+
"'. Expected type 'Obj'. Function Signature: setRolloverIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setRolloverIcon",{widget:this.id,icon:a.id},this.userPriority)};b.WidgetAnnot.prototype.getMouseDownIcon=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownIcon'. Expected 0 arguments. Function Signature: getMouseDownIcon()");return b.messageHandler.sendWithPromise("WidgetAnnot.getMouseDownIcon",{widget:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.WidgetAnnot.prototype.setMouseDownIcon=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownIcon'. Expected 1 argument. Function Signature: setMouseDownIcon(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setMouseDownIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setMouseDownIcon",{widget:this.id,icon:a.id},this.userPriority)};
b.WidgetAnnot.prototype.getScaleType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleType'. Expected 0 arguments. Function Signature: getScaleType()");return b.messageHandler.sendWithPromise("WidgetAnnot.getScaleType",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setScaleType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleType'. Expected 1 argument. Function Signature: setScaleType(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleType(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setScaleType",{widget:this.id,st:a},this.userPriority)};b.WidgetAnnot.prototype.getIconCaptionRelation=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconCaptionRelation'. Expected 0 arguments. Function Signature: getIconCaptionRelation()");return b.messageHandler.sendWithPromise("WidgetAnnot.getIconCaptionRelation",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setIconCaptionRelation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconCaptionRelation'. Expected 1 argument. Function Signature: setIconCaptionRelation(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconCaptionRelation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconCaptionRelation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIconCaptionRelation(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setIconCaptionRelation",{widget:this.id,icr:a},this.userPriority)};
b.WidgetAnnot.prototype.getScaleCondition=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleCondition'. Expected 0 arguments. Function Signature: getScaleCondition()");return b.messageHandler.sendWithPromise("WidgetAnnot.getScaleCondition",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setScaleCondition=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleCondition'. Expected 1 argument. Function Signature: setScaleCondition(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleCondition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleCondition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleCondition(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setScaleCondition",{widget:this.id,sd:a},this.userPriority)};b.WidgetAnnot.prototype.getFitFull=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitFull'. Expected 0 arguments. Function Signature: getFitFull()");return b.messageHandler.sendWithPromise("WidgetAnnot.getFitFull",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setFitFull=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFitFull'. Expected 1 argument. Function Signature: setFitFull(boolean)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setFitFull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFitFull' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFitFull(boolean).");return b.messageHandler.sendWithPromise("WidgetAnnot.setFitFull",{widget:this.id,ff:a},this.userPriority)};b.WidgetAnnot.prototype.getHIconLeftOver=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHIconLeftOver'. Expected 0 arguments. Function Signature: getHIconLeftOver()");return b.messageHandler.sendWithPromise("WidgetAnnot.getHIconLeftOver",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setHIconLeftOver=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHIconLeftOver'. Expected 1 argument. Function Signature: setHIconLeftOver(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHIconLeftOver(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setHIconLeftOver",{widget:this.id,hl:a},this.userPriority)};b.WidgetAnnot.prototype.getVIconLeftOver=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVIconLeftOver'. Expected 0 arguments. Function Signature: getVIconLeftOver()");return b.messageHandler.sendWithPromise("WidgetAnnot.getVIconLeftOver",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setVIconLeftOver=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVIconLeftOver'. Expected 1 argument. Function Signature: setVIconLeftOver(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVIconLeftOver(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setVIconLeftOver",{widget:this.id,vl:a},this.userPriority)};b.WidgetAnnot.prototype.setFontSize=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFontSize'. Expected 1 argument. Function Signature: setFontSize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFontSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFontSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFontSize(number).");
return b.messageHandler.sendWithPromise("WidgetAnnot.setFontSize",{widget:this.id,font_size:a},this.userPriority)};b.WidgetAnnot.prototype.setTextColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextColor'. Expected 2 arguments. Function Signature: setTextColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTextColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setTextColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setTextColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setTextColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTextColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setTextColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTextColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("WidgetAnnot.setTextColor",
{widget:this.id,col:a.id,col_comp:c},this.userPriority)};b.WidgetAnnot.prototype.setFont=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFont'. Expected 1 argument. Function Signature: setFont(PDFNet.Font)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFont' is of type '"+
a.name+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font).");throw new TypeError("1st input argument '"+a+"' in function 'setFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setFont",{widget:this.id,font:a.id},this.userPriority)};b.WidgetAnnot.prototype.getFontSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getFontSize",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.getTextColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextColor'. Expected 2 arguments. Function Signature: getTextColor(PDFNet.ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getTextColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: getTextColor(PDFNet.ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'getTextColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: getTextColor(PDFNet.ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getTextColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getTextColor(PDFNet.ColorPt, number).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'getTextColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var d=
this;this.yieldFunction="WidgetAnnot.getTextColor";return b.messageHandler.sendWithPromise("WidgetAnnot.getTextColor",{widget:this.id,col:a.id,col_comp:c},this.userPriority).then(function(b){d.yieldFunction=void 0;l(b.col,a)})};b.WidgetAnnot.prototype.getFont=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 0 arguments. Function Signature: getFont()");return b.messageHandler.sendWithPromise("WidgetAnnot.getFont",{widget:this.id},
this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SignatureWidget.create=function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("signatureWidgetCreate",
{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.SignatureWidget(a)})};b.SignatureWidget.createWithField=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");
if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("signatureWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.SignatureWidget(a)})};b.SignatureWidget.createWithDigitalSignatureField=
function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithDigitalSignatureField'. Expected 3 arguments. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithDigitalSignatureField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||
a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithDigitalSignatureField' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");throw new TypeError("1st input argument '"+a+"' in function 'createWithDigitalSignatureField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithDigitalSignatureField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithDigitalSignatureField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");
throw new TypeError("2nd input argument '"+c+"' in function 'createWithDigitalSignatureField' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithDigitalSignatureField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.DigitalSignatureField)&&d&&"DigitalSignatureField"!==
d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithDigitalSignatureField' is of type '"+d.name+"'. Expected type 'DigitalSignatureField'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithDigitalSignatureField' is of type '"+typeof d+"'. Expected type 'DigitalSignatureField'. Function Signature: createWithDigitalSignatureField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.DigitalSignatureField).");
}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithDigitalSignatureField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithDigitalSignatureField'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("signatureWidgetCreateWithDigitalSignatureField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.SignatureWidget(a)})};b.SignatureWidget.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("signatureWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.SignatureWidget(a)})};b.SignatureWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("signatureWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.SignatureWidget(a)})};b.SignatureWidget.prototype.createSignatureAppearance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSignatureAppearance'. Expected 1 argument. Function Signature: createSignatureAppearance(PDFNet.Image)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSignatureAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createSignatureAppearance' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createSignatureAppearance(PDFNet.Image).");throw new TypeError("1st input argument '"+a+"' in function 'createSignatureAppearance' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createSignatureAppearance(PDFNet.Image).");}return b.messageHandler.sendWithPromise("SignatureWidget.createSignatureAppearance",
{self:this.id,img:a.id},this.userPriority)};b.SignatureWidget.prototype.getDigitalSignatureField=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDigitalSignatureField'. Expected 0 arguments. Function Signature: getDigitalSignatureField()");return b.messageHandler.sendWithPromise("SignatureWidget.getDigitalSignatureField",{self:this.id},this.userPriority).then(function(a){return new b.DigitalSignatureField(a)})};b.ComboBoxWidget.create=
function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("comboBoxWidgetCreate",
{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.ComboBoxWidget(a)})};b.ComboBoxWidget.createWithField=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");
if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("comboBoxWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.ComboBoxWidget(a)})};b.ComboBoxWidget.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("comboBoxWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ComboBoxWidget(a)})};b.ComboBoxWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("comboBoxWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ComboBoxWidget(a)})};b.ComboBoxWidget.prototype.addOption=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addOption'. Expected 1 argument. Function Signature: addOption(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addOption' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addOption' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addOption(string).");return b.messageHandler.sendWithPromise("ComboBoxWidget.addOption",{combobox:this.id,value:a},this.userPriority)};b.ComboBoxWidget.prototype.addOptions=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addOptions'. Expected 2 arguments. Function Signature: addOptions(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addOptions' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addOptions(string, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addOptions' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addOptions(string, number).");return b.messageHandler.sendWithPromise("ComboBoxWidget.addOptions",{combobox:this.id,options:a,options_size:c},this.userPriority)};
b.ComboBoxWidget.prototype.setSelectedOption=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSelectedOption'. Expected 1 argument. Function Signature: setSelectedOption(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSelectedOption' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSelectedOption' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setSelectedOption(string).");return b.messageHandler.sendWithPromise("ComboBoxWidget.setSelectedOption",{combobox:this.id,value:a},this.userPriority)};b.ComboBoxWidget.prototype.getSelectedOption=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSelectedOption'. Expected 0 arguments. Function Signature: getSelectedOption()");return b.messageHandler.sendWithPromise("ComboBoxWidget.getSelectedOption",
{combobox:this.id},this.userPriority)};b.ComboBoxWidget.prototype.replaceOptions=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'replaceOptions'. Expected 2 arguments. Function Signature: replaceOptions(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'replaceOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'replaceOptions' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: replaceOptions(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'replaceOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'replaceOptions' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: replaceOptions(string, number).");
return b.messageHandler.sendWithPromise("ComboBoxWidget.replaceOptions",{combobox:this.id,options:a,options_size:c},this.userPriority)};b.ComboBoxWidget.prototype.removeOption=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeOption'. Expected 1 argument. Function Signature: removeOption(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeOption' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeOption' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: removeOption(string).");return b.messageHandler.sendWithPromise("ComboBoxWidget.removeOption",{combobox:this.id,value:a},this.userPriority)};b.ListBoxWidget.create=function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("listBoxWidgetCreate",{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.ListBoxWidget(a)})};b.ListBoxWidget.createWithField=function(a,c,
d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==
typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("listBoxWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.ListBoxWidget(a)})};b.ListBoxWidget.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("listBoxWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.ListBoxWidget(a)})};b.ListBoxWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("listBoxWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.ListBoxWidget(a)})};b.ListBoxWidget.prototype.addOption=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'addOption'. Expected 1 argument. Function Signature: addOption(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addOption' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addOption' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addOption(string).");return b.messageHandler.sendWithPromise("ListBoxWidget.addOption",
{listbox:this.id,value:a},this.userPriority)};b.ListBoxWidget.prototype.addOptions=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addOptions'. Expected 2 arguments. Function Signature: addOptions(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'addOptions' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addOptions(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addOptions' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addOptions(string, number).");return b.messageHandler.sendWithPromise("ListBoxWidget.addOptions",
{listbox:this.id,options:a,options_size:c},this.userPriority)};b.ListBoxWidget.prototype.setSelectedOptions=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSelectedOptions'. Expected 2 arguments. Function Signature: setSelectedOptions(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSelectedOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSelectedOptions' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSelectedOptions(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setSelectedOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setSelectedOptions' is of type '"+typeof c+
"'. Expected type 'number'. Function Signature: setSelectedOptions(string, number).");return b.messageHandler.sendWithPromise("ListBoxWidget.setSelectedOptions",{listbox:this.id,options:a,options_size:c},this.userPriority)};b.ListBoxWidget.prototype.replaceOptions=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'replaceOptions'. Expected 2 arguments. Function Signature: replaceOptions(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'replaceOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'replaceOptions' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: replaceOptions(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'replaceOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'replaceOptions' is of type '"+typeof c+
"'. Expected type 'number'. Function Signature: replaceOptions(string, number).");return b.messageHandler.sendWithPromise("ListBoxWidget.replaceOptions",{listbox:this.id,options:a,options_size:c},this.userPriority)};b.ListBoxWidget.prototype.removeOption=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeOption'. Expected 1 argument. Function Signature: removeOption(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeOption' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeOption' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: removeOption(string).");return b.messageHandler.sendWithPromise("ListBoxWidget.removeOption",{listbox:this.id,value:a},this.userPriority)};b.TextWidget.create=function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textWidgetCreate",{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.TextWidget(a)})};b.TextWidget.createWithField=function(a,c,d){if(3!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==
typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.TextWidget(a)})};b.TextWidget.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("textWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.TextWidget(a)})};b.TextWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("textWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.TextWidget(a)})};b.TextWidget.prototype.setText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setText'. Expected 1 argument. Function Signature: setText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setText(string).");return b.messageHandler.sendWithPromise("TextWidget.setText",
{widget:this.id,text:a},this.userPriority)};b.TextWidget.prototype.getText=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getText'. Expected 0 arguments. Function Signature: getText()");return b.messageHandler.sendWithPromise("TextWidget.getText",{widget:this.id},this.userPriority)};b.CheckBoxWidget.create=function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("checkBoxWidgetCreate",{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.CheckBoxWidget(a)})};b.CheckBoxWidget.createWithField=function(a,
c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==
typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("checkBoxWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.CheckBoxWidget(a)})};b.CheckBoxWidget.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("checkBoxWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.CheckBoxWidget(a)})};b.CheckBoxWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("checkBoxWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.CheckBoxWidget(a)})};b.CheckBoxWidget.prototype.isChecked=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isChecked'. Expected 0 arguments. Function Signature: isChecked()");return b.messageHandler.sendWithPromise("CheckBoxWidget.isChecked",{button:this.id},this.userPriority)};b.CheckBoxWidget.prototype.setChecked=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setChecked'. Expected 0 arguments. Function Signature: setChecked()");return b.messageHandler.sendWithPromise("CheckBoxWidget.setChecked",{button:this.id},
this.userPriority)};b.RadioButtonWidget.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("radioButtonWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.RadioButtonWidget(a)})};
b.RadioButtonWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("radioButtonWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.RadioButtonWidget(a)})};b.RadioButtonWidget.prototype.isEnabled=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isEnabled'. Expected 0 arguments. Function Signature: isEnabled()");return b.messageHandler.sendWithPromise("RadioButtonWidget.isEnabled",{button:this.id},this.userPriority)};b.RadioButtonWidget.prototype.enableButton=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableButton'. Expected 0 arguments. Function Signature: enableButton()");return b.messageHandler.sendWithPromise("RadioButtonWidget.enableButton",
{button:this.id},this.userPriority)};b.RadioButtonWidget.prototype.getGroup=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGroup'. Expected 0 arguments. Function Signature: getGroup()");return b.messageHandler.sendWithPromise("RadioButtonWidget.getGroup",{button:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.RadioButtonGroup(a)})};b.PushButtonWidget.create=function(a,c,d){"undefined"===typeof d&&(d="");if(2>arguments.length||
3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===
typeof c&&c.name)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, PDFNet.Rect, string).");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("pushButtonWidgetCreate",
{doc:a.id,pos:c,field_name:d},this.userPriority).then(function(a){return"0"===a?null:new b.PushButtonWidget(a)})};b.PushButtonWidget.createWithField=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithField'. Expected 3 arguments. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createWithField' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createWithField' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createWithField' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithField' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Field)&&d&&"Field"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createWithField' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");
throw new TypeError("3rd input argument '"+d+"' in function 'createWithField' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: createWithField(PDFNet.PDFDoc, PDFNet.Rect, PDFNet.Field).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");
if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'createWithField'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("pushButtonWidgetCreateWithField",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){return"0"===a?null:new b.PushButtonWidget(a)})};b.PushButtonWidget.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("pushButtonWidgetCreateFromObj",{obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PushButtonWidget(a)})};b.PushButtonWidget.createFromAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("pushButtonWidgetCreateFromAnnot",{annot:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PushButtonWidget(a)})};b.Bookmark.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.PDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("bookmarkCreate",
{in_doc:a.id,in_title:c},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("bookmarkCreateFromObj",{in_bookmark_dict:a.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Bookmark(a)})};b.Bookmark.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Bookmark.copy",{in_bookmark:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.Bookmark)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Bookmark)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: compare(PDFNet.Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: compare(PDFNet.Bookmark).");
}return b.messageHandler.sendWithPromise("Bookmark.compare",{bm:this.id,in_bookmark:a.id},this.userPriority)};b.Bookmark.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Bookmark.isValid",{bm:this.id},this.userPriority)};b.Bookmark.prototype.hasChildren=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'hasChildren'. Expected 0 arguments. Function Signature: hasChildren()");return b.messageHandler.sendWithPromise("Bookmark.hasChildren",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getNext=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNext'. Expected 0 arguments. Function Signature: getNext()");return b.messageHandler.sendWithPromise("Bookmark.getNext",{bm:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getPrev=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrev'. Expected 0 arguments. Function Signature: getPrev()");return b.messageHandler.sendWithPromise("Bookmark.getPrev",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getFirstChild=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstChild'. Expected 0 arguments. Function Signature: getFirstChild()");
return b.messageHandler.sendWithPromise("Bookmark.getFirstChild",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getLastChild=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLastChild'. Expected 0 arguments. Function Signature: getLastChild()");return b.messageHandler.sendWithPromise("Bookmark.getLastChild",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:
new b.Bookmark(a)})};b.Bookmark.prototype.getParent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");return b.messageHandler.sendWithPromise("Bookmark.getParent",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.find=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 1 argument. Function Signature: find(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: find(string).");return b.messageHandler.sendWithPromise("Bookmark.find",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addNewChild=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewChild'. Expected 1 argument. Function Signature: addNewChild(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewChild' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewChild' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addNewChild(string).");
return b.messageHandler.sendWithPromise("Bookmark.addNewChild",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addChild=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addChild'. Expected 1 argument. Function Signature: addChild(PDFNet.Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addChild' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addChild' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addChild(PDFNet.Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addChild' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addChild(PDFNet.Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addChild",{bm:this.id,in_bookmark:a.id},this.userPriority)};
b.Bookmark.prototype.addNewNext=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewNext'. Expected 1 argument. Function Signature: addNewNext(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewNext' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewNext' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: addNewNext(string).");return b.messageHandler.sendWithPromise("Bookmark.addNewNext",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addNext=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNext'. Expected 1 argument. Function Signature: addNext(PDFNet.Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNext' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addNext' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addNext(PDFNet.Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addNext' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addNext(PDFNet.Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addNext",{bm:this.id,in_bookmark:a.id},this.userPriority)};
b.Bookmark.prototype.addNewPrev=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewPrev'. Expected 1 argument. Function Signature: addNewPrev(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewPrev' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewPrev' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: addNewPrev(string).");return b.messageHandler.sendWithPromise("Bookmark.addNewPrev",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"===a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addPrev=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addPrev'. Expected 1 argument. Function Signature: addPrev(PDFNet.Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addPrev' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addPrev' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addPrev(PDFNet.Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addPrev' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addPrev(PDFNet.Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addPrev",{bm:this.id,in_bookmark:a.id},this.userPriority)};
b.Bookmark.prototype.delete=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'delete'. Expected 0 arguments. Function Signature: delete()");return b.messageHandler.sendWithPromise("Bookmark.delete",{bm:this.id},this.userPriority)};b.Bookmark.prototype.unlink=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlink'. Expected 0 arguments. Function Signature: unlink()");return b.messageHandler.sendWithPromise("Bookmark.unlink",
{bm:this.id},this.userPriority)};b.Bookmark.prototype.getIndent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIndent'. Expected 0 arguments. Function Signature: getIndent()");return b.messageHandler.sendWithPromise("Bookmark.getIndent",{bm:this.id},this.userPriority)};b.Bookmark.prototype.isOpen=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");
return b.messageHandler.sendWithPromise("Bookmark.isOpen",{bm:this.id},this.userPriority)};b.Bookmark.prototype.setOpen=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setOpen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");return b.messageHandler.sendWithPromise("Bookmark.setOpen",{bm:this.id,in_open:a},this.userPriority)};b.Bookmark.prototype.getOpenCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpenCount'. Expected 0 arguments. Function Signature: getOpenCount()");return b.messageHandler.sendWithPromise("Bookmark.getOpenCount",{bm:this.id},
this.userPriority)};b.Bookmark.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("Bookmark.getTitle",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getTitleObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitleObj'. Expected 0 arguments. Function Signature: getTitleObj()");
return b.messageHandler.sendWithPromise("Bookmark.getTitleObj",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Bookmark.prototype.setTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("Bookmark.setTitle",{bm:this.id,title:a},this.userPriority)};b.Bookmark.prototype.getAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("Bookmark.getAction",
{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.Bookmark.prototype.setAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(PDFNet.Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(PDFNet.Action).");}return b.messageHandler.sendWithPromise("Bookmark.setAction",{bm:this.id,in_action:a.id},this.userPriority)};b.Bookmark.prototype.removeAction=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeAction'. Expected 0 arguments. Function Signature: removeAction()");return b.messageHandler.sendWithPromise("Bookmark.removeAction",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getFlags=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlags'. Expected 0 arguments. Function Signature: getFlags()");return b.messageHandler.sendWithPromise("Bookmark.getFlags",
{bm:this.id},this.userPriority)};b.Bookmark.prototype.setFlags=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlags'. Expected 1 argument. Function Signature: setFlags(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlags' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlags' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setFlags(number).");return b.messageHandler.sendWithPromise("Bookmark.setFlags",{bm:this.id,in_flags:a},this.userPriority)};b.Bookmark.prototype.getColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");return b.messageHandler.sendWithPromise("Bookmark.getColor",{bm:this.id},this.userPriority)};b.Bookmark.prototype.setColor=
function(a,c,d){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&(c=0);"undefined"===typeof d&&(d=0);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColor'. Expected at most 3 arguments. Function Signature: setColor(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColor(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setColor(number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setColor' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setColor(number, number, number).");return b.messageHandler.sendWithPromise("Bookmark.setColor",{bm:this.id,in_r:a,in_g:c,in_b:d},this.userPriority)};b.Bookmark.prototype.getSDFObj=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Bookmark.getSDFObj",{bm:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ColorPt.init=function(a,c,d,e){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&(c=0);"undefined"===typeof d&&(d=0);"undefined"===typeof e&&(e=0);if(4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'init'. Expected at most 4 arguments. Function Signature: init(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");
return b.messageHandler.sendWithPromise("colorPtInit",{x:a,y:c,z:d,w:e},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorPt.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: compare(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: compare(PDFNet.ColorPt).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ColorPt.compare",{left:this.id,right:a.id},this.userPriority)};b.ColorPt.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'destroy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="ColorPt.destroy";for(var c=-1,d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==this.id){c=d;break}if(-1!=
c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(c<deallocStackCounter[d])--deallocStackCounter[d];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ColorPt.destroy",{auto_dealloc_obj:this.id},this.userPriority).then(function(b){a.yieldFunction=void 0})};b.ColorPt.prototype.set=function(a,c,d,e){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&
(c=0);"undefined"===typeof d&&(d=0);"undefined"===typeof e&&(e=0);if(4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'set'. Expected at most 4 arguments. Function Signature: set(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'set' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var h=this;this.yieldFunction="ColorPt.set";return b.messageHandler.sendWithPromise("ColorPt.set",{cp:this.id,x:a,y:c,z:d,w:e},this.userPriority).then(function(a){h.yieldFunction=void 0;l(a.cp,h)})};b.ColorPt.prototype.setByIndex=function(a,
c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setByIndex'. Expected 2 arguments. Function Signature: setByIndex(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setByIndex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setByIndex(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setByIndex' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setByIndex(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setByIndex'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var d=this;this.yieldFunction="ColorPt.setByIndex";return b.messageHandler.sendWithPromise("ColorPt.setByIndex",{cp:this.id,colorant_index:a,colorant_value:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.cp,d)})};b.ColorPt.prototype.get=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 1 argument. Function Signature: get(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'get' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'get' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: get(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'get'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ColorPt.get",{cp:this.id,
colorant_index:a},this.userPriority)};b.ColorPt.prototype.setColorantNum=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorantNum'. Expected 1 argument. Function Signature: setColorantNum(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorantNum' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setColorantNum' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorantNum(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setColorantNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="ColorPt.setColorantNum";return b.messageHandler.sendWithPromise("ColorPt.setColorantNum",
{cp:this.id,num:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.cp,c)})};b.ColorSpace.createDeviceGray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDeviceGray'. Expected 0 arguments. Function Signature: createDeviceGray()");return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceGray",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});
return a})};b.ColorSpace.createDeviceRGB=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDeviceRGB'. Expected 0 arguments. Function Signature: createDeviceRGB()");return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceRGB",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createDeviceCMYK=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createDeviceCMYK'. Expected 0 arguments. Function Signature: createDeviceCMYK()");return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceCMYK",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createPattern=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createPattern'. Expected 0 arguments. Function Signature: createPattern()");
return b.messageHandler.sendWithPromise("colorSpaceCreatePattern",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("colorSpaceCreate",{color_space:a.id},this.userPriority).then(function(a){if("0"===a)return null;
a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createICCFromFile=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createICCFromFile'. Expected 2 arguments. Function Signature: createICCFromFile(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createICCFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createICCFromFile' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFile(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createICCFromFile' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFile(PDFNet.SDFDoc, string).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createICCFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createICCFromFile' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createICCFromFile(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("colorSpaceCreateICCFromFile",{doc:a.id,filepath:c},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createICCFromFilter=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createICCFromFilter'. Expected 2 arguments. Function Signature: createICCFromFilter(PDFNet.SDFDoc, PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createICCFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createICCFromFilter' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFilter(PDFNet.SDFDoc, PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createICCFromFilter' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFilter(PDFNet.SDFDoc, PDFNet.Filter).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createICCFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createICCFromFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: createICCFromFilter(PDFNet.SDFDoc, PDFNet.Filter).");throw new TypeError("2nd input argument '"+c+"' in function 'createICCFromFilter' is of type '"+
typeof c+"'. Expected type 'Filter'. Function Signature: createICCFromFilter(PDFNet.SDFDoc, PDFNet.Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("colorSpaceCreateICCFromFilter",
{doc:a.id,no_own_filter:c.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createICCFromBuffer=function(a,c){var d=c;g.isArrayBuffer(d)||(d=d.buffer,c.byteLength<d.byteLength&&(d=d.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createICCFromBuffer'. Expected 2 arguments. Function Signature: createICCFromBuffer(PDFNet.SDFDoc, ArrayBuffer|TypedArray)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createICCFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createICCFromBuffer' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createICCFromBuffer(PDFNet.SDFDoc, ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+
a+"' in function 'createICCFromBuffer' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createICCFromBuffer(PDFNet.SDFDoc, ArrayBuffer|TypedArray).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createICCFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createICCFromBuffer' is of type '"+c.name+
"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createICCFromBuffer(PDFNet.SDFDoc, ArrayBuffer|TypedArray).");throw new TypeError("2nd input argument '"+c+"' in function 'createICCFromBuffer' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createICCFromBuffer(PDFNet.SDFDoc, ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("colorSpaceCreateICCFromBuffer",{doc:a.id,buf:d},this.userPriority).then(function(a){if("0"===a)return null;
a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ColorSpace.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ColorSpace.getComponentNumFromObj=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNumFromObj'. Expected 2 arguments. Function Signature: getComponentNumFromObj(number, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getComponentNumFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getComponentNumFromObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getComponentNumFromObj(number, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getComponentNumFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'getComponentNumFromObj' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: getComponentNumFromObj(number, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'getComponentNumFromObj' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: getComponentNumFromObj(number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("colorSpaceGetComponentNumFromObj",
{cs_type:a,cs_obj:c.id},this.userPriority)};b.ColorSpace.getTypeFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("colorSpaceGetTypeFromObj",{cs_obj:a.id},this.userPriority)};b.ColorSpace.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");
return b.messageHandler.sendWithPromise("ColorSpace.getType",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("ColorSpace.getSDFObj",{cs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ColorSpace.prototype.getComponentNum=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");return b.messageHandler.sendWithPromise("ColorSpace.getComponentNum",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.initColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initColor'. Expected 0 arguments. Function Signature: initColor()");var a=this;this.yieldFunction=
"ColorSpace.initColor";return b.messageHandler.sendWithPromise("ColorSpace.initColor",{cs:this.id},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.out_colorants,out_colorants)})};b.ColorSpace.prototype.initComponentRanges=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initComponentRanges'. Expected 1 argument. Function Signature: initComponentRanges(number)");if(a instanceof Promise)throw new TypeError("3rd input argument in function 'initComponentRanges' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("3rd input argument '"+a+"' in function 'initComponentRanges' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: initComponentRanges(number).");return b.messageHandler.sendWithPromise("ColorSpace.initComponentRanges",{cs:this.id,num_comps:a},this.userPriority)};b.ColorSpace.prototype.convert2Gray=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert2Gray'. Expected 1 argument. Function Signature: convert2Gray(PDFNet.ColorPt)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2Gray' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'convert2Gray' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2Gray(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'convert2Gray' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2Gray(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2Gray'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2Gray";return b.messageHandler.sendWithPromise("ColorSpace.convert2Gray",
{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.ColorSpace.prototype.convert2RGB=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert2RGB'. Expected 1 argument. Function Signature: convert2RGB(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2RGB' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'convert2RGB' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2RGB(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'convert2RGB' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2RGB(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2RGB'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2RGB";return b.messageHandler.sendWithPromise("ColorSpace.convert2RGB",{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.ColorSpace.prototype.convert2CMYK=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'convert2CMYK'. Expected 1 argument. Function Signature: convert2CMYK(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2CMYK' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'convert2CMYK' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2CMYK(PDFNet.ColorPt).");
throw new TypeError("1st input argument '"+a+"' in function 'convert2CMYK' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2CMYK(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2CMYK'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2CMYK";
return b.messageHandler.sendWithPromise("ColorSpace.convert2CMYK",{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.ColorSpace.prototype.getAlternateColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAlternateColorSpace'. Expected 0 arguments. Function Signature: getAlternateColorSpace()");return b.messageHandler.sendWithPromise("ColorSpace.getAlternateColorSpace",
{cs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.getBaseColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColorSpace'. Expected 0 arguments. Function Signature: getBaseColorSpace()");return b.messageHandler.sendWithPromise("ColorSpace.getBaseColorSpace",{cs:this.id},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.getHighVal=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighVal'. Expected 0 arguments. Function Signature: getHighVal()");return b.messageHandler.sendWithPromise("ColorSpace.getHighVal",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.getLookupTable=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getLookupTable'. Expected 0 arguments. Function Signature: getLookupTable()");return b.messageHandler.sendWithPromise("ColorSpace.getLookupTable",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.getBaseColor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColor'. Expected 1 argument. Function Signature: getBaseColor(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getBaseColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getBaseColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getBaseColor(number).");var c=this;this.yieldFunction="ColorSpace.getBaseColor";return b.messageHandler.sendWithPromise("ColorSpace.getBaseColor",{cs:this.id,color_idx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.out_color,out_color)})};b.ColorSpace.prototype.getTintFunction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTintFunction'. Expected 0 arguments. Function Signature: getTintFunction()");return b.messageHandler.sendWithPromise("ColorSpace.getTintFunction",{cs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Function(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.isAll=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAll'. Expected 0 arguments. Function Signature: isAll()");
return b.messageHandler.sendWithPromise("ColorSpace.isAll",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.isNone=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNone'. Expected 0 arguments. Function Signature: isNone()");return b.messageHandler.sendWithPromise("ColorSpace.isNone",{cs:this.id},this.userPriority)};b.ContentReplacer.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");
return b.messageHandler.sendWithPromise("contentReplacerCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ContentReplacer(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ContentReplacer.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;
break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ContentReplacer.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ContentReplacer.prototype.addImage=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'addImage'. Expected 2 arguments. Function Signature: addImage(PDFNet.Rect, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addImage' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: addImage(PDFNet.Rect, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'addImage' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: addImage(PDFNet.Rect, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'addImage' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: addImage(PDFNet.Rect, PDFNet.Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'addImage' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: addImage(PDFNet.Rect, PDFNet.Obj).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'addImage'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ContentReplacer.addImage",
{cr:this.id,target_region:a,replacement_image:c.id},this.userPriority)};b.ContentReplacer.prototype.addText=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addText'. Expected 2 arguments. Function Signature: addText(PDFNet.Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==
a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addText' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: addText(PDFNet.Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'addText' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: addText(PDFNet.Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addText(PDFNet.Rect, string).");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'addText'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ContentReplacer.addText",
{cr:this.id,target_region:a,replacement_text:c},this.userPriority)};b.ContentReplacer.prototype.addString=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addString'. Expected 2 arguments. Function Signature: addString(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'addString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addString(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addString(string, string).");return b.messageHandler.sendWithPromise("ContentReplacer.addString",
{cr:this.id,template_text:a,replacement_text:c},this.userPriority)};b.ContentReplacer.prototype.setMatchStrings=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMatchStrings'. Expected 2 arguments. Function Signature: setMatchStrings(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMatchStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMatchStrings' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMatchStrings(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setMatchStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setMatchStrings' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setMatchStrings(string, string).");
return b.messageHandler.sendWithPromise("ContentReplacer.setMatchStrings",{cr:this.id,start_str:a,end_str:c},this.userPriority)};b.ContentReplacer.prototype.process=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'process'. Expected 1 argument. Function Signature: process(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'process' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: process(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'process' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: process(PDFNet.Page).");}return b.messageHandler.sendWithPromise("ContentReplacer.process",{cr:this.id,page:a.id},this.userPriority)};b.DocumentConversion.prototype.getDoc=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDoc'. Expected 0 arguments. Function Signature: getDoc()");return b.messageHandler.sendWithPromise("DocumentConversion.getDoc",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.DocumentConversion.prototype.isCancelled=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isCancelled'. Expected 0 arguments. Function Signature: isCancelled()");
return b.messageHandler.sendWithPromise("DocumentConversion.isCancelled",{self:this.id},this.userPriority)};b.DocumentConversion.prototype.getNumConvertedPages=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumConvertedPages'. Expected 0 arguments. Function Signature: getNumConvertedPages()");return b.messageHandler.sendWithPromise("DocumentConversion.getNumConvertedPages",{self:this.id},this.userPriority)};b.Convert.fromXps=function(a,
c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromXps'. Expected 2 arguments. Function Signature: fromXps(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromXps' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: fromXps(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'fromXps' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromXps(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+
"' in function 'fromXps' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fromXps(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("convertFromXps",{in_pdfdoc:a.id,in_filename:c},this.userPriority)};b.Convert.fromXpsMem=function(a,c){var d=c;g.isArrayBuffer(d)||(d=d.buffer,c.byteLength<d.byteLength&&(d=d.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromXpsMem'. Expected 2 arguments. Function Signature: fromXpsMem(PDFNet.PDFDoc, ArrayBuffer|TypedArray)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromXpsMem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromXpsMem' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromXpsMem(PDFNet.PDFDoc, ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+
a+"' in function 'fromXpsMem' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromXpsMem(PDFNet.PDFDoc, ArrayBuffer|TypedArray).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromXpsMem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'fromXpsMem' is of type '"+c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: fromXpsMem(PDFNet.PDFDoc, ArrayBuffer|TypedArray).");
throw new TypeError("2nd input argument '"+c+"' in function 'fromXpsMem' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: fromXpsMem(PDFNet.PDFDoc, ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("convertFromXpsMem",{in_pdfdoc:a.id,buf:d},this.userPriority)};b.Convert.fromEmf=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromEmf'. Expected 2 arguments. Function Signature: fromEmf(PDFNet.PDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromEmf' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromEmf(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'fromEmf' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromEmf(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fromEmf' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fromEmf(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("convertFromEmf",
{in_pdfdoc:a.id,in_filename:c},this.userPriority)};b.Convert.pageToEmf=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageToEmf'. Expected 2 arguments. Function Signature: pageToEmf(PDFNet.Page, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageToEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageToEmf' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: pageToEmf(PDFNet.Page, string).");throw new TypeError("1st input argument '"+a+"' in function 'pageToEmf' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pageToEmf(PDFNet.Page, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pageToEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+
"' in function 'pageToEmf' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: pageToEmf(PDFNet.Page, string).");return b.messageHandler.sendWithPromise("convertPageToEmf",{in_page:a.id,in_filename:c},this.userPriority)};b.Convert.docToEmf=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'docToEmf'. Expected 2 arguments. Function Signature: docToEmf(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'docToEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'docToEmf' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: docToEmf(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'docToEmf' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: docToEmf(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'docToEmf' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'docToEmf' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: docToEmf(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("convertDocToEmf",{in_pdfdoc:a.id,in_filename:c},this.userPriority)};b.Convert.fromText=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromText'. Expected 2 to 3 arguments. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromText' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'fromText' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fromText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'fromText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'fromText' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'fromText' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fromText(PDFNet.PDFDoc, string, PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("convertFromText",{in_pdfdoc:a.id,in_filename:c,options:d.id},this.userPriority)};b.Convert.pageToSvg=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageToSvg'. Expected 2 arguments. Function Signature: pageToSvg(PDFNet.Page, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageToSvg' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageToSvg' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pageToSvg(PDFNet.Page, string).");throw new TypeError("1st input argument '"+a+"' in function 'pageToSvg' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pageToSvg(PDFNet.Page, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pageToSvg' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pageToSvg' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: pageToSvg(PDFNet.Page, string).");return b.messageHandler.sendWithPromise("convertPageToSvg",{in_page:a.id,in_filename:c},this.userPriority)};b.Convert.pageToSvgWithOptions=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageToSvgWithOptions'. Expected 2 to 3 arguments. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageToSvgWithOptions' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'pageToSvgWithOptions' is of type '"+
typeof a+"'. Expected type 'Page'. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pageToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pageToSvgWithOptions' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'pageToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.SVGOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'pageToSvgWithOptions' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+
d+"' in function 'pageToSvgWithOptions' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: pageToSvgWithOptions(PDFNet.Page, string, PDFNet.Obj).");if("PDFNet.Convert.SVGOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertPageToSvgWithOptions",{in_page:a.id,in_filename:c,options:d.id},this.userPriority)})};b.Convert.docToSvg=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'docToSvg'. Expected 2 arguments. Function Signature: docToSvg(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'docToSvg' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'docToSvg' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: docToSvg(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'docToSvg' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: docToSvg(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'docToSvg' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'docToSvg' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: docToSvg(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("convertDocToSvg",{in_pdfdoc:a.id,in_filename:c},this.userPriority)};b.Convert.docToSvgWithOptions=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'docToSvgWithOptions'. Expected 2 to 3 arguments. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'docToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'docToSvgWithOptions' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'docToSvgWithOptions' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'docToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'docToSvgWithOptions' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'docToSvgWithOptions' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.SVGOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'docToSvgWithOptions' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+
d+"' in function 'docToSvgWithOptions' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: docToSvgWithOptions(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.SVGOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertDocToSvgWithOptions",{in_pdfdoc:a.id,in_filename:c,options:d.id},this.userPriority)})};b.Convert.toXps=
function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toXps'. Expected 2 to 3 arguments. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof
b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toXps' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toXps' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toXps' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'toXps' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'toXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.XPSOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'toXps' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'toXps' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: toXps(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.XPSOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertToXps",
{in_pdfdoc:a.id,in_filename:c,options:d.id},this.userPriority)})};b.Convert.fileToXps=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToXps'. Expected 2 to 3 arguments. Function Signature: fileToXps(string, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToXps' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fileToXps' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToXps(string, string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fileToXps' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fileToXps(string, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fileToXps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.XPSOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'fileToXps' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fileToXps(string, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'fileToXps' is of type '"+
typeof d+"'. Expected type 'Obj'. Function Signature: fileToXps(string, string, PDFNet.Obj).");if("PDFNet.Convert.XPSOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertFileToXps",{in_inputFilename:a,in_outputFilename:c,options:d.id},this.userPriority)})};b.Convert.fileToXod=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>
arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToXod'. Expected 2 to 3 arguments. Function Signature: fileToXod(string, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToXod' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fileToXod' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToXod(string, string, PDFNet.Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToXod' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fileToXod' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fileToXod(string, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fileToXod' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.XODOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'fileToXod' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fileToXod(string, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'fileToXod' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fileToXod(string, string, PDFNet.Obj).");if("PDFNet.Convert.XODOutputOptions"===d.name){var e=
d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertFileToXod",{in_inputFilename:a,in_outputFilename:c,options:d.id},this.userPriority)})};b.Convert.toXod=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toXod'. Expected 2 to 3 arguments. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'toXod' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toXod' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toXod' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toXod' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'toXod' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'toXod' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.XODOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'toXod' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'toXod' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: toXod(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.XODOutputOptions"===d.name){var e=
d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertToXod",{in_pdfdoc:a.id,in_outputFilename:c,options:d.id},this.userPriority)})};b.Convert.fileToXodStream=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToXodStream'. Expected 1 to 2 arguments. Function Signature: fileToXodStream(string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToXodStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fileToXodStream' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToXodStream(string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToXodStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.Convert.XODOutputOptions"!==c.name)throw new TypeError("2nd input argument in function 'fileToXodStream' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: fileToXodStream(string, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'fileToXodStream' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: fileToXodStream(string, PDFNet.Obj).");if("PDFNet.Convert.XODOutputOptions"===
c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("convertFileToXodStream",{in_filename:a,options:c.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})})};b.Convert.toXodStream=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'toXodStream'. Expected 1 to 2 arguments. Function Signature: toXodStream(PDFNet.PDFDoc, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toXodStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toXodStream' is of type '"+a.name+
"'. Expected type 'PDFDoc'. Function Signature: toXodStream(PDFNet.PDFDoc, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toXodStream' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toXodStream(PDFNet.PDFDoc, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toXodStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.Convert.XODOutputOptions"!==
c.name)throw new TypeError("2nd input argument in function 'toXodStream' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: toXodStream(PDFNet.PDFDoc, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'toXodStream' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: toXodStream(PDFNet.PDFDoc, PDFNet.Obj).");if("PDFNet.Convert.XODOutputOptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=
Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("convertToXodStream",{in_pdfdoc:a.id,options:c.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})})};b.Convert.toXodWithMonitor=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toXodWithMonitor'. Expected 1 to 2 arguments. Function Signature: toXodWithMonitor(PDFNet.PDFDoc, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'toXodWithMonitor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toXodWithMonitor' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: toXodWithMonitor(PDFNet.PDFDoc, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'toXodWithMonitor' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toXodWithMonitor(PDFNet.PDFDoc, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toXodWithMonitor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.Convert.XODOutputOptions"!==c.name)throw new TypeError("2nd input argument in function 'toXodWithMonitor' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: toXodWithMonitor(PDFNet.PDFDoc, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'toXodWithMonitor' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: toXodWithMonitor(PDFNet.PDFDoc, PDFNet.Obj).");if("PDFNet.Convert.XODOutputOptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("convertToXodWithMonitor",
{in_pdfdoc:a.id,options:c.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ConversionMonitor(a);createdObjects.push({name:a.name,id:a.id});return a})})};b.ConversionMonitor.prototype.next=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("ConversionMonitor.next",{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.ready=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'ready'. Expected 0 arguments. Function Signature: ready()");return b.messageHandler.sendWithPromise("ConversionMonitor.ready",{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.progress=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'progress'. Expected 0 arguments. Function Signature: progress()");return b.messageHandler.sendWithPromise("ConversionMonitor.progress",
{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.filter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'filter'. Expected 0 arguments. Function Signature: filter()");return b.messageHandler.sendWithPromise("ConversionMonitor.filter",{conversionMonitor:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ConversionMonitor.prototype.destroy=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("ConversionMonitor.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Convert.officeToPdfWithPath=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'officeToPdfWithPath'. Expected 2 to 3 arguments. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'officeToPdfWithPath' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'officeToPdfWithPath' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'officeToPdfWithPath' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.ConversionOptions"!==d.name)throw new TypeError("3rd input argument in function 'officeToPdfWithPath' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'officeToPdfWithPath' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: officeToPdfWithPath(PDFNet.PDFDoc, string, PDFNet.Obj).");
if("PDFNet.Convert.ConversionOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertOfficeToPdfWithPath",{in_pdfdoc:a.id,in_filename:c,options:d.id},this.userPriority)})};b.Convert.streamingPdfConversionWithPath=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'streamingPdfConversionWithPath'. Expected 1 to 2 arguments. Function Signature: streamingPdfConversionWithPath(string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: streamingPdfConversionWithPath(string, PDFNet.Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.Convert.ConversionOptions"!==c.name)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPath' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPath(string, PDFNet.Obj).");
}else throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithPath' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPath(string, PDFNet.Obj).");if("PDFNet.Convert.ConversionOptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPath",{in_filename:a,
options:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.DocumentConversion(a)})})};b.Convert.streamingPdfConversionWithPdfAndPath=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithPdfAndPath'. Expected 2 to 3 arguments. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndPath' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.ConversionOptions"!==d.name)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndPath' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFNet.PDFDoc, string, PDFNet.Obj).");
if("PDFNet.Convert.ConversionOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPdfAndPath",{in_pdfdoc:a,in_filename:c,options:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.DocumentConversion(a)})})};b.Convert.officeToPdfWithFilter=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>
arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'officeToPdfWithFilter'. Expected 2 to 3 arguments. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'officeToPdfWithFilter' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'officeToPdfWithFilter' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'officeToPdfWithFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'officeToPdfWithFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");}if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.ConversionOptions"!==d.name)throw new TypeError("3rd input argument in function 'officeToPdfWithFilter' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+
d+"' in function 'officeToPdfWithFilter' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: officeToPdfWithFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");var e=-1;if(0!=c.id){for(var h=createdObjects.length-1;0<=h;h--)if(createdObjects[h].id==c.id){e=h;break}if(-1!=e)for(createdObjects.splice(e,1),h=deallocStackCounter.length-1;0<=h;h--)if(deallocStackCounter[h]>e)--deallocStackCounter[h];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}if("PDFNet.Convert.ConversionOptions"===
d.name){var f=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(f))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertOfficeToPdfWithFilter",{in_pdfdoc:a.id,no_own_in_stream:c.id,options:d.id},this.userPriority)})};b.Convert.streamingPdfConversionWithFilter=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithFilter'. Expected 1 to 2 arguments. Function Signature: streamingPdfConversionWithFilter(PDFNet.Filter, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'streamingPdfConversionWithFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithFilter(PDFNet.Filter, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'streamingPdfConversionWithFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithFilter(PDFNet.Filter, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.Convert.ConversionOptions"!==c.name)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithFilter' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithFilter(PDFNet.Filter, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithFilter' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithFilter(PDFNet.Filter, PDFNet.Obj).");if("PDFNet.Convert.ConversionOptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);
return c.then(function(c){return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithFilter",{in_stream:a.id,options:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.DocumentConversion(a)})})};b.Convert.streamingPdfConversionWithPdfAndFilter=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithPdfAndFilter'. Expected 2 to 3 arguments. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&
c.name)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.ConversionOptions"!==d.name)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");
}else throw new TypeError("3rd input argument '"+d+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFNet.PDFDoc, PDFNet.Filter, PDFNet.Obj).");if("PDFNet.Convert.ConversionOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPdfAndFilter",
{in_pdfdoc:a,in_stream:c.id,options:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.DocumentConversion(a)})})};b.Convert.toPdf=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toPdf'. Expected 2 arguments. Function Signature: toPdf(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toPdf' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toPdf' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: toPdf(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'toPdf' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toPdf(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toPdf' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'toPdf' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toPdf(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("convertToPdf",{in_pdfdoc:a.id,in_filename:c},this.userPriority)};b.Convert.fromCAD=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromCAD'. Expected 2 to 3 arguments. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromCAD' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromCAD' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'fromCAD' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromCAD' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fromCAD' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fromCAD' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.CADConvertOptions"!==d.name)throw new TypeError("3rd input argument in function 'fromCAD' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'fromCAD' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fromCAD(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.CADConvertOptions"===
d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertFromCAD",{in_pdfdoc:a.id,in_filename:c,opts:d.id},this.userPriority)})};b.Convert.fromTiff=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromTiff'. Expected 2 arguments. Function Signature: fromTiff(PDFNet.PDFDoc, PDFNet.Filter)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'fromTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fromTiff' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromTiff(PDFNet.PDFDoc, PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'fromTiff' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromTiff(PDFNet.PDFDoc, PDFNet.Filter).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'fromTiff' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: fromTiff(PDFNet.PDFDoc, PDFNet.Filter).");
throw new TypeError("2nd input argument '"+c+"' in function 'fromTiff' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: fromTiff(PDFNet.PDFDoc, PDFNet.Filter).");}return b.messageHandler.sendWithPromise("convertFromTiff",{in_pdfdoc:a.id,in_data:c.id},this.userPriority)};b.Convert.requiresPrinter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'requiresPrinter'. Expected 1 argument. Function Signature: requiresPrinter(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'requiresPrinter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'requiresPrinter' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: requiresPrinter(string).");return b.messageHandler.sendWithPromise("convertRequiresPrinter",{in_filename:a},this.userPriority)};b.Convert.printerInstall=
function(a){"undefined"===typeof a&&(a="PDFTron PDFNet");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerInstall'. Expected at most 1 arguments. Function Signature: printerInstall(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'printerInstall' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'printerInstall' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: printerInstall(string).");return b.messageHandler.sendWithPromise("convertPrinterInstall",{in_printerName:a},this.userPriority)};b.Convert.printerUninstall=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerUninstall'. Expected 0 arguments. Function Signature: printerUninstall()");return b.messageHandler.sendWithPromise("convertPrinterUninstall",{},this.userPriority)};b.Convert.printerGetPrinterName=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerGetPrinterName'. Expected 0 arguments. Function Signature: printerGetPrinterName()");return b.messageHandler.sendWithPromise("convertPrinterGetPrinterName",{},this.userPriority)};b.Convert.printerSetPrinterName=function(a){"undefined"===typeof a&&(a="PDFTron PDFNet");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerSetPrinterName'. Expected at most 1 arguments. Function Signature: printerSetPrinterName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'printerSetPrinterName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'printerSetPrinterName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: printerSetPrinterName(string).");return b.messageHandler.sendWithPromise("convertPrinterSetPrinterName",{in_printerName:a},this.userPriority)};
b.Convert.printerIsInstalled=function(a){"undefined"===typeof a&&(a="PDFTron PDFNet");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerIsInstalled'. Expected at most 1 arguments. Function Signature: printerIsInstalled(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'printerIsInstalled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'printerIsInstalled' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: printerIsInstalled(string).");return b.messageHandler.sendWithPromise("convertPrinterIsInstalled",{in_printerName:a},this.userPriority)};b.Convert.printerSetMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerSetMode'. Expected 1 argument. Function Signature: printerSetMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'printerSetMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'printerSetMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: printerSetMode(number).");return b.messageHandler.sendWithPromise("convertPrinterSetMode",{print_mode:a},this.userPriority)};b.Convert.printerGetMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'printerGetMode'. Expected 0 arguments. Function Signature: printerGetMode()");
return b.messageHandler.sendWithPromise("convertPrinterGetMode",{},this.userPriority)};b.Convert.fileToHtml=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToHtml'. Expected 2 to 3 arguments. Function Signature: fileToHtml(string, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fileToHtml' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToHtml(string, string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fileToHtml' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fileToHtml(string, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fileToHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.HTMLOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'fileToHtml' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fileToHtml(string, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'fileToHtml' is of type '"+
typeof d+"'. Expected type 'Obj'. Function Signature: fileToHtml(string, string, PDFNet.Obj).");if("PDFNet.Convert.HTMLOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertFileToHtml",{in_inputFilename:a,in_outputPath:c,options:d.id},this.userPriority)})};b.Convert.toHtml=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||
3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toHtml'. Expected 2 to 3 arguments. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toHtml' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toHtml' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'toHtml' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'toHtml' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.HTMLOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'toHtml' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj).");
}else throw new TypeError("3rd input argument '"+d+"' in function 'toHtml' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: toHtml(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.HTMLOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertToHtml",{in_pdfdoc:a.id,in_outputPath:c,options:d.id},this.userPriority)})};
b.Convert.fileToEpub=function(a,c,d,e){"undefined"===typeof d&&(d=new b.Obj("0"));"undefined"===typeof e&&(e=new b.Obj("0"));if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToEpub'. Expected 2 to 4 arguments. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fileToEpub' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fileToEpub' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fileToEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.HTMLOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'fileToEpub' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");
}else throw new TypeError("3rd input argument '"+d+"' in function 'fileToEpub' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'fileToEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(e instanceof b.Obj))if("object"===typeof e&&e.name){if("PDFNet.Convert.EPUBOutputOptions"!==e.name)throw new TypeError("4th input argument in function 'fileToEpub' is of type '"+
e.name+"'. Expected type 'Obj'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");}else throw new TypeError("4th input argument '"+e+"' in function 'fileToEpub' is of type '"+typeof e+"'. Expected type 'Obj'. Function Signature: fileToEpub(string, string, PDFNet.Obj, PDFNet.Obj).");if("PDFNet.Convert.HTMLOutputOptions"===d.name){var h=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(h))})}else d=Promise.resolve(d);if("PDFNet.Convert.EPUBOutputOptions"===
e.name){var f=e;e=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(f))})}else e=Promise.resolve(e);return Promise.all([d,e]).then(function(h){d=h[0];e=h[1];return b.messageHandler.sendWithPromise("convertFileToEpub",{in_inputFilename:a,in_outputFilename:c,html_options:d.id,epub_options:e.id},this.userPriority)})};b.Convert.toEpub=function(a,c,d,e){"undefined"===typeof d&&(d=new b.Obj("0"));"undefined"===typeof e&&(e=new b.Obj("0"));if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'toEpub'. Expected 2 to 4 arguments. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toEpub' is of type '"+a.name+
"'. Expected type 'PDFDoc'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toEpub' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'toEpub' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'toEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.HTMLOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'toEpub' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'toEpub' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'toEpub' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(e instanceof b.Obj))if("object"===
typeof e&&e.name){if("PDFNet.Convert.EPUBOutputOptions"!==e.name)throw new TypeError("4th input argument in function 'toEpub' is of type '"+e.name+"'. Expected type 'Obj'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");}else throw new TypeError("4th input argument '"+e+"' in function 'toEpub' is of type '"+typeof e+"'. Expected type 'Obj'. Function Signature: toEpub(PDFNet.PDFDoc, string, PDFNet.Obj, PDFNet.Obj).");if("PDFNet.Convert.HTMLOutputOptions"===d.name){var h=
d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(h))})}else d=Promise.resolve(d);if("PDFNet.Convert.EPUBOutputOptions"===e.name){var f=e;e=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(f))})}else e=Promise.resolve(e);return Promise.all([d,e]).then(function(h){d=h[0];e=h[1];return b.messageHandler.sendWithPromise("convertToEpub",{in_pdfdoc:a.id,in_outputFilename:c,html_options:d.id,epub_options:e.id},this.userPriority)})};b.Convert.fileToTiff=
function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fileToTiff'. Expected 2 to 3 arguments. Function Signature: fileToTiff(string, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fileToTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'fileToTiff' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fileToTiff(string, string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fileToTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fileToTiff' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: fileToTiff(string, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fileToTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.TiffOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'fileToTiff' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fileToTiff(string, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'fileToTiff' is of type '"+
typeof d+"'. Expected type 'Obj'. Function Signature: fileToTiff(string, string, PDFNet.Obj).");if("PDFNet.Convert.TiffOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertFileToTiff",{in_inputFilename:a,in_outputFilename:c,options:d.id},this.userPriority)})};b.Convert.toTiff=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>
arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'toTiff'. Expected 2 to 3 arguments. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'toTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'toTiff' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'toTiff' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'toTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'toTiff' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'toTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.Convert.TiffOutputOptions"!==d.name)throw new TypeError("3rd input argument in function 'toTiff' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj).");
}else throw new TypeError("3rd input argument '"+d+"' in function 'toTiff' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: toTiff(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.Convert.TiffOutputOptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("convertToTiff",{in_pdfdoc:a.id,in_outputFilename:c,options:d.id},this.userPriority)})};
b.Date.init=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'init'. Expected 6 arguments. Function Signature: init(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'init' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");
if(f instanceof Promise)throw new TypeError("6th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'init' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("dateInit",{year:a,month:c,day:d,hour:e,minute:h,second:f},this.userPriority).then(function(a){return new b.Date(a)})};
b.Date.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Date.isValid",
{date:this},this.userPriority)};b.Date.prototype.attach=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attach'. Expected 1 argument. Function Signature: attach(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attach' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'attach' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: attach(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'attach' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: attach(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'attach'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=
this;this.yieldFunction="Date.attach";return b.messageHandler.sendWithPromise("Date.attach",{date:this,d:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.date,c)})};b.Date.prototype.update=function(a){"undefined"===typeof a&&(a=new b.Obj("__null"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'update'. Expected at most 1 arguments. Function Signature: update(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'update' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'update' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: update(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'update' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: update(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'update'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Date.update";return b.messageHandler.sendWithPromise("Date.update",{date:this,d:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.date,c);return a.result})};b.Destination.createXYZ=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createXYZ'. Expected 4 arguments. Function Signature: createXYZ(PDFNet.Page, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createXYZ' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createXYZ(PDFNet.Page, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createXYZ' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createXYZ(PDFNet.Page, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createXYZ' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createXYZ(PDFNet.Page, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createXYZ' is of type '"+typeof d+
"'. Expected type 'number'. Function Signature: createXYZ(PDFNet.Page, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createXYZ' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createXYZ(PDFNet.Page, number, number, number).");return b.messageHandler.sendWithPromise("destinationCreateXYZ",
{page:a.id,left:c,top:d,zoom:e},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.createFit=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFit'. Expected 1 argument. Function Signature: createFit(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFit' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFit' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFit(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'createFit' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFit(PDFNet.Page).");}return b.messageHandler.sendWithPromise("destinationCreateFit",{page:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};
b.Destination.createFitH=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitH'. Expected 2 arguments. Function Signature: createFitH(PDFNet.Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitH' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFitH' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: createFitH(PDFNet.Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitH' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitH(PDFNet.Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitH' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createFitH' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitH(PDFNet.Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitH",{page:a.id,top:c},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.createFitV=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitV'. Expected 2 arguments. Function Signature: createFitV(PDFNet.Page, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitV' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFitV' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitV(PDFNet.Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitV' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitV(PDFNet.Page, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitV' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitV' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitV(PDFNet.Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitV",{page:a.id,left:c},this.userPriority).then(function(a){return"0"===
a?null:new b.Destination(a)})};b.Destination.createFitR=function(a,c,d,e,h){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitR'. Expected 5 arguments. Function Signature: createFitR(PDFNet.Page, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'createFitR' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitR' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitR' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFitR' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFitR' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");
if(h instanceof Promise)throw new TypeError("5th input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'createFitR' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createFitR(PDFNet.Page, number, number, number, number).");return b.messageHandler.sendWithPromise("destinationCreateFitR",{page:a.id,left:c,bottom:d,right:e,top:h},
this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.createFitB=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitB'. Expected 1 argument. Function Signature: createFitB(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitB' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'createFitB' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitB(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'createFitB' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitB(PDFNet.Page).");}return b.messageHandler.sendWithPromise("destinationCreateFitB",{page:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};
b.Destination.createFitBH=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitBH'. Expected 2 arguments. Function Signature: createFitBH(PDFNet.Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitBH' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFitBH' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: createFitBH(PDFNet.Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitBH' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitBH(PDFNet.Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitBH' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createFitBH' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitBH(PDFNet.Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitBH",{page:a.id,top:c},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.createFitBV=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitBV'. Expected 2 arguments. Function Signature: createFitBV(PDFNet.Page, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitBV' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFitBV' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitBV(PDFNet.Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitBV' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitBV(PDFNet.Page, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitBV' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitBV' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitBV(PDFNet.Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitBV",{page:a.id,left:c},this.userPriority).then(function(a){return"0"===
a?null:new b.Destination(a)})};b.Destination.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("destinationCreate",{dest:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("Destination.copy",{d:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Destination(a)})};b.Destination.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Destination.isValid",{dest:this.id},this.userPriority)};b.Destination.prototype.getFitType=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitType'. Expected 0 arguments. Function Signature: getFitType()");return b.messageHandler.sendWithPromise("Destination.getFitType",{dest:this.id},this.userPriority)};b.Destination.prototype.getPage=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");return b.messageHandler.sendWithPromise("Destination.getPage",
{dest:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};b.Destination.prototype.setPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPage'. Expected 1 argument. Function Signature: setPage(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'setPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: setPage(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'setPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: setPage(PDFNet.Page).");}return b.messageHandler.sendWithPromise("Destination.setPage",{dest:this.id,page:a.id},this.userPriority)};b.Destination.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Destination.getSDFObj",{dest:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Destination.prototype.getExplicitDestObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getExplicitDestObj'. Expected 0 arguments. Function Signature: getExplicitDestObj()");return b.messageHandler.sendWithPromise("Destination.getExplicitDestObj",
{dest:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.getTransform=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTransform'. Expected 0 arguments. Function Signature: getTransform()");return b.messageHandler.sendWithPromise("GState.getTransform",{gs:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.GState.prototype.getStrokeColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getStrokeColorSpace'. Expected 0 arguments. Function Signature: getStrokeColorSpace()");return b.messageHandler.sendWithPromise("GState.getStrokeColorSpace",{gs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFillColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillColorSpace'. Expected 0 arguments. Function Signature: getFillColorSpace()");
return b.messageHandler.sendWithPromise("GState.getFillColorSpace",{gs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getStrokeColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeColor'. Expected 0 arguments. Function Signature: getStrokeColor()");return b.messageHandler.sendWithPromise("GState.getStrokeColor",{gs:this.id},
this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getStrokePattern=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokePattern'. Expected 0 arguments. Function Signature: getStrokePattern()");return b.messageHandler.sendWithPromise("GState.getStrokePattern",{gs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.GState.prototype.getFillColor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillColor'. Expected 0 arguments. Function Signature: getFillColor()");return b.messageHandler.sendWithPromise("GState.getFillColor",{gs:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFillPattern=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFillPattern'. Expected 0 arguments. Function Signature: getFillPattern()");return b.messageHandler.sendWithPromise("GState.getFillPattern",{gs:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFlatness=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlatness'. Expected 0 arguments. Function Signature: getFlatness()");
return b.messageHandler.sendWithPromise("GState.getFlatness",{gs:this.id},this.userPriority)};b.GState.prototype.getLineCap=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineCap'. Expected 0 arguments. Function Signature: getLineCap()");return b.messageHandler.sendWithPromise("GState.getLineCap",{gs:this.id},this.userPriority)};b.GState.prototype.getLineJoin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineJoin'. Expected 0 arguments. Function Signature: getLineJoin()");
return b.messageHandler.sendWithPromise("GState.getLineJoin",{gs:this.id},this.userPriority)};b.GState.prototype.getLineWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineWidth'. Expected 0 arguments. Function Signature: getLineWidth()");return b.messageHandler.sendWithPromise("GState.getLineWidth",{gs:this.id},this.userPriority)};b.GState.prototype.getMiterLimit=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getMiterLimit'. Expected 0 arguments. Function Signature: getMiterLimit()");return b.messageHandler.sendWithPromise("GState.getMiterLimit",{gs:this.id},this.userPriority)};b.GState.prototype.getPhase=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPhase'. Expected 0 arguments. Function Signature: getPhase()");return b.messageHandler.sendWithPromise("GState.getPhase",{gs:this.id},this.userPriority)};b.GState.prototype.getCharSpacing=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharSpacing'. Expected 0 arguments. Function Signature: getCharSpacing()");return b.messageHandler.sendWithPromise("GState.getCharSpacing",{gs:this.id},this.userPriority)};b.GState.prototype.getWordSpacing=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWordSpacing'. Expected 0 arguments. Function Signature: getWordSpacing()");
return b.messageHandler.sendWithPromise("GState.getWordSpacing",{gs:this.id},this.userPriority)};b.GState.prototype.getHorizontalScale=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHorizontalScale'. Expected 0 arguments. Function Signature: getHorizontalScale()");return b.messageHandler.sendWithPromise("GState.getHorizontalScale",{gs:this.id},this.userPriority)};b.GState.prototype.getLeading=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getLeading'. Expected 0 arguments. Function Signature: getLeading()");return b.messageHandler.sendWithPromise("GState.getLeading",{gs:this.id},this.userPriority)};b.GState.prototype.getFont=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 0 arguments. Function Signature: getFont()");return b.messageHandler.sendWithPromise("GState.getFont",{gs:this.id},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFontSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");return b.messageHandler.sendWithPromise("GState.getFontSize",{gs:this.id},this.userPriority)};b.GState.prototype.getTextRenderMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextRenderMode'. Expected 0 arguments. Function Signature: getTextRenderMode()");
return b.messageHandler.sendWithPromise("GState.getTextRenderMode",{gs:this.id},this.userPriority)};b.GState.prototype.getTextRise=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextRise'. Expected 0 arguments. Function Signature: getTextRise()");return b.messageHandler.sendWithPromise("GState.getTextRise",{gs:this.id},this.userPriority)};b.GState.prototype.isTextKnockout=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isTextKnockout'. Expected 0 arguments. Function Signature: isTextKnockout()");return b.messageHandler.sendWithPromise("GState.isTextKnockout",{gs:this.id},this.userPriority)};b.GState.prototype.getRenderingIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRenderingIntent'. Expected 0 arguments. Function Signature: getRenderingIntent()");return b.messageHandler.sendWithPromise("GState.getRenderingIntent",
{gs:this.id},this.userPriority)};b.GState.getRenderingIntentType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRenderingIntentType'. Expected 1 argument. Function Signature: getRenderingIntentType(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRenderingIntentType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getRenderingIntentType' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getRenderingIntentType(string).");return b.messageHandler.sendWithPromise("gStateGetRenderingIntentType",{name:a},this.userPriority)};b.GState.prototype.getBlendMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBlendMode'. Expected 0 arguments. Function Signature: getBlendMode()");return b.messageHandler.sendWithPromise("GState.getBlendMode",
{gs:this.id},this.userPriority)};b.GState.prototype.getFillOpacity=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillOpacity'. Expected 0 arguments. Function Signature: getFillOpacity()");return b.messageHandler.sendWithPromise("GState.getFillOpacity",{gs:this.id},this.userPriority)};b.GState.prototype.getStrokeOpacity=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeOpacity'. Expected 0 arguments. Function Signature: getStrokeOpacity()");
return b.messageHandler.sendWithPromise("GState.getStrokeOpacity",{gs:this.id},this.userPriority)};b.GState.prototype.getAISFlag=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAISFlag'. Expected 0 arguments. Function Signature: getAISFlag()");return b.messageHandler.sendWithPromise("GState.getAISFlag",{gs:this.id},this.userPriority)};b.GState.prototype.getSoftMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSoftMask'. Expected 0 arguments. Function Signature: getSoftMask()");return b.messageHandler.sendWithPromise("GState.getSoftMask",{gs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.getSoftMaskTransform=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoftMaskTransform'. Expected 0 arguments. Function Signature: getSoftMaskTransform()");return b.messageHandler.sendWithPromise("GState.getSoftMaskTransform",
{gs:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.GState.prototype.getStrokeOverprint=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeOverprint'. Expected 0 arguments. Function Signature: getStrokeOverprint()");return b.messageHandler.sendWithPromise("GState.getStrokeOverprint",{gs:this.id},this.userPriority)};b.GState.prototype.getFillOverprint=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFillOverprint'. Expected 0 arguments. Function Signature: getFillOverprint()");return b.messageHandler.sendWithPromise("GState.getFillOverprint",{gs:this.id},this.userPriority)};b.GState.prototype.getOverprintMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOverprintMode'. Expected 0 arguments. Function Signature: getOverprintMode()");return b.messageHandler.sendWithPromise("GState.getOverprintMode",
{gs:this.id},this.userPriority)};b.GState.prototype.getAutoStrokeAdjust=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAutoStrokeAdjust'. Expected 0 arguments. Function Signature: getAutoStrokeAdjust()");return b.messageHandler.sendWithPromise("GState.getAutoStrokeAdjust",{gs:this.id},this.userPriority)};b.GState.prototype.getSmoothnessTolerance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSmoothnessTolerance'. Expected 0 arguments. Function Signature: getSmoothnessTolerance()");
return b.messageHandler.sendWithPromise("GState.getSmoothnessTolerance",{gs:this.id},this.userPriority)};b.GState.prototype.getTransferFunct=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTransferFunct'. Expected 0 arguments. Function Signature: getTransferFunct()");return b.messageHandler.sendWithPromise("GState.getTransferFunct",{gs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.getBlackGenFunct=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBlackGenFunct'. Expected 0 arguments. Function Signature: getBlackGenFunct()");return b.messageHandler.sendWithPromise("GState.getBlackGenFunct",{gs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.getUCRFunct=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUCRFunct'. Expected 0 arguments. Function Signature: getUCRFunct()");
return b.messageHandler.sendWithPromise("GState.getUCRFunct",{gs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.getHalftone=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHalftone'. Expected 0 arguments. Function Signature: getHalftone()");return b.messageHandler.sendWithPromise("GState.getHalftone",{gs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.GState.prototype.setTransformMatrix=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransformMatrix'. Expected 1 argument. Function Signature: setTransformMatrix(PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTransformMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&a&&"Matrix2D"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTransformMatrix' is of type '"+
a.name+"'. Expected type 'Matrix2D'. Function Signature: setTransformMatrix(PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'setTransformMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: setTransformMatrix(PDFNet.Matrix2D).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTransformMatrix'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setTransformMatrix",{gs:this.id,mtx:a},this.userPriority)};b.GState.prototype.setTransform=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransform'. Expected 6 arguments. Function Signature: setTransform(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTransform' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTransform' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setTransform' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setTransform' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'setTransform' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'setTransform' is of type '"+
typeof f+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("GState.setTransform",{gs:this.id,a:a,b:c,c:d,d:e,h:h,v:f},this.userPriority)};b.GState.prototype.concatMatrix=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concatMatrix'. Expected 1 argument. Function Signature: concatMatrix(PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'concatMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Matrix2D)&&a&&"Matrix2D"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'concatMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: concatMatrix(PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'concatMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: concatMatrix(PDFNet.Matrix2D).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'concatMatrix'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.concatMatrix",{gs:this.id,mtx:a},this.userPriority)};b.GState.prototype.concat=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concat'. Expected 6 arguments. Function Signature: concat(number, number, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'concat' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'concat' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'concat' is of type '"+typeof d+
"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'concat' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(h instanceof
Promise)throw new TypeError("5th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'concat' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'concat' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("GState.concat",{gs:this.id,a:a,b:c,c:d,d:e,h:h,v:f},this.userPriority)};b.GState.prototype.setStrokeColorSpace=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorSpace'. Expected 1 argument. Function Signature: setStrokeColorSpace(PDFNet.ColorSpace)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorSpace)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStrokeColorSpace' is of type '"+a.name+"'. Expected type 'ColorSpace'. Function Signature: setStrokeColorSpace(PDFNet.ColorSpace).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColorSpace' is of type '"+
typeof a+"'. Expected type 'ColorSpace'. Function Signature: setStrokeColorSpace(PDFNet.ColorSpace).");}return b.messageHandler.sendWithPromise("GState.setStrokeColorSpace",{gs:this.id,cs:a.id},this.userPriority)};b.GState.prototype.setFillColorSpace=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColorSpace'. Expected 1 argument. Function Signature: setFillColorSpace(PDFNet.ColorSpace)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorSpace)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFillColorSpace' is of type '"+a.name+"'. Expected type 'ColorSpace'. Function Signature: setFillColorSpace(PDFNet.ColorSpace).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColorSpace' is of type '"+typeof a+"'. Expected type 'ColorSpace'. Function Signature: setFillColorSpace(PDFNet.ColorSpace).");}return b.messageHandler.sendWithPromise("GState.setFillColorSpace",
{gs:this.id,cs:a.id},this.userPriority)};b.GState.prototype.setStrokeColorWithColorPt=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorWithColorPt'. Expected 1 argument. Function Signature: setStrokeColorWithColorPt(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorWithColorPt' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStrokeColorWithColorPt' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setStrokeColorWithColorPt(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColorWithColorPt' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setStrokeColorWithColorPt(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setStrokeColorWithColorPt'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setStrokeColorWithColorPt",{gs:this.id,c:a.id},this.userPriority)};b.GState.prototype.setStrokeColorWithPattern=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorWithPattern'. Expected 1 argument. Function Signature: setStrokeColorWithPattern(PDFNet.PatternColor)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorWithPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStrokeColorWithPattern' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setStrokeColorWithPattern(PDFNet.PatternColor).");throw new TypeError("1st input argument '"+
a+"' in function 'setStrokeColorWithPattern' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: setStrokeColorWithPattern(PDFNet.PatternColor).");}return b.messageHandler.sendWithPromise("GState.setStrokeColorWithPattern",{gs:this.id,pattern:a.id},this.userPriority)};b.GState.prototype.setStrokeColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColor'. Expected 2 arguments. Function Signature: setStrokeColor(PDFNet.PatternColor, PDFNet.ColorPt)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setStrokeColor' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setStrokeColor(PDFNet.PatternColor, PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColor' is of type '"+
typeof a+"'. Expected type 'PatternColor'. Function Signature: setStrokeColor(PDFNet.PatternColor, PDFNet.ColorPt).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStrokeColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.ColorPt)&&c&&"ColorPt"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setStrokeColor' is of type '"+c.name+"'. Expected type 'ColorPt'. Function Signature: setStrokeColor(PDFNet.PatternColor, PDFNet.ColorPt).");
throw new TypeError("2nd input argument '"+c+"' in function 'setStrokeColor' is of type '"+typeof c+"'. Expected type 'ColorPt'. Function Signature: setStrokeColor(PDFNet.PatternColor, PDFNet.ColorPt).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setStrokeColor'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setStrokeColor",
{gs:this.id,pattern:a.id,c:c.id},this.userPriority)};b.GState.prototype.setFillColorWithColorPt=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColorWithColorPt'. Expected 1 argument. Function Signature: setFillColorWithColorPt(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorWithColorPt' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFillColorWithColorPt' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setFillColorWithColorPt(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColorWithColorPt' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setFillColorWithColorPt(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setFillColorWithColorPt'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setFillColorWithColorPt",{gs:this.id,c:a.id},this.userPriority)};b.GState.prototype.setFillColorWithPattern=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColorWithPattern'. Expected 1 argument. Function Signature: setFillColorWithPattern(PDFNet.PatternColor)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorWithPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFillColorWithPattern' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setFillColorWithPattern(PDFNet.PatternColor).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColorWithPattern' is of type '"+
typeof a+"'. Expected type 'PatternColor'. Function Signature: setFillColorWithPattern(PDFNet.PatternColor).");}return b.messageHandler.sendWithPromise("GState.setFillColorWithPattern",{gs:this.id,pattern:a.id},this.userPriority)};b.GState.prototype.setFillColor=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColor'. Expected 2 arguments. Function Signature: setFillColor(PDFNet.PatternColor, PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PatternColor)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFillColor' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setFillColor(PDFNet.PatternColor, PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColor' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: setFillColor(PDFNet.PatternColor, PDFNet.ColorPt).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFillColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.ColorPt)&&c&&"ColorPt"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setFillColor' is of type '"+c.name+"'. Expected type 'ColorPt'. Function Signature: setFillColor(PDFNet.PatternColor, PDFNet.ColorPt).");throw new TypeError("2nd input argument '"+c+"' in function 'setFillColor' is of type '"+typeof c+"'. Expected type 'ColorPt'. Function Signature: setFillColor(PDFNet.PatternColor, PDFNet.ColorPt).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setFillColor'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setFillColor",{gs:this.id,pattern:a.id,c:c.id},this.userPriority)};b.GState.prototype.setFlatness=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlatness'. Expected 1 argument. Function Signature: setFlatness(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlatness' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlatness' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFlatness(number).");return b.messageHandler.sendWithPromise("GState.setFlatness",{gs:this.id,flatness:a},this.userPriority)};b.GState.prototype.setLineCap=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineCap'. Expected 1 argument. Function Signature: setLineCap(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineCap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLineCap' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineCap(number).");
return b.messageHandler.sendWithPromise("GState.setLineCap",{gs:this.id,cap:a},this.userPriority)};b.GState.prototype.setLineJoin=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineJoin'. Expected 1 argument. Function Signature: setLineJoin(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineJoin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLineJoin' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineJoin(number).");return b.messageHandler.sendWithPromise("GState.setLineJoin",{gs:this.id,join:a},this.userPriority)};b.GState.prototype.setLineWidth=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineWidth'. Expected 1 argument. Function Signature: setLineWidth(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setLineWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLineWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineWidth(number).");return b.messageHandler.sendWithPromise("GState.setLineWidth",{gs:this.id,width:a},this.userPriority)};b.GState.prototype.setMiterLimit=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMiterLimit'. Expected 1 argument. Function Signature: setMiterLimit(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMiterLimit' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMiterLimit' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMiterLimit(number).");
return b.messageHandler.sendWithPromise("GState.setMiterLimit",{gs:this.id,miter_limit:a},this.userPriority)};b.GState.prototype.setDashPattern=function(a,c){var d=a;a instanceof Array&&(d=new Float64Array(a));g.isArrayBuffer(d)||(d=d.buffer,a.byteLength<d.byteLength&&(d=d.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDashPattern'. Expected 2 arguments. Function Signature: setDashPattern(Array, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setDashPattern' is of type '"+a.name+"'. Expected type 'Array'. Function Signature: setDashPattern(Array, number).");throw new TypeError("1st input argument '"+a+"' in function 'setDashPattern' is of type '"+typeof a+
"'. Expected type 'Array'. Function Signature: setDashPattern(Array, number).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'setDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'setDashPattern' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setDashPattern(Array, number).");return b.messageHandler.sendWithPromise("GState.setDashPattern",
{gs:this.id,buf_dash_array:d,phase:c},this.userPriority)};b.GState.prototype.setCharSpacing=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCharSpacing'. Expected 1 argument. Function Signature: setCharSpacing(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCharSpacing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setCharSpacing' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setCharSpacing(number).");return b.messageHandler.sendWithPromise("GState.setCharSpacing",{gs:this.id,char_spacing:a},this.userPriority)};b.GState.prototype.setWordSpacing=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWordSpacing'. Expected 1 argument. Function Signature: setWordSpacing(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setWordSpacing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setWordSpacing' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setWordSpacing(number).");return b.messageHandler.sendWithPromise("GState.setWordSpacing",{gs:this.id,word_spacing:a},this.userPriority)};b.GState.prototype.setHorizontalScale=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHorizontalScale'. Expected 1 argument. Function Signature: setHorizontalScale(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHorizontalScale' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHorizontalScale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHorizontalScale(number).");return b.messageHandler.sendWithPromise("GState.setHorizontalScale",{gs:this.id,hscale:a},this.userPriority)};b.GState.prototype.setLeading=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeading'. Expected 1 argument. Function Signature: setLeading(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeading' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeading' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeading(number).");
return b.messageHandler.sendWithPromise("GState.setLeading",{gs:this.id,leading:a},this.userPriority)};b.GState.prototype.setFont=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFont'. Expected 2 arguments. Function Signature: setFont(PDFNet.Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Font)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFont' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font, number).");throw new TypeError("1st input argument '"+a+"' in function 'setFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFont' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setFont(PDFNet.Font, number).");return b.messageHandler.sendWithPromise("GState.setFont",{gs:this.id,font:a.id,font_sz:c},this.userPriority)};b.GState.prototype.setTextRenderMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextRenderMode'. Expected 1 argument. Function Signature: setTextRenderMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextRenderMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextRenderMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextRenderMode(number).");return b.messageHandler.sendWithPromise("GState.setTextRenderMode",{gs:this.id,rmode:a},this.userPriority)};b.GState.prototype.setTextRise=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextRise'. Expected 1 argument. Function Signature: setTextRise(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextRise' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextRise' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextRise(number).");
return b.messageHandler.sendWithPromise("GState.setTextRise",{gs:this.id,rise:a},this.userPriority)};b.GState.prototype.setTextKnockout=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextKnockout'. Expected 1 argument. Function Signature: setTextKnockout(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextKnockout' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextKnockout' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setTextKnockout(boolean).");return b.messageHandler.sendWithPromise("GState.setTextKnockout",{gs:this.id,knockout:a},this.userPriority)};b.GState.prototype.setRenderingIntent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRenderingIntent'. Expected 1 argument. Function Signature: setRenderingIntent(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRenderingIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRenderingIntent' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRenderingIntent(number).");return b.messageHandler.sendWithPromise("GState.setRenderingIntent",{gs:this.id,intent:a},this.userPriority)};b.GState.prototype.setBlendMode=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlendMode'. Expected 1 argument. Function Signature: setBlendMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlendMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBlendMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBlendMode(number).");
return b.messageHandler.sendWithPromise("GState.setBlendMode",{gs:this.id,BM:a},this.userPriority)};b.GState.prototype.setFillOpacity=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillOpacity'. Expected 1 argument. Function Signature: setFillOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFillOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFillOpacity(number).");return b.messageHandler.sendWithPromise("GState.setFillOpacity",{gs:this.id,ca:a},this.userPriority)};b.GState.prototype.setStrokeOpacity=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeOpacity'. Expected 1 argument. Function Signature: setStrokeOpacity(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStrokeOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStrokeOpacity(number).");return b.messageHandler.sendWithPromise("GState.setStrokeOpacity",{gs:this.id,CA:a},this.userPriority)};b.GState.prototype.setAISFlag=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAISFlag'. Expected 1 argument. Function Signature: setAISFlag(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAISFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAISFlag' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAISFlag(boolean).");
return b.messageHandler.sendWithPromise("GState.setAISFlag",{gs:this.id,AIS:a},this.userPriority)};b.GState.prototype.setSoftMask=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoftMask'. Expected 1 argument. Function Signature: setSoftMask(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setSoftMask' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setSoftMask(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setSoftMask' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setSoftMask(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("GState.setSoftMask",{gs:this.id,SM:a.id},this.userPriority)};b.GState.prototype.setStrokeOverprint=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeOverprint'. Expected 1 argument. Function Signature: setStrokeOverprint(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStrokeOverprint' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: setStrokeOverprint(boolean).");return b.messageHandler.sendWithPromise("GState.setStrokeOverprint",{gs:this.id,OP:a},this.userPriority)};b.GState.prototype.setFillOverprint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillOverprint'. Expected 1 argument. Function Signature: setFillOverprint(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFillOverprint' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFillOverprint(boolean).");return b.messageHandler.sendWithPromise("GState.setFillOverprint",{gs:this.id,op:a},this.userPriority)};b.GState.prototype.setOverprintMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprintMode'. Expected 1 argument. Function Signature: setOverprintMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprintMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprintMode(number).");return b.messageHandler.sendWithPromise("GState.setOverprintMode",{gs:this.id,OPM:a},this.userPriority)};b.GState.prototype.setAutoStrokeAdjust=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAutoStrokeAdjust'. Expected 1 argument. Function Signature: setAutoStrokeAdjust(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAutoStrokeAdjust' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAutoStrokeAdjust' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setAutoStrokeAdjust(boolean).");return b.messageHandler.sendWithPromise("GState.setAutoStrokeAdjust",{gs:this.id,SA:a},this.userPriority)};b.GState.prototype.setSmoothnessTolerance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSmoothnessTolerance'. Expected 1 argument. Function Signature: setSmoothnessTolerance(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSmoothnessTolerance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSmoothnessTolerance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setSmoothnessTolerance(number).");return b.messageHandler.sendWithPromise("GState.setSmoothnessTolerance",{gs:this.id,SM:a},this.userPriority)};b.GState.prototype.setBlackGenFunct=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlackGenFunct'. Expected 1 argument. Function Signature: setBlackGenFunct(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlackGenFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setBlackGenFunct' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setBlackGenFunct(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setBlackGenFunct' is of type '"+typeof a+
"'. Expected type 'Obj'. Function Signature: setBlackGenFunct(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("GState.setBlackGenFunct",{gs:this.id,BG:a.id},this.userPriority)};b.GState.prototype.setUCRFunct=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUCRFunct'. Expected 1 argument. Function Signature: setUCRFunct(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUCRFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setUCRFunct' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setUCRFunct(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setUCRFunct' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setUCRFunct(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("GState.setUCRFunct",{gs:this.id,UCR:a.id},this.userPriority)};b.GState.prototype.setTransferFunct=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransferFunct'. Expected 1 argument. Function Signature: setTransferFunct(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTransferFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTransferFunct' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setTransferFunct(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setTransferFunct' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setTransferFunct(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("GState.setTransferFunct",{gs:this.id,TR:a.id},this.userPriority)};b.GState.prototype.setHalftone=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHalftone'. Expected 1 argument. Function Signature: setHalftone(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHalftone' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setHalftone' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setHalftone(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setHalftone' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setHalftone(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("GState.setHalftone",{gs:this.id,HT:a.id},this.userPriority)};b.Element.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Element.getType",{e:this.id},this.userPriority)};b.Element.prototype.getGState=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGState'. Expected 0 arguments. Function Signature: getGState()");
return b.messageHandler.sendWithPromise("Element.getGState",{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.GState(a)})};b.Element.prototype.getCTM=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCTM'. Expected 0 arguments. Function Signature: getCTM()");return b.messageHandler.sendWithPromise("Element.getCTM",{e:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Element.prototype.getParentStructElement=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParentStructElement'. Expected 0 arguments. Function Signature: getParentStructElement()");return b.messageHandler.sendWithPromise("Element.getParentStructElement",{e:this.id},this.userPriority).then(function(a){return new b.SElement(a)})};b.Element.prototype.getStructMCID=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructMCID'. Expected 0 arguments. Function Signature: getStructMCID()");
return b.messageHandler.sendWithPromise("Element.getStructMCID",{e:this.id},this.userPriority)};b.Element.prototype.isOCVisible=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOCVisible'. Expected 0 arguments. Function Signature: isOCVisible()");return b.messageHandler.sendWithPromise("Element.isOCVisible",{e:this.id},this.userPriority)};b.Element.prototype.isClippingPath=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isClippingPath'. Expected 0 arguments. Function Signature: isClippingPath()");return b.messageHandler.sendWithPromise("Element.isClippingPath",{e:this.id},this.userPriority)};b.Element.prototype.isStroked=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isStroked'. Expected 0 arguments. Function Signature: isStroked()");return b.messageHandler.sendWithPromise("Element.isStroked",{e:this.id},this.userPriority)};
b.Element.prototype.isFilled=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFilled'. Expected 0 arguments. Function Signature: isFilled()");return b.messageHandler.sendWithPromise("Element.isFilled",{e:this.id},this.userPriority)};b.Element.prototype.isWindingFill=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isWindingFill'. Expected 0 arguments. Function Signature: isWindingFill()");
return b.messageHandler.sendWithPromise("Element.isWindingFill",{e:this.id},this.userPriority)};b.Element.prototype.isClipWindingFill=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isClipWindingFill'. Expected 0 arguments. Function Signature: isClipWindingFill()");return b.messageHandler.sendWithPromise("Element.isClipWindingFill",{e:this.id},this.userPriority)};b.Element.prototype.setPathClip=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setPathClip'. Expected 1 argument. Function Signature: setPathClip(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathClip' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathClip' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathClip(boolean).");return b.messageHandler.sendWithPromise("Element.setPathClip",
{e:this.id,clip:a},this.userPriority)};b.Element.prototype.setPathStroke=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathStroke'. Expected 1 argument. Function Signature: setPathStroke(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathStroke' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setPathStroke' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathStroke(boolean).");return b.messageHandler.sendWithPromise("Element.setPathStroke",{e:this.id,stroke:a},this.userPriority)};b.Element.prototype.setPathFill=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathFill'. Expected 1 argument. Function Signature: setPathFill(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathFill' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathFill' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathFill(boolean).");return b.messageHandler.sendWithPromise("Element.setPathFill",{e:this.id,fill:a},this.userPriority)};b.Element.prototype.setWindingFill=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWindingFill'. Expected 1 argument. Function Signature: setWindingFill(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setWindingFill' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setWindingFill' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setWindingFill(boolean).");return b.messageHandler.sendWithPromise("Element.setWindingFill",{e:this.id,winding_rule:a},this.userPriority)};b.Element.prototype.setClipWindingFill=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setClipWindingFill'. Expected 1 argument. Function Signature: setClipWindingFill(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setClipWindingFill' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setClipWindingFill' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: setClipWindingFill(boolean).");return b.messageHandler.sendWithPromise("Element.setClipWindingFill",{e:this.id,winding_rule:a},this.userPriority)};b.Element.prototype.setPathTypes=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathTypes'. Expected 2 arguments. Function Signature: setPathTypes(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathTypes' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathTypes' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPathTypes(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPathTypes' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPathTypes' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPathTypes(string, number).");
return b.messageHandler.sendWithPromise("Element.setPathTypes",{e:this.id,in_seg_types:a,count:c},this.userPriority)};b.Element.prototype.getXObject=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXObject'. Expected 0 arguments. Function Signature: getXObject()");return b.messageHandler.sendWithPromise("Element.getXObject",{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Element.prototype.getImageData=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageData'. Expected 0 arguments. Function Signature: getImageData()");return b.messageHandler.sendWithPromise("Element.getImageData",{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.Element.prototype.getImageDataSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageDataSize'. Expected 0 arguments. Function Signature: getImageDataSize()");
return b.messageHandler.sendWithPromise("Element.getImageDataSize",{e:this.id},this.userPriority)};b.Element.prototype.getImageColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageColorSpace'. Expected 0 arguments. Function Signature: getImageColorSpace()");return b.messageHandler.sendWithPromise("Element.getImageColorSpace",{e:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.Element.prototype.getImageWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageWidth'. Expected 0 arguments. Function Signature: getImageWidth()");return b.messageHandler.sendWithPromise("Element.getImageWidth",{e:this.id},this.userPriority)};b.Element.prototype.getImageHeight=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageHeight'. Expected 0 arguments. Function Signature: getImageHeight()");
return b.messageHandler.sendWithPromise("Element.getImageHeight",{e:this.id},this.userPriority)};b.Element.prototype.getDecodeArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodeArray'. Expected 0 arguments. Function Signature: getDecodeArray()");return b.messageHandler.sendWithPromise("Element.getDecodeArray",{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Element.prototype.getBitsPerComponent=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBitsPerComponent'. Expected 0 arguments. Function Signature: getBitsPerComponent()");return b.messageHandler.sendWithPromise("Element.getBitsPerComponent",{e:this.id},this.userPriority)};b.Element.prototype.getComponentNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");
return b.messageHandler.sendWithPromise("Element.getComponentNum",{e:this.id},this.userPriority)};b.Element.prototype.isImageMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageMask'. Expected 0 arguments. Function Signature: isImageMask()");return b.messageHandler.sendWithPromise("Element.isImageMask",{e:this.id},this.userPriority)};b.Element.prototype.isImageInterpolate=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isImageInterpolate'. Expected 0 arguments. Function Signature: isImageInterpolate()");return b.messageHandler.sendWithPromise("Element.isImageInterpolate",{e:this.id},this.userPriority)};b.Element.prototype.getMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMask'. Expected 0 arguments. Function Signature: getMask()");return b.messageHandler.sendWithPromise("Element.getMask",{e:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Element.prototype.getImageRenderingIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageRenderingIntent'. Expected 0 arguments. Function Signature: getImageRenderingIntent()");return b.messageHandler.sendWithPromise("Element.getImageRenderingIntent",{e:this.id},this.userPriority)};b.Element.prototype.getTextString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextString'. Expected 0 arguments. Function Signature: getTextString()");
return b.messageHandler.sendWithPromise("Element.getTextString",{e:this.id},this.userPriority)};b.Element.prototype.getTextMatrix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextMatrix'. Expected 0 arguments. Function Signature: getTextMatrix()");return b.messageHandler.sendWithPromise("Element.getTextMatrix",{e:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Element.prototype.getCharIterator=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharIterator'. Expected 0 arguments. Function Signature: getCharIterator()");return b.messageHandler.sendWithPromise("Element.getCharIterator",{e:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Int");createdObjects.push({name:a.name,id:a.id});return a})};b.Element.prototype.getTextLength=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextLength'. Expected 0 arguments. Function Signature: getTextLength()");
return b.messageHandler.sendWithPromise("Element.getTextLength",{e:this.id},this.userPriority)};b.Element.prototype.getPosAdjustment=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPosAdjustment'. Expected 0 arguments. Function Signature: getPosAdjustment()");return b.messageHandler.sendWithPromise("Element.getPosAdjustment",{e:this.id},this.userPriority)};b.Element.prototype.getNewTextLineOffset=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNewTextLineOffset'. Expected 0 arguments. Function Signature: getNewTextLineOffset()");return b.messageHandler.sendWithPromise("Element.getNewTextLineOffset",{e:this.id},this.userPriority)};b.Element.prototype.hasTextMatrix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTextMatrix'. Expected 0 arguments. Function Signature: hasTextMatrix()");return b.messageHandler.sendWithPromise("Element.hasTextMatrix",
{e:this.id},this.userPriority)};b.Element.prototype.setTextData=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextData'. Expected 1 argument. Function Signature: setTextData(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTextData' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: setTextData(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'setTextData' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: setTextData(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("Element.setTextData",
{e:this.id,buf_text_data:c},this.userPriority)};b.Element.prototype.setTextMatrix=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextMatrix'. Expected 1 argument. Function Signature: setTextMatrix(PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&a&&"Matrix2D"!==
a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setTextMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: setTextMatrix(PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'setTextMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: setTextMatrix(PDFNet.Matrix2D).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTextMatrix'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Element.setTextMatrix",{e:this.id,mtx:a},this.userPriority)};b.Element.prototype.setTextMatrixEntries=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextMatrixEntries'. Expected 6 arguments. Function Signature: setTextMatrixEntries(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextMatrixEntries' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTextMatrixEntries' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setTextMatrixEntries' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setTextMatrixEntries' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'setTextMatrixEntries' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'setTextMatrixEntries' is of type '"+
typeof f+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("Element.setTextMatrixEntries",{e:this.id,a:a,b:c,c:d,d:e,h:h,v:f},this.userPriority)};b.Element.prototype.setPosAdjustment=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPosAdjustment'. Expected 1 argument. Function Signature: setPosAdjustment(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setPosAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPosAdjustment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPosAdjustment(number).");return b.messageHandler.sendWithPromise("Element.setPosAdjustment",{e:this.id,adjust:a},this.userPriority)};b.Element.prototype.updateTextMetrics=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'updateTextMetrics'. Expected 0 arguments. Function Signature: updateTextMetrics()");return b.messageHandler.sendWithPromise("Element.updateTextMetrics",{e:this.id},this.userPriority)};b.Element.prototype.setNewTextLineOffset=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNewTextLineOffset'. Expected 2 arguments. Function Signature: setNewTextLineOffset(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNewTextLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNewTextLineOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNewTextLineOffset(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setNewTextLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setNewTextLineOffset' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setNewTextLineOffset(number, number).");return b.messageHandler.sendWithPromise("Element.setNewTextLineOffset",{e:this.id,dx:a,dy:c},this.userPriority)};b.Element.prototype.getShading=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 0 arguments. Function Signature: getShading()");
return b.messageHandler.sendWithPromise("Element.getShading",{e:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Element.prototype.getMCPropertyDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCPropertyDict'. Expected 0 arguments. Function Signature: getMCPropertyDict()");return b.messageHandler.sendWithPromise("Element.getMCPropertyDict",
{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Element.prototype.getMCTag=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCTag'. Expected 0 arguments. Function Signature: getMCTag()");return b.messageHandler.sendWithPromise("Element.getMCTag",{e:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementBuilder.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("elementBuilderCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ElementBuilder(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementBuilder.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementBuilder.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ElementBuilder.prototype.reset=
function(a){"undefined"===typeof a&&(a=new b.GState("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'reset'. Expected at most 1 arguments. Function Signature: reset(PDFNet.GState)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'reset' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.GState)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'reset' is of type '"+
a.name+"'. Expected type 'GState'. Function Signature: reset(PDFNet.GState).");throw new TypeError("1st input argument '"+a+"' in function 'reset' is of type '"+typeof a+"'. Expected type 'GState'. Function Signature: reset(PDFNet.GState).");}return b.messageHandler.sendWithPromise("ElementBuilder.reset",{b:this.id,gs:a.id},this.userPriority)};b.ElementBuilder.prototype.createImage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage'. Expected 1 argument. Function Signature: createImage(PDFNet.Image)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImage' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImage(PDFNet.Image).");throw new TypeError("1st input argument '"+a+"' in function 'createImage' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImage(PDFNet.Image).");
}return b.messageHandler.sendWithPromise("ElementBuilder.createImage",{b:this.id,img:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createImageFromMatrix=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageFromMatrix'. Expected 2 arguments. Function Signature: createImageFromMatrix(PDFNet.Image, PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageFromMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImageFromMatrix' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImageFromMatrix(PDFNet.Image, PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'createImageFromMatrix' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImageFromMatrix(PDFNet.Image, PDFNet.Matrix2D).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageFromMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&c&&"Matrix2D"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createImageFromMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: createImageFromMatrix(PDFNet.Image, PDFNet.Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'createImageFromMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: createImageFromMatrix(PDFNet.Image, PDFNet.Matrix2D).");
}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createImageFromMatrix'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ElementBuilder.createImageFromMatrix",{b:this.id,img:a.id,mtx:c},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createImageScaled=
function(a,c,d,e,h){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageScaled'. Expected 5 arguments. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImageScaled' is of type '"+
a.name+"'. Expected type 'Image'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createImageScaled' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImageScaled' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createImageScaled' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createImageScaled' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");
if(h instanceof Promise)throw new TypeError("5th input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'createImageScaled' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createImageScaled(PDFNet.Image, number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createImageScaled",{b:this.id,
img:a.id,x:c,y:d,hscale:e,vscale:h},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createGroupBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGroupBegin'. Expected 0 arguments. Function Signature: createGroupBegin()");return b.messageHandler.sendWithPromise("ElementBuilder.createGroupBegin",{b:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};
b.ElementBuilder.prototype.createGroupEnd=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGroupEnd'. Expected 0 arguments. Function Signature: createGroupEnd()");return b.messageHandler.sendWithPromise("ElementBuilder.createGroupEnd",{b:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createShading=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createShading'. Expected 1 argument. Function Signature: createShading(PDFNet.Shading)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createShading' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Shading)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createShading' is of type '"+a.name+"'. Expected type 'Shading'. Function Signature: createShading(PDFNet.Shading).");
throw new TypeError("1st input argument '"+a+"' in function 'createShading' is of type '"+typeof a+"'. Expected type 'Shading'. Function Signature: createShading(PDFNet.Shading).");}return b.messageHandler.sendWithPromise("ElementBuilder.createShading",{b:this.id,sh:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFormFromStream'. Expected 1 argument. Function Signature: createFormFromStream(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFormFromStream' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFormFromStream(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFormFromStream' is of type '"+
typeof a+"'. Expected type 'Obj'. Function Signature: createFormFromStream(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromStream",{b:this.id,form:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFormFromPage'. Expected 1 argument. Function Signature: createFormFromPage(PDFNet.Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFormFromPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFormFromPage(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'createFormFromPage' is of type '"+
typeof a+"'. Expected type 'Page'. Function Signature: createFormFromPage(PDFNet.Page).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromPage",{b:this.id,page:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromDoc=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFormFromDoc'. Expected 2 arguments. Function Signature: createFormFromDoc(PDFNet.Page, PDFNet.PDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFormFromDoc' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFormFromDoc(PDFNet.Page, PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'createFormFromDoc' is of type '"+
typeof a+"'. Expected type 'Page'. Function Signature: createFormFromDoc(PDFNet.Page, PDFNet.PDFDoc).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFormFromDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFormFromDoc' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: createFormFromDoc(PDFNet.Page, PDFNet.PDFDoc).");
throw new TypeError("2nd input argument '"+c+"' in function 'createFormFromDoc' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: createFormFromDoc(PDFNet.Page, PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromDoc",{b:this.id,page:a.id,doc:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextBeginWithFont=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createTextBeginWithFont'. Expected 2 arguments. Function Signature: createTextBeginWithFont(PDFNet.Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextBeginWithFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createTextBeginWithFont' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: createTextBeginWithFont(PDFNet.Font, number).");
throw new TypeError("1st input argument '"+a+"' in function 'createTextBeginWithFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: createTextBeginWithFont(PDFNet.Font, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextBeginWithFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextBeginWithFont' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createTextBeginWithFont(PDFNet.Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextBeginWithFont",{b:this.id,font:a.id,font_sz:c},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextBegin'. Expected 0 arguments. Function Signature: createTextBegin()");
return b.messageHandler.sendWithPromise("ElementBuilder.createTextBegin",{b:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextEnd=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextEnd'. Expected 0 arguments. Function Signature: createTextEnd()");return b.messageHandler.sendWithPromise("ElementBuilder.createTextEnd",{b:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRun=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRun'. Expected 3 arguments. Function Signature: createTextRun(string, PDFNet.Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createTextRun' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRun(string, PDFNet.Font, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Font)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createTextRun' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createTextRun(string, PDFNet.Font, number).");
throw new TypeError("2nd input argument '"+c+"' in function 'createTextRun' is of type '"+typeof c+"'. Expected type 'Font'. Function Signature: createTextRun(string, PDFNet.Font, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createTextRun' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createTextRun(string, PDFNet.Font, number).");
return b.messageHandler.sendWithPromise("ElementBuilder.createTextRun",{b:this.id,text_data:a,font:c.id,font_sz:d},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRunWithSize=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRunWithSize'. Expected 4 arguments. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextRunWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextRunWithSize' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Font)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createTextRunWithSize' is of type '"+d.name+"'. Expected type 'Font'. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number).");
throw new TypeError("3rd input argument '"+d+"' in function 'createTextRunWithSize' is of type '"+typeof d+"'. Expected type 'Font'. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createTextRunWithSize' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createTextRunWithSize(string, number, PDFNet.Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextRunWithSize",{b:this.id,text_data:a,text_data_sz:c,font:d.id,font_sz:e},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRunUnsigned=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRunUnsigned'. Expected 3 arguments. Function Signature: createTextRunUnsigned(string, PDFNet.Font, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextRunUnsigned' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRunUnsigned(string, PDFNet.Font, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Font)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createTextRunUnsigned' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createTextRunUnsigned(string, PDFNet.Font, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createTextRunUnsigned' is of type '"+typeof c+"'. Expected type 'Font'. Function Signature: createTextRunUnsigned(string, PDFNet.Font, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createTextRunUnsigned' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createTextRunUnsigned(string, PDFNet.Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextRunUnsigned",{b:this.id,text_data:a,font:c.id,font_sz:d},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRun=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createNewTextRun'. Expected 1 argument. Function Signature: createNewTextRun(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRun' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRun(string).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRun",
{b:this.id,text_data:a},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRunWithSize=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNewTextRunWithSize'. Expected 2 arguments. Function Signature: createNewTextRunWithSize(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRunWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRunWithSize(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createNewTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createNewTextRunWithSize' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createNewTextRunWithSize(string, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRunWithSize",{b:this.id,text_data:a,text_data_sz:c},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRunUnsigned=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNewTextRunUnsigned'. Expected 1 argument. Function Signature: createNewTextRunUnsigned(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRunUnsigned' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRunUnsigned(string).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRunUnsigned",{b:this.id,text_data:a},
this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextNewLineWithOffset=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextNewLineWithOffset'. Expected 2 arguments. Function Signature: createTextNewLineWithOffset(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextNewLineWithOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextNewLineWithOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createTextNewLineWithOffset(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextNewLineWithOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextNewLineWithOffset' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createTextNewLineWithOffset(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextNewLineWithOffset",{b:this.id,dx:a,dy:c},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextNewLine=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextNewLine'. Expected 0 arguments. Function Signature: createTextNewLine()");
return b.messageHandler.sendWithPromise("ElementBuilder.createTextNewLine",{b:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createPath=function(a,c){var d=a;a instanceof Array&&(d=new Float64Array(a));g.isArrayBuffer(d)||(d=d.buffer,a.byteLength<d.byteLength&&(d=d.slice(a.byteOffset,a.byteOffset+a.byteLength)));var e=c;g.isArrayBuffer(e)||(e=e.buffer,c.byteLength<e.byteLength&&(e=e.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(2!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createPath'. Expected 2 arguments. Function Signature: createPath(Array, ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createPath' is of type '"+a.name+
"'. Expected type 'Array'. Function Signature: createPath(Array, ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'createPath' is of type '"+typeof a+"'. Expected type 'Array'. Function Signature: createPath(Array, ArrayBuffer|TypedArray).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'createPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(e)){if("object"===typeof c&&
c.name)throw new TypeError("3rd input argument in function 'createPath' is of type '"+c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createPath(Array, ArrayBuffer|TypedArray).");throw new TypeError("3rd input argument '"+c+"' in function 'createPath' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createPath(Array, ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("ElementBuilder.createPath",{b:this.id,buf_points:d,buf_seg_types:e},
this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createRect=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRect'. Expected 4 arguments. Function Signature: createRect(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createRect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createRect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createRect",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.createEllipse=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createEllipse'. Expected 4 arguments. Function Signature: createEllipse(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createEllipse' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createEllipse' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createEllipse' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createEllipse' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createEllipse",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.pathBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pathBegin'. Expected 0 arguments. Function Signature: pathBegin()");
return b.messageHandler.sendWithPromise("ElementBuilder.pathBegin",{b:this.id},this.userPriority)};b.ElementBuilder.prototype.pathEnd=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pathEnd'. Expected 0 arguments. Function Signature: pathEnd()");return b.messageHandler.sendWithPromise("ElementBuilder.pathEnd",{b:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementBuilder.prototype.rect=function(a,c,
d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rect'. Expected 4 arguments. Function Signature: rect(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'rect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'rect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'rect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");
return b.messageHandler.sendWithPromise("ElementBuilder.rect",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority)};b.ElementBuilder.prototype.ellipse=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'ellipse'. Expected 4 arguments. Function Signature: ellipse(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'ellipse' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'ellipse' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'ellipse' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'ellipse' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.ellipse",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority)};b.ElementBuilder.prototype.moveTo=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'moveTo'. Expected 2 arguments. Function Signature: moveTo(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'moveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'moveTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: moveTo(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'moveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'moveTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: moveTo(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.moveTo",{b:this.id,x:a,y:c},this.userPriority)};b.ElementBuilder.prototype.lineTo=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lineTo'. Expected 2 arguments. Function Signature: lineTo(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'lineTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'lineTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: lineTo(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'lineTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'lineTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: lineTo(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.lineTo",{b:this.id,x:a,y:c},this.userPriority)};b.ElementBuilder.prototype.curveTo=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'curveTo'. Expected 6 arguments. Function Signature: curveTo(number, number, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'curveTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'curveTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'curveTo' is of type '"+typeof d+
"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'curveTo' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(h instanceof
Promise)throw new TypeError("5th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'curveTo' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'curveTo' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.curveTo",{b:this.id,cx1:a,cy1:c,cx2:d,cy2:e,x2:h,y2:f},this.userPriority)};b.ElementBuilder.prototype.arcTo=function(a,c,d,e,h,f){if(6!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'arcTo'. Expected 6 arguments. Function Signature: arcTo(number, number, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'arcTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'arcTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'arcTo' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'arcTo' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'arcTo' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'arcTo' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");
return b.messageHandler.sendWithPromise("ElementBuilder.arcTo",{b:this.id,x:a,y:c,width:d,height:e,start:h,extent:f},this.userPriority)};b.ElementBuilder.prototype.arcTo2=function(a,c,d,e,h,f,g){if(7!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'arcTo2'. Expected 7 arguments. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'arcTo2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'arcTo2' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'arcTo2' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'arcTo2' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'arcTo2' is of type '"+typeof h+"'. Expected type 'boolean'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'arcTo2' is of type '"+
typeof f+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(g instanceof Promise)throw new TypeError("7th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof g)throw new TypeError("7th input argument '"+g+"' in function 'arcTo2' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");
return b.messageHandler.sendWithPromise("ElementBuilder.arcTo2",{b:this.id,xr:a,yr:c,rx:d,isLargeArc:e,sweep:h,endX:f,endY:g},this.userPriority)};b.ElementBuilder.prototype.closePath=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'closePath'. Expected 0 arguments. Function Signature: closePath()");return b.messageHandler.sendWithPromise("ElementBuilder.closePath",{b:this.id},this.userPriority)};b.ElementReader.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("elementReaderCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ElementReader(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementReader.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementReader.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ElementReader.prototype.beginOnPage=
function(a,c){"undefined"===typeof c&&(c=new b.OCGContext("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnPage'. Expected 1 to 2 arguments. Function Signature: beginOnPage(PDFNet.Page, PDFNet.OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'beginOnPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: beginOnPage(PDFNet.Page, PDFNet.OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'beginOnPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: beginOnPage(PDFNet.Page, PDFNet.OCGContext).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.OCGContext)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'beginOnPage' is of type '"+c.name+"'. Expected type 'OCGContext'. Function Signature: beginOnPage(PDFNet.Page, PDFNet.OCGContext).");throw new TypeError("2nd input argument '"+c+"' in function 'beginOnPage' is of type '"+typeof c+"'. Expected type 'OCGContext'. Function Signature: beginOnPage(PDFNet.Page, PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("ElementReader.beginOnPage",
{r:this.id,page:a.id,ctx:c.id},this.userPriority)};b.ElementReader.prototype.begin=function(a,c,d){"undefined"===typeof c&&(c=new b.Obj("0"));"undefined"===typeof d&&(d=new b.OCGContext("0"));if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 to 3 arguments. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'begin' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.OCGContext)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'begin' is of type '"+d.name+"'. Expected type 'OCGContext'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");throw new TypeError("3rd input argument '"+d+"' in function 'begin' is of type '"+typeof d+"'. Expected type 'OCGContext'. Function Signature: begin(PDFNet.Obj, PDFNet.Obj, PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("ElementReader.begin",
{r:this.id,content_stream:a.id,resource_dict:c.id,ctx:d.id},this.userPriority)};b.ElementReader.prototype.appendResource=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'appendResource'. Expected 1 argument. Function Signature: appendResource(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'appendResource' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'appendResource' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: appendResource(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'appendResource' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: appendResource(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ElementReader.appendResource",{r:this.id,res:a.id},this.userPriority)};b.ElementReader.prototype.next=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("ElementReader.next",{r:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementReader.prototype.current=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'current'. Expected 0 arguments. Function Signature: current()");
return b.messageHandler.sendWithPromise("ElementReader.current",{r:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Element(a)})};b.ElementReader.prototype.formBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'formBegin'. Expected 0 arguments. Function Signature: formBegin()");return b.messageHandler.sendWithPromise("ElementReader.formBegin",{r:this.id},this.userPriority)};b.ElementReader.prototype.patternBegin=function(a,
c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'patternBegin'. Expected 1 to 2 arguments. Function Signature: patternBegin(boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'patternBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'patternBegin' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: patternBegin(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'patternBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'patternBegin' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: patternBegin(boolean, boolean).");return b.messageHandler.sendWithPromise("ElementReader.patternBegin",
{r:this.id,fill_pattern:a,reset_ctm_tfm:c},this.userPriority)};b.ElementReader.prototype.end=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'end'. Expected 0 arguments. Function Signature: end()");return b.messageHandler.sendWithPromise("ElementReader.end",{r:this.id},this.userPriority)};b.ElementReader.prototype.getChangesIterator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getChangesIterator'. Expected 0 arguments. Function Signature: getChangesIterator()");
return b.messageHandler.sendWithPromise("ElementReader.getChangesIterator",{r:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Int");createdObjects.push({name:a.name,id:a.id});return a})};b.ElementReader.prototype.isChanged=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isChanged'. Expected 1 argument. Function Signature: isChanged(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isChanged' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'isChanged' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: isChanged(number).");return b.messageHandler.sendWithPromise("ElementReader.isChanged",{r:this.id,attrib:a},this.userPriority)};b.ElementReader.prototype.clearChangeList=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clearChangeList'. Expected 0 arguments. Function Signature: clearChangeList()");
return b.messageHandler.sendWithPromise("ElementReader.clearChangeList",{r:this.id},this.userPriority)};b.ElementReader.prototype.getFont=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 1 argument. Function Signature: getFont(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getFont' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFont(string).");return b.messageHandler.sendWithPromise("ElementReader.getFont",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementReader.prototype.getXObject=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXObject'. Expected 1 argument. Function Signature: getXObject(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getXObject' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getXObject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getXObject(string).");return b.messageHandler.sendWithPromise("ElementReader.getXObject",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.ElementReader.prototype.getShading=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 1 argument. Function Signature: getShading(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getShading' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getShading' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: getShading(string).");return b.messageHandler.sendWithPromise("ElementReader.getShading",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementReader.prototype.getColorSpace=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorSpace'. Expected 1 argument. Function Signature: getColorSpace(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColorSpace' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getColorSpace(string).");return b.messageHandler.sendWithPromise("ElementReader.getColorSpace",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementReader.prototype.getPattern=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPattern'. Expected 1 argument. Function Signature: getPattern(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPattern' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getPattern(string).");return b.messageHandler.sendWithPromise("ElementReader.getPattern",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:
new b.Obj(a)})};b.ElementReader.prototype.getExtGState=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getExtGState'. Expected 1 argument. Function Signature: getExtGState(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getExtGState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getExtGState' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: getExtGState(string).");return b.messageHandler.sendWithPromise("ElementReader.getExtGState",{r:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementWriter.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("elementWriterCreate",{},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.ElementWriter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementWriter.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementWriter.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ElementWriter.prototype.beginOnPage=function(a,c,d,e,h){"undefined"===typeof c&&(c=b.ElementWriter.WriteMode.e_overlay);"undefined"===typeof d&&(d=!0);"undefined"===typeof e&&(e=!0);"undefined"===typeof h&&(h=new b.Obj("0"));if(1>arguments.length||
5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnPage'. Expected 1 to 5 arguments. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'beginOnPage' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'beginOnPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'beginOnPage' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'beginOnPage' is of type '"+
typeof d+"'. Expected type 'boolean'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'beginOnPage' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");
if(h instanceof Promise)throw new TypeError("5th input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(h instanceof b.Obj)){if("object"===typeof h&&h.name)throw new TypeError("5th input argument in function 'beginOnPage' is of type '"+h.name+"'. Expected type 'Obj'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");throw new TypeError("5th input argument '"+h+"' in function 'beginOnPage' is of type '"+
typeof h+"'. Expected type 'Obj'. Function Signature: beginOnPage(PDFNet.Page, number, boolean, boolean, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ElementWriter.beginOnPage",{w:this.id,page:a.id,placement:c,page_coord_sys:d,compress:e,resources:h.id},this.userPriority)};b.ElementWriter.prototype.begin=function(a,c){"undefined"===typeof c&&(c=!0);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 to 2 arguments. Function Signature: begin(PDFNet.SDFDoc, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: begin(PDFNet.SDFDoc, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: begin(PDFNet.SDFDoc, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: begin(PDFNet.SDFDoc, boolean).");return b.messageHandler.sendWithPromise("ElementWriter.begin",
{w:this.id,doc:a.id,compress:c},this.userPriority)};b.ElementWriter.prototype.beginOnObj=function(a,c,d){"undefined"===typeof c&&(c=!0);"undefined"===typeof d&&(d=new b.Obj("0"));if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnObj'. Expected 1 to 3 arguments. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'beginOnObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'beginOnObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'beginOnObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'beginOnObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'beginOnObj' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'beginOnObj' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: beginOnObj(PDFNet.Obj, boolean, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("ElementWriter.beginOnObj",{w:this.id,stream_obj_to_update:a.id,compress:c,resources:d.id},this.userPriority)};b.ElementWriter.prototype.end=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'end'. Expected 0 arguments. Function Signature: end()");return b.messageHandler.sendWithPromise("ElementWriter.end",{w:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ElementWriter.prototype.writeElement=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeElement'. Expected 1 argument. Function Signature: writeElement(PDFNet.Element)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Element)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'writeElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: writeElement(PDFNet.Element).");throw new TypeError("1st input argument '"+a+"' in function 'writeElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: writeElement(PDFNet.Element).");}return b.messageHandler.sendWithPromise("ElementWriter.writeElement",{w:this.id,element:a.id},
this.userPriority)};b.ElementWriter.prototype.writePlacedElement=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writePlacedElement'. Expected 1 argument. Function Signature: writePlacedElement(PDFNet.Element)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writePlacedElement' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Element)){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'writePlacedElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: writePlacedElement(PDFNet.Element).");throw new TypeError("1st input argument '"+a+"' in function 'writePlacedElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: writePlacedElement(PDFNet.Element).");}return b.messageHandler.sendWithPromise("ElementWriter.writePlacedElement",{w:this.id,element:a.id},this.userPriority)};b.ElementWriter.prototype.flush=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("ElementWriter.flush",{w:this.id},this.userPriority)};b.ElementWriter.prototype.writeBuffer=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeBuffer'. Expected 2 arguments. Function Signature: writeBuffer(string, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeBuffer' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeBuffer(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'writeBuffer' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: writeBuffer(string, number).");return b.messageHandler.sendWithPromise("ElementWriter.writeBuffer",{w:this.id,data:a,data_sz:c},this.userPriority)};b.ElementWriter.prototype.writeString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeString'. Expected 1 argument. Function Signature: writeString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeString(string).");return b.messageHandler.sendWithPromise("ElementWriter.writeString",{w:this.id,str:a},this.userPriority)};b.ElementWriter.prototype.setDefaultGState=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultGState'. Expected 1 argument. Function Signature: setDefaultGState(PDFNet.ElementReader)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultGState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ElementReader)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setDefaultGState' is of type '"+
a.name+"'. Expected type 'ElementReader'. Function Signature: setDefaultGState(PDFNet.ElementReader).");throw new TypeError("1st input argument '"+a+"' in function 'setDefaultGState' is of type '"+typeof a+"'. Expected type 'ElementReader'. Function Signature: setDefaultGState(PDFNet.ElementReader).");}return b.messageHandler.sendWithPromise("ElementWriter.setDefaultGState",{w:this.id,r:a.id},this.userPriority)};b.ElementWriter.prototype.writeGStateChanges=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'writeGStateChanges'. Expected 1 argument. Function Signature: writeGStateChanges(PDFNet.Element)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeGStateChanges' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Element)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'writeGStateChanges' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: writeGStateChanges(PDFNet.Element).");
throw new TypeError("1st input argument '"+a+"' in function 'writeGStateChanges' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: writeGStateChanges(PDFNet.Element).");}return b.messageHandler.sendWithPromise("ElementWriter.writeGStateChanges",{w:this.id,element:a.id},this.userPriority)};b.FileSpec.create=function(a,c,d){"undefined"===typeof d&&(d=!0);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(PDFNet.SDFDoc, string, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, string, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, string, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(PDFNet.SDFDoc, string, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: create(PDFNet.SDFDoc, string, boolean).");return b.messageHandler.sendWithPromise("fileSpecCreate",{doc:a.id,path:c,embed:d},this.userPriority).then(function(a){return"0"===a?null:new b.FileSpec(a)})};b.FileSpec.createURL=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURL'. Expected 2 arguments. Function Signature: createURL(PDFNet.SDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createURL' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURL(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createURL' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURL(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURL' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURL(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("fileSpecCreateURL",
{doc:a.id,url:c},this.userPriority).then(function(a){return"0"===a?null:new b.FileSpec(a)})};b.FileSpec.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("fileSpecCreateFromObj",{f:a.id},this.userPriority).then(function(a){return"0"===a?null:
new b.FileSpec(a)})};b.FileSpec.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("FileSpec.copy",{d:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.FileSpec(a)})};b.FileSpec.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.FileSpec)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: compare(PDFNet.FileSpec).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: compare(PDFNet.FileSpec).");
}return b.messageHandler.sendWithPromise("FileSpec.compare",{fs:this.id,d:a.id},this.userPriority)};b.FileSpec.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("FileSpec.isValid",{fs:this.id},this.userPriority)};b.FileSpec.prototype.export=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'export'. Expected at most 1 arguments. Function Signature: export(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: export(string).");return b.messageHandler.sendWithPromise("FileSpec.export",
{fs:this.id,save_as:a},this.userPriority)};b.FileSpec.prototype.getFileData=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileData'. Expected 0 arguments. Function Signature: getFileData()");return b.messageHandler.sendWithPromise("FileSpec.getFileData",{fs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.FileSpec.prototype.getFilePath=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFilePath'. Expected 0 arguments. Function Signature: getFilePath()");return b.messageHandler.sendWithPromise("FileSpec.getFilePath",{fs:this.id},this.userPriority)};b.FileSpec.prototype.setDesc=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDesc'. Expected 1 argument. Function Signature: setDesc(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDesc' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDesc' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDesc(string).");return b.messageHandler.sendWithPromise("FileSpec.setDesc",{fs:this.id,desc:a},this.userPriority)};b.FileSpec.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("FileSpec.getSDFObj",
{fs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Flattener.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("flattenerCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Flattener(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Flattener.prototype.destroy=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("Flattener.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Flattener.prototype.setDPI=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");return b.messageHandler.sendWithPromise("Flattener.setDPI",{flattener:this.id,dpi:a},this.userPriority)};b.Flattener.prototype.setThreshold=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThreshold'. Expected 1 argument. Function Signature: setThreshold(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThreshold' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThreshold' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setThreshold(number).");return b.messageHandler.sendWithPromise("Flattener.setThreshold",{flattener:this.id,threshold:a},this.userPriority)};b.Flattener.prototype.setMaximumImagePixels=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaximumImagePixels'. Expected 1 argument. Function Signature: setMaximumImagePixels(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaximumImagePixels' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMaximumImagePixels' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMaximumImagePixels(number).");return b.messageHandler.sendWithPromise("Flattener.setMaximumImagePixels",{flattener:this.id,max_pixels:a},
this.userPriority)};b.Flattener.prototype.setPreferJPG=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPreferJPG'. Expected 1 argument. Function Signature: setPreferJPG(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPreferJPG' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPreferJPG' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setPreferJPG(boolean).");return b.messageHandler.sendWithPromise("Flattener.setPreferJPG",{flattener:this.id,jpg:a},this.userPriority)};b.Flattener.prototype.setJPGQuality=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJPGQuality'. Expected 1 argument. Function Signature: setJPGQuality(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJPGQuality' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJPGQuality' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJPGQuality(number).");return b.messageHandler.sendWithPromise("Flattener.setJPGQuality",{flattener:this.id,quality:a},this.userPriority)};b.Flattener.prototype.setPathHinting=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");return b.messageHandler.sendWithPromise("Flattener.setPathHinting",{flattener:this.id,hinting:a},this.userPriority)};b.Flattener.prototype.process=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'process'. Expected 2 arguments. Function Signature: process(PDFNet.PDFDoc, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'process' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: process(PDFNet.PDFDoc, number).");throw new TypeError("1st input argument '"+a+"' in function 'process' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: process(PDFNet.PDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+
"' in function 'process' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: process(PDFNet.PDFDoc, number).");return b.messageHandler.sendWithPromise("Flattener.process",{flattener:this.id,doc:a.id,mode:c},this.userPriority)};b.Flattener.prototype.processPage=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'processPage'. Expected 2 arguments. Function Signature: processPage(PDFNet.Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'processPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'processPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: processPage(PDFNet.Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'processPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: processPage(PDFNet.Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'processPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'processPage' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: processPage(PDFNet.Page, number).");return b.messageHandler.sendWithPromise("Flattener.processPage",{flattener:this.id,page:a.id,mode:c},this.userPriority)};b.Font.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("fontCreateFromObj",{font_dict:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(PDFNet.SDFDoc, number).");return b.messageHandler.sendWithPromise("fontCreate",{doc:a.id,type:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createFromFontDescriptor=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromFontDescriptor'. Expected 3 arguments. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromFontDescriptor' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromFontDescriptor' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Font)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromFontDescriptor' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromFontDescriptor' is of type '"+typeof c+"'. Expected type 'Font'. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string).");}if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromFontDescriptor' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createFromFontDescriptor(PDFNet.SDFDoc, PDFNet.Font, string).");return b.messageHandler.sendWithPromise("fontCreateFromFontDescriptor",{doc:a.id,from:c.id,
char_set:d},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createFromName=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromName'. Expected 3 arguments. Function Signature: createFromName(PDFNet.SDFDoc, string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromName' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromName(PDFNet.SDFDoc, string, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromName' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromName(PDFNet.SDFDoc, string, string).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromName(PDFNet.SDFDoc, string, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromName' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createFromName(PDFNet.SDFDoc, string, string).");return b.messageHandler.sendWithPromise("fontCreateFromName",{doc:a.id,name:c,char_set:d},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createAndEmbed=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createAndEmbed'. Expected 2 arguments. Function Signature: createAndEmbed(PDFNet.SDFDoc, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAndEmbed' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createAndEmbed' is of type '"+a.name+
"'. Expected type 'SDFDoc'. Function Signature: createAndEmbed(PDFNet.SDFDoc, number).");throw new TypeError("1st input argument '"+a+"' in function 'createAndEmbed' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAndEmbed(PDFNet.SDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAndEmbed' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createAndEmbed' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createAndEmbed(PDFNet.SDFDoc, number).");return b.messageHandler.sendWithPromise("fontCreateAndEmbed",{doc:a.id,type:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createTrueTypeFont=function(a,c,d,e){"undefined"===typeof d&&(d=!0);"undefined"===typeof e&&(e=!0);if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createTrueTypeFont'. Expected 2 to 4 arguments. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createTrueTypeFont' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createTrueTypeFont' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTrueTypeFont' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createTrueTypeFont' is of type '"+
typeof d+"'. Expected type 'boolean'. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createTrueTypeFont' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: createTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean).");
return b.messageHandler.sendWithPromise("fontCreateTrueTypeFont",{doc:a.id,font_path:c,embed:d,subset:e},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createCIDTrueTypeFont=function(a,c,d,e,h,f){"undefined"===typeof d&&(d=!0);"undefined"===typeof e&&(e=!0);"undefined"===typeof h&&(h=b.Font.Encoding.e_IdentityH);"undefined"===typeof f&&(f=0);if(2>arguments.length||6<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createCIDTrueTypeFont'. Expected 2 to 6 arguments. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createCIDTrueTypeFont' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createCIDTrueTypeFont' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createCIDTrueTypeFont' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+
d+"' in function 'createCIDTrueTypeFont' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createCIDTrueTypeFont' is of type '"+typeof e+
"'. Expected type 'boolean'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'createCIDTrueTypeFont' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");
if(f instanceof Promise)throw new TypeError("6th input argument in function 'createCIDTrueTypeFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+f+"' in function 'createCIDTrueTypeFont' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createCIDTrueTypeFont(PDFNet.SDFDoc, string, boolean, boolean, number, number).");return b.messageHandler.sendWithPromise("fontCreateCIDTrueTypeFont",
{doc:a.id,type:c,embed:d,subset:e,encoding:h,ttc_font_index:f},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createType1Font=function(a,c,d){"undefined"===typeof d&&(d=!0);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createType1Font'. Expected 2 to 3 arguments. Function Signature: createType1Font(PDFNet.SDFDoc, string, boolean)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createType1Font' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createType1Font' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createType1Font(PDFNet.SDFDoc, string, boolean).");throw new TypeError("1st input argument '"+a+
"' in function 'createType1Font' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createType1Font(PDFNet.SDFDoc, string, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createType1Font' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createType1Font' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createType1Font(PDFNet.SDFDoc, string, boolean).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createType1Font' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createType1Font' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: createType1Font(PDFNet.SDFDoc, string, boolean).");return b.messageHandler.sendWithPromise("fontCreateType1Font",{doc:a.id,font_path:c,embed:d},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Font.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Font.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Font.getType",{font:this.id},
this.userPriority)};b.Font.prototype.isSimple=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSimple'. Expected 0 arguments. Function Signature: isSimple()");return b.messageHandler.sendWithPromise("Font.isSimple",{font:this.id},this.userPriority)};b.Font.getTypeFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("fontGetTypeFromObj",{font_dict:a.id},this.userPriority)};b.Font.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Font.getSDFObj",{font:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Font.prototype.getDescriptor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getDescriptor'. Expected 0 arguments. Function Signature: getDescriptor()");return b.messageHandler.sendWithPromise("Font.getDescriptor",{font:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Font.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Font.getName",
{font:this.id},this.userPriority)};b.Font.prototype.getFamilyName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFamilyName'. Expected 0 arguments. Function Signature: getFamilyName()");return b.messageHandler.sendWithPromise("Font.getFamilyName",{font:this.id},this.userPriority)};b.Font.prototype.isFixedWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFixedWidth'. Expected 0 arguments. Function Signature: isFixedWidth()");
return b.messageHandler.sendWithPromise("Font.isFixedWidth",{font:this.id},this.userPriority)};b.Font.prototype.isSerif=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSerif'. Expected 0 arguments. Function Signature: isSerif()");return b.messageHandler.sendWithPromise("Font.isSerif",{font:this.id},this.userPriority)};b.Font.prototype.isSymbolic=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSymbolic'. Expected 0 arguments. Function Signature: isSymbolic()");
return b.messageHandler.sendWithPromise("Font.isSymbolic",{font:this.id},this.userPriority)};b.Font.prototype.isItalic=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isItalic'. Expected 0 arguments. Function Signature: isItalic()");return b.messageHandler.sendWithPromise("Font.isItalic",{font:this.id},this.userPriority)};b.Font.prototype.isAllCap=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAllCap'. Expected 0 arguments. Function Signature: isAllCap()");
return b.messageHandler.sendWithPromise("Font.isAllCap",{font:this.id},this.userPriority)};b.Font.prototype.isForceBold=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isForceBold'. Expected 0 arguments. Function Signature: isForceBold()");return b.messageHandler.sendWithPromise("Font.isForceBold",{font:this.id},this.userPriority)};b.Font.prototype.isHorizontalMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isHorizontalMode'. Expected 0 arguments. Function Signature: isHorizontalMode()");
return b.messageHandler.sendWithPromise("Font.isHorizontalMode",{font:this.id},this.userPriority)};b.Font.prototype.getWidth=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWidth'. Expected 1 argument. Function Signature: getWidth(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getWidth(number).");return b.messageHandler.sendWithPromise("Font.getWidth",{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.getMaxWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMaxWidth'. Expected 0 arguments. Function Signature: getMaxWidth()");return b.messageHandler.sendWithPromise("Font.getMaxWidth",{font:this.id},
this.userPriority)};b.Font.prototype.getMissingWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMissingWidth'. Expected 0 arguments. Function Signature: getMissingWidth()");return b.messageHandler.sendWithPromise("Font.getMissingWidth",{font:this.id},this.userPriority)};b.Font.prototype.getCharCodeIterator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharCodeIterator'. Expected 0 arguments. Function Signature: getCharCodeIterator()");
return b.messageHandler.sendWithPromise("Font.getCharCodeIterator",{font:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Int");createdObjects.push({name:a.name,id:a.id});return a})};b.Font.prototype.getEncoding=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEncoding'. Expected 0 arguments. Function Signature: getEncoding()");return b.messageHandler.sendWithPromise("Font.getEncoding",{font:this.id},
this.userPriority)};b.Font.prototype.isEmbedded=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEmbedded'. Expected 0 arguments. Function Signature: isEmbedded()");return b.messageHandler.sendWithPromise("Font.isEmbedded",{font:this.id},this.userPriority)};b.Font.prototype.getEmbeddedFontName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEmbeddedFontName'. Expected 0 arguments. Function Signature: getEmbeddedFontName()");
return b.messageHandler.sendWithPromise("Font.getEmbeddedFontName",{font:this.id},this.userPriority)};b.Font.prototype.getEmbeddedFont=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEmbeddedFont'. Expected 0 arguments. Function Signature: getEmbeddedFont()");return b.messageHandler.sendWithPromise("Font.getEmbeddedFont",{font:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Font.prototype.getEmbeddedFontBufSize=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEmbeddedFontBufSize'. Expected 0 arguments. Function Signature: getEmbeddedFontBufSize()");return b.messageHandler.sendWithPromise("Font.getEmbeddedFontBufSize",{font:this.id},this.userPriority)};b.Font.prototype.getUnitsPerEm=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUnitsPerEm'. Expected 0 arguments. Function Signature: getUnitsPerEm()");
return b.messageHandler.sendWithPromise("Font.getUnitsPerEm",{font:this.id},this.userPriority)};b.Font.prototype.getBBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");return b.messageHandler.sendWithPromise("Font.getBBox",{font:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Font.prototype.getAscent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getAscent'. Expected 0 arguments. Function Signature: getAscent()");return b.messageHandler.sendWithPromise("Font.getAscent",{font:this.id},this.userPriority)};b.Font.prototype.getDescent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDescent'. Expected 0 arguments. Function Signature: getDescent()");return b.messageHandler.sendWithPromise("Font.getDescent",{font:this.id},this.userPriority)};b.Font.prototype.getStandardType1FontType=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStandardType1FontType'. Expected 0 arguments. Function Signature: getStandardType1FontType()");return b.messageHandler.sendWithPromise("Font.getStandardType1FontType",{font:this.id},this.userPriority)};b.Font.prototype.isCFF=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isCFF'. Expected 0 arguments. Function Signature: isCFF()");
return b.messageHandler.sendWithPromise("Font.isCFF",{font:this.id},this.userPriority)};b.Font.prototype.getType3FontMatrix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType3FontMatrix'. Expected 0 arguments. Function Signature: getType3FontMatrix()");return b.messageHandler.sendWithPromise("Font.getType3FontMatrix",{font:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Font.prototype.getType3GlyphStream=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType3GlyphStream'. Expected 1 argument. Function Signature: getType3GlyphStream(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getType3GlyphStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getType3GlyphStream' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getType3GlyphStream(number).");
return b.messageHandler.sendWithPromise("Font.getType3GlyphStream",{font:this.id,char_code:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Font.prototype.getVerticalAdvance=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVerticalAdvance'. Expected 1 argument. Function Signature: getVerticalAdvance(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getVerticalAdvance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getVerticalAdvance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getVerticalAdvance(number).");return b.messageHandler.sendWithPromise("Font.getVerticalAdvance",{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.getDescendant=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDescendant'. Expected 0 arguments. Function Signature: getDescendant()");
return b.messageHandler.sendWithPromise("Font.getDescendant",{font:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.prototype.mapToCID=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mapToCID'. Expected 1 argument. Function Signature: mapToCID(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'mapToCID' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mapToCID' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mapToCID(number).");return b.messageHandler.sendWithPromise("Font.mapToCID",{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.mapToCID2=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mapToCID2'. Expected 2 arguments. Function Signature: mapToCID2(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'mapToCID2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mapToCID2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mapToCID2(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'mapToCID2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'mapToCID2' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: mapToCID2(number, number).");return b.messageHandler.sendWithPromise("Font.mapToCID2",{font:this.id,char_data:a,char_data_avail:c},this.userPriority)};b.Function.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("functionCreate",{funct_dict:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Function(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Function.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Function.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Function.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");
return b.messageHandler.sendWithPromise("Function.getType",{f:this.id},this.userPriority)};b.Function.prototype.getInputCardinality=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInputCardinality'. Expected 0 arguments. Function Signature: getInputCardinality()");return b.messageHandler.sendWithPromise("Function.getInputCardinality",{f:this.id},this.userPriority)};b.Function.prototype.getOutputCardinality=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getOutputCardinality'. Expected 0 arguments. Function Signature: getOutputCardinality()");return b.messageHandler.sendWithPromise("Function.getOutputCardinality",{f:this.id},this.userPriority)};b.Function.prototype.eval=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eval'. Expected 2 arguments. Function Signature: eval(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eval' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eval' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eval(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'eval' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'eval' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: eval(number, number).");
return b.messageHandler.sendWithPromise("Function.eval",{f:this.id,inval:a,outval:c},this.userPriority)};b.Function.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Function.getSDFObj",{f:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Highlights.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("highlightsCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Highlights(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Highlights.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=
-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Highlights.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Highlights.prototype.copyCtor=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copyCtor'. Expected 0 arguments. Function Signature: copyCtor()");return b.messageHandler.sendWithPromise("Highlights.copyCtor",{hlts:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Highlights(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Highlights.prototype.add=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'add'. Expected 1 argument. Function Signature: add(PDFNet.Highlights)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'add' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Highlights)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'add' is of type '"+a.name+"'. Expected type 'Highlights'. Function Signature: add(PDFNet.Highlights).");throw new TypeError("1st input argument '"+a+"' in function 'add' is of type '"+typeof a+"'. Expected type 'Highlights'. Function Signature: add(PDFNet.Highlights).");
}return b.messageHandler.sendWithPromise("Highlights.add",{hlts2:this.id,hlts:a.id},this.userPriority)};b.Highlights.prototype.load=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'load'. Expected 1 argument. Function Signature: load(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'load' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'load' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: load(string).");return b.messageHandler.sendWithPromise("Highlights.load",{hlts:this.id,file_name:a},this.userPriority)};b.Highlights.prototype.save=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'save'. Expected 1 argument. Function Signature: save(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'save' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: save(string).");return b.messageHandler.sendWithPromise("Highlights.save",{hlts:this.id,file_name:a},this.userPriority)};b.Highlights.prototype.clear=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clear'. Expected 0 arguments. Function Signature: clear()");return b.messageHandler.sendWithPromise("Highlights.clear",
{hlts:this.id},this.userPriority)};b.Highlights.prototype.begin=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 argument. Function Signature: begin(PDFNet.PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("Highlights.begin",{hlts:this.id,doc:a.id},this.userPriority)};b.Highlights.prototype.hasNext=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("Highlights.hasNext",{hlts:this.id},this.userPriority)};b.Highlights.prototype.next=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("Highlights.next",{hlts:this.id},this.userPriority)};b.Highlights.prototype.getCurrentPageNumber=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentPageNumber'. Expected 0 arguments. Function Signature: getCurrentPageNumber()");return b.messageHandler.sendWithPromise("Highlights.getCurrentPageNumber",{hlts:this.id},this.userPriority)};b.HTML2PDF.Proxy.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("HTML2PDF.proxyCreate",
{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.HTML2PDF.Proxy(a);createdObjects.push({name:a.name,id:a.id});return a})};b.HTML2PDF.Proxy.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-
1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF.Proxy.prototype.setType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setType'. Expected 1 argument. Function Signature: setType(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setType(number).");return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.setType",{proxy:this.id,type:a},this.userPriority)};b.HTML2PDF.Proxy.prototype.setPort=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPort'. Expected 1 argument. Function Signature: setPort(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPort' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPort' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPort(number).");
return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.setPort",{proxy:this.id,port:a},this.userPriority)};b.HTML2PDF.Proxy.prototype.setHost=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHost'. Expected 1 argument. Function Signature: setHost(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHost' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHost' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setHost(string).");return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.setHost",{proxy:this.id,host:a},this.userPriority)};b.HTML2PDF.Proxy.prototype.setUsername=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUsername'. Expected 1 argument. Function Signature: setUsername(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUsername' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUsername' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setUsername(string).");return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.setUsername",{proxy:this.id,username:a},this.userPriority)};b.HTML2PDF.Proxy.prototype.setPassword=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPassword'. Expected 1 argument. Function Signature: setPassword(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPassword' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPassword(string).");
return b.messageHandler.sendWithPromise("HTML2PDF.Proxy.setPassword",{proxy:this.id,password:a},this.userPriority)};b.HTML2PDF.WebPageSettings.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("HTML2PDF.webPageSettingsCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.HTML2PDF.WebPageSettings(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.HTML2PDF.WebPageSettings.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setPrintBackground=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintBackground'. Expected 1 argument. Function Signature: setPrintBackground(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintBackground' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintBackground' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintBackground(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setPrintBackground",{settings:this.id,background:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setLoadImages=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLoadImages'. Expected 1 argument. Function Signature: setLoadImages(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLoadImages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLoadImages' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setLoadImages(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setLoadImages",{settings:this.id,load:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setAllowJavaScript=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAllowJavaScript'. Expected 1 argument. Function Signature: setAllowJavaScript(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAllowJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAllowJavaScript' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: setAllowJavaScript(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setAllowJavaScript",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setSmartShrinking=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSmartShrinking'. Expected 1 argument. Function Signature: setSmartShrinking(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSmartShrinking' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSmartShrinking' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setSmartShrinking(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setSmartShrinking",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setMinimumFontSize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMinimumFontSize'. Expected 1 argument. Function Signature: setMinimumFontSize(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMinimumFontSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMinimumFontSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMinimumFontSize(number).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setMinimumFontSize",{settings:this.id,size:a},this.userPriority)};
b.HTML2PDF.WebPageSettings.prototype.setDefaultEncoding=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultEncoding'. Expected 1 argument. Function Signature: setDefaultEncoding(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultEncoding' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDefaultEncoding' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDefaultEncoding(string).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setDefaultEncoding",{settings:this.id,encoding:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setUserStyleSheet=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUserStyleSheet'. Expected 1 argument. Function Signature: setUserStyleSheet(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUserStyleSheet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUserStyleSheet' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setUserStyleSheet(string).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setUserStyleSheet",{settings:this.id,url:a},this.userPriority)};
b.HTML2PDF.WebPageSettings.prototype.setAllowPlugins=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAllowPlugins'. Expected 1 argument. Function Signature: setAllowPlugins(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAllowPlugins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAllowPlugins' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setAllowPlugins(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setAllowPlugins",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setPrintMediaType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMediaType'. Expected 1 argument. Function Signature: setPrintMediaType(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMediaType' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMediaType' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMediaType(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setPrintMediaType",{settings:this.id,print:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setIncludeInOutline=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIncludeInOutline'. Expected 1 argument. Function Signature: setIncludeInOutline(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIncludeInOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIncludeInOutline' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setIncludeInOutline(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setIncludeInOutline",{settings:this.id,include:a},
this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setUsername=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUsername'. Expected 1 argument. Function Signature: setUsername(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUsername' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUsername' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setUsername(string).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setUsername",{settings:this.id,username:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setPassword=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPassword'. Expected 1 argument. Function Signature: setPassword(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPassword' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPassword(string).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setPassword",{settings:this.id,password:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setJavaScriptDelay=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJavaScriptDelay'. Expected 1 argument. Function Signature: setJavaScriptDelay(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJavaScriptDelay' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJavaScriptDelay' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJavaScriptDelay(number).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setJavaScriptDelay",{settings:this.id,msec:a},this.userPriority)};
b.HTML2PDF.WebPageSettings.prototype.setZoom=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setZoom'. Expected 1 argument. Function Signature: setZoom(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setZoom' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setZoom' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setZoom(number).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setZoom",{settings:this.id,zoom:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setBlockLocalFileAccess=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlockLocalFileAccess'. Expected 1 argument. Function Signature: setBlockLocalFileAccess(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlockLocalFileAccess' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBlockLocalFileAccess' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setBlockLocalFileAccess(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setBlockLocalFileAccess",{settings:this.id,block:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setStopSlowScripts=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStopSlowScripts'. Expected 1 argument. Function Signature: setStopSlowScripts(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStopSlowScripts' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStopSlowScripts' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setStopSlowScripts(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setStopSlowScripts",{settings:this.id,stop:a},this.userPriority)};
b.HTML2PDF.WebPageSettings.prototype.setDebugJavaScriptOutput=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDebugJavaScriptOutput'. Expected 1 argument. Function Signature: setDebugJavaScriptOutput(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDebugJavaScriptOutput' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDebugJavaScriptOutput' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDebugJavaScriptOutput(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setDebugJavaScriptOutput",{settings:this.id,forward:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setLoadErrorHandling=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLoadErrorHandling'. Expected 1 argument. Function Signature: setLoadErrorHandling(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLoadErrorHandling' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLoadErrorHandling' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLoadErrorHandling(number).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setLoadErrorHandling",{settings:this.id,val:a},
this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setExternalLinks=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setExternalLinks'. Expected 1 argument. Function Signature: setExternalLinks(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setExternalLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setExternalLinks' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setExternalLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setExternalLinks",{settings:this.id,convert:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setInternalLinks=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInternalLinks'. Expected 1 argument. Function Signature: setInternalLinks(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInternalLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setInternalLinks' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setInternalLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setInternalLinks",{settings:this.id,convert:a},this.userPriority)};
b.HTML2PDF.WebPageSettings.prototype.setProduceForms=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProduceForms'. Expected 1 argument. Function Signature: setProduceForms(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProduceForms' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setProduceForms' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setProduceForms(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setProduceForms",{settings:this.id,forms:a},this.userPriority)};b.HTML2PDF.WebPageSettings.prototype.setProxy=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProxy'. Expected 1 argument. Function Signature: setProxy(PDFNet.HTML2PDF.Proxy)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProxy' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.HTML2PDF.Proxy)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setProxy' is of type '"+a.name+"'. Expected type 'HTML2PDF.Proxy'. Function Signature: setProxy(PDFNet.HTML2PDF.Proxy).");throw new TypeError("1st input argument '"+a+"' in function 'setProxy' is of type '"+typeof a+"'. Expected type 'HTML2PDF.Proxy'. Function Signature: setProxy(PDFNet.HTML2PDF.Proxy).");}return b.messageHandler.sendWithPromise("HTML2PDF.WebPageSettings.setProxy",
{settings:this.id,proxy:a.id},this.userPriority)};b.HTML2PDF.TOCSettings.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("HTML2PDF.tocSettingsCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.HTML2PDF.TOCSettings(a);createdObjects.push({name:a.name,id:a.id});return a})};b.HTML2PDF.TOCSettings.prototype.destroy=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF.TOCSettings.prototype.setDottedLines=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDottedLines'. Expected 1 argument. Function Signature: setDottedLines(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDottedLines' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDottedLines' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDottedLines(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setDottedLines",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF.TOCSettings.prototype.setLinks=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLinks'. Expected 1 argument. Function Signature: setLinks(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLinks' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setLinks",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF.TOCSettings.prototype.setCaptionText=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaptionText'. Expected 1 argument. Function Signature: setCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCaptionText(string).");
return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setCaptionText",{settings:this.id,caption:a},this.userPriority)};b.HTML2PDF.TOCSettings.prototype.setLevelIndentation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLevelIndentation'. Expected 1 argument. Function Signature: setLevelIndentation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLevelIndentation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLevelIndentation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLevelIndentation(number).");return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setLevelIndentation",{settings:this.id,indentation:a},this.userPriority)};b.HTML2PDF.TOCSettings.prototype.setTextSizeShrink=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextSizeShrink'. Expected 1 argument. Function Signature: setTextSizeShrink(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextSizeShrink' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextSizeShrink' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextSizeShrink(number).");return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setTextSizeShrink",{settings:this.id,shrink:a},this.userPriority)};
b.HTML2PDF.TOCSettings.prototype.setXsl=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setXsl'. Expected 1 argument. Function Signature: setXsl(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setXsl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setXsl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setXsl(string).");
return b.messageHandler.sendWithPromise("HTML2PDF.TOCSettings.setXsl",{settings:this.id,style_sheet:a},this.userPriority)};b.HTML2PDF.staticConvert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'staticConvert'. Expected 2 arguments. Function Signature: staticConvert(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'staticConvert' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'staticConvert' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: staticConvert(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'staticConvert' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: staticConvert(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'staticConvert' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'staticConvert' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: staticConvert(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("htmL2PDFStaticConvert",{doc:a.id,url:c},this.userPriority)};b.HTML2PDF.staticConvert2=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'staticConvert2'. Expected 3 arguments. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'staticConvert2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'staticConvert2' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings).");throw new TypeError("1st input argument '"+
a+"' in function 'staticConvert2' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'staticConvert2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'staticConvert2' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'staticConvert2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.HTML2PDF.WebPageSettings)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'staticConvert2' is of type '"+d.name+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings).");throw new TypeError("3rd input argument '"+
d+"' in function 'staticConvert2' is of type '"+typeof d+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: staticConvert2(PDFNet.PDFDoc, string, PDFNet.HTML2PDF.WebPageSettings).");}return b.messageHandler.sendWithPromise("htmL2PDFStaticConvert2",{doc:a.id,url:c,settings:d.id},this.userPriority)};b.HTML2PDF.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");
return b.messageHandler.sendWithPromise("htmL2PDFCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.HTML2PDF(a);createdObjects.push({name:a.name,id:a.id});return a})};b.HTML2PDF.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,
1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF.prototype.insertFromUrl=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromUrl'. Expected 1 argument. Function Signature: insertFromUrl(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromUrl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromUrl(string).");return b.messageHandler.sendWithPromise("HTML2PDF.insertFromUrl",{html2pdf:this.id,url:a},this.userPriority)};b.HTML2PDF.prototype.insertFromUrl2=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromUrl2'. Expected 2 arguments. Function Signature: insertFromUrl2(string, PDFNet.HTML2PDF.WebPageSettings)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromUrl2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromUrl2' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: insertFromUrl2(string, PDFNet.HTML2PDF.WebPageSettings).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertFromUrl2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.HTML2PDF.WebPageSettings)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insertFromUrl2' is of type '"+c.name+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: insertFromUrl2(string, PDFNet.HTML2PDF.WebPageSettings).");
throw new TypeError("2nd input argument '"+c+"' in function 'insertFromUrl2' is of type '"+typeof c+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: insertFromUrl2(string, PDFNet.HTML2PDF.WebPageSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertFromUrl2",{html2pdf:this.id,url:a,settings:c.id},this.userPriority)};b.HTML2PDF.prototype.insertFromHtmlString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromHtmlString'. Expected 1 argument. Function Signature: insertFromHtmlString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromHtmlString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromHtmlString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromHtmlString(string).");return b.messageHandler.sendWithPromise("HTML2PDF.insertFromHtmlString",{html2pdf:this.id,html:a},this.userPriority)};
b.HTML2PDF.prototype.insertFromHtmlString2=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromHtmlString2'. Expected 2 arguments. Function Signature: insertFromHtmlString2(string, PDFNet.HTML2PDF.WebPageSettings)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromHtmlString2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'insertFromHtmlString2' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromHtmlString2(string, PDFNet.HTML2PDF.WebPageSettings).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertFromHtmlString2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.HTML2PDF.WebPageSettings)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insertFromHtmlString2' is of type '"+
c.name+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: insertFromHtmlString2(string, PDFNet.HTML2PDF.WebPageSettings).");throw new TypeError("2nd input argument '"+c+"' in function 'insertFromHtmlString2' is of type '"+typeof c+"'. Expected type 'HTML2PDF.WebPageSettings'. Function Signature: insertFromHtmlString2(string, PDFNet.HTML2PDF.WebPageSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertFromHtmlString2",{html2pdf:this.id,html:a,settings:c.id},this.userPriority)};
b.HTML2PDF.prototype.insertTOC=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertTOC'. Expected 0 arguments. Function Signature: insertTOC()");return b.messageHandler.sendWithPromise("HTML2PDF.insertTOC",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.insertTOC2=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertTOC2'. Expected 1 argument. Function Signature: insertTOC2(PDFNet.HTML2PDF.TOCSettings)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertTOC2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.HTML2PDF.TOCSettings)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'insertTOC2' is of type '"+a.name+"'. Expected type 'HTML2PDF.TOCSettings'. Function Signature: insertTOC2(PDFNet.HTML2PDF.TOCSettings).");throw new TypeError("1st input argument '"+a+"' in function 'insertTOC2' is of type '"+
typeof a+"'. Expected type 'HTML2PDF.TOCSettings'. Function Signature: insertTOC2(PDFNet.HTML2PDF.TOCSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertTOC2",{html2pdf:this.id,settings:a.id},this.userPriority)};b.HTML2PDF.prototype.convert=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert'. Expected 1 argument. Function Signature: convert(PDFNet.PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'convert' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: convert(PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'convert' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: convert(PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("HTML2PDF.convert",{html2pdf:this.id,
doc:a.id},this.userPriority)};b.HTML2PDF.prototype.getHttpErrorCode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHttpErrorCode'. Expected 0 arguments. Function Signature: getHttpErrorCode()");return b.messageHandler.sendWithPromise("HTML2PDF.getHttpErrorCode",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.getLog=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLog'. Expected 0 arguments. Function Signature: getLog()");
return b.messageHandler.sendWithPromise("HTML2PDF.getLog",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.setPaperSize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPaperSize'. Expected 1 argument. Function Signature: setPaperSize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPaperSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPaperSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPaperSize(number).");return b.messageHandler.sendWithPromise("HTML2PDF.setPaperSize",{html2pdf:this.id,size:a},this.userPriority)};b.HTML2PDF.prototype.setPaperSize2=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPaperSize2'. Expected 2 arguments. Function Signature: setPaperSize2(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPaperSize2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPaperSize2' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPaperSize2(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPaperSize2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPaperSize2' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setPaperSize2(string, string).");return b.messageHandler.sendWithPromise("HTML2PDF.setPaperSize2",{html2pdf:this.id,width:a,height:c},this.userPriority)};b.HTML2PDF.prototype.setLandscape=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLandscape'. Expected 1 argument. Function Signature: setLandscape(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLandscape' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLandscape' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setLandscape(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.setLandscape",{html2pdf:this.id,enable:a},this.userPriority)};b.HTML2PDF.prototype.setDPI=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");
return b.messageHandler.sendWithPromise("HTML2PDF.setDPI",{html2pdf:this.id,dpi:a},this.userPriority)};b.HTML2PDF.prototype.setOutline=function(a,c){"undefined"===typeof c&&(c=4);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOutline'. Expected 1 to 2 arguments. Function Signature: setOutline(boolean, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOutline' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOutline(boolean, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setOutline' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setOutline(boolean, number).");
return b.messageHandler.sendWithPromise("HTML2PDF.setOutline",{html2pdf:this.id,enable:a,depth:c},this.userPriority)};b.HTML2PDF.prototype.dumpOutline=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'dumpOutline'. Expected 1 argument. Function Signature: dumpOutline(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'dumpOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'dumpOutline' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: dumpOutline(string).");return b.messageHandler.sendWithPromise("HTML2PDF.dumpOutline",{html2pdf:this.id,xml_file:a},this.userPriority)};b.HTML2PDF.prototype.setPDFCompression=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPDFCompression'. Expected 1 argument. Function Signature: setPDFCompression(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPDFCompression' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPDFCompression' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPDFCompression(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.setPDFCompression",{html2pdf:this.id,enable:a},this.userPriority)};
b.HTML2PDF.prototype.setMargins=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMargins'. Expected 4 arguments. Function Signature: setMargins(string, string, string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMargins' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setMargins' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setMargins' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setMargins' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");return b.messageHandler.sendWithPromise("HTML2PDF.setMargins",{html2pdf:this.id,top:a,bottom:c,left:d,right:e},this.userPriority)};b.HTML2PDF.prototype.setImageDPI=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageDPI'. Expected 1 argument. Function Signature: setImageDPI(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageDPI(number).");return b.messageHandler.sendWithPromise("HTML2PDF.setImageDPI",{html2pdf:this.id,dpi:a},this.userPriority)};b.HTML2PDF.prototype.setImageQuality=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageQuality'. Expected 1 argument. Function Signature: setImageQuality(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageQuality' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageQuality' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageQuality(number).");
return b.messageHandler.sendWithPromise("HTML2PDF.setImageQuality",{html2pdf:this.id,quality:a},this.userPriority)};b.HTML2PDF.prototype.setCookieJar=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCookieJar'. Expected 1 argument. Function Signature: setCookieJar(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCookieJar' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCookieJar' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCookieJar(string).");return b.messageHandler.sendWithPromise("HTML2PDF.setCookieJar",{html2pdf:this.id,path:a},this.userPriority)};b.HTML2PDF.prototype.setQuiet=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuiet'. Expected 1 argument. Function Signature: setQuiet(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuiet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuiet' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setQuiet(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.setQuiet",{html2pdf:this.id,quiet:a},this.userPriority)};b.HTML2PDF.setModulePath=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModulePath'. Expected 1 argument. Function Signature: setModulePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModulePath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setModulePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setModulePath(string).");
return b.messageHandler.sendWithPromise("htmL2PDFSetModulePath",{path:a},this.userPriority)};b.Image.createFromFile=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFile'. Expected 2 to 3 arguments. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromFile' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromFile' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromFile' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createFromFile' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'createFromFile' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromFile(PDFNet.SDFDoc, string, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromFile",
{doc:a.id,filename:c,encoder_hints:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createFromMemory=function(a,c,d,e,h,f,k){"undefined"===typeof k&&(k=new b.Obj("0"));var r=c;g.isArrayBuffer(r)||(r=r.buffer,c.byteLength<r.byteLength&&(r=r.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(6>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemory'. Expected 6 to 7 arguments. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromMemory' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromMemory' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(r)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromMemory' is of type '"+
c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromMemory' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createFromMemory' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("5th input argument '"+
e+"' in function 'createFromMemory' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(h instanceof Promise)throw new TypeError("6th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("6th input argument '"+h+"' in function 'createFromMemory' is of type '"+
typeof h+"'. Expected type 'number'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(f instanceof Promise)throw new TypeError("7th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(f instanceof b.ColorSpace)){if("object"===typeof f&&f.name)throw new TypeError("7th input argument in function 'createFromMemory' is of type '"+f.name+
"'. Expected type 'ColorSpace'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("7th input argument '"+f+"' in function 'createFromMemory' is of type '"+typeof f+"'. Expected type 'ColorSpace'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(k instanceof Promise)throw new TypeError("8th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(k instanceof b.Obj)){if("object"===typeof k&&k.name)throw new TypeError("8th input argument in function 'createFromMemory' is of type '"+k.name+"'. Expected type 'Obj'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("8th input argument '"+k+"' in function 'createFromMemory' is of type '"+typeof k+"'. Expected type 'Obj'. Function Signature: createFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("imageCreateFromMemory",{doc:a.id,buf:r,width:d,height:e,bpc:h,color_space:f.id,encoder_hints:k.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createFromMemory2=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));var e=c;g.isArrayBuffer(e)||(e=e.buffer,c.byteLength<e.byteLength&&(e=e.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemory2'. Expected 2 to 3 arguments. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromMemory2' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'createFromMemory2' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(e)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromMemory2' is of type '"+
c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromMemory2' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("4th input argument in function 'createFromMemory2' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");throw new TypeError("4th input argument '"+d+"' in function 'createFromMemory2' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromMemory2(PDFNet.SDFDoc, ArrayBuffer|TypedArray, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromMemory2",
{doc:a.id,buf:e,encoder_hints:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createFromStream=function(a,c,d,e,h,f,g){"undefined"===typeof g&&(g=new b.Obj("0"));if(6>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromStream'. Expected 6 to 7 arguments. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromStream' is of type '"+
c.name+"'. Expected type 'FilterReader'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+
e+"' in function 'createFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+h+"' in function 'createFromStream' is of type '"+
typeof h+"'. Expected type 'number'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(f instanceof b.ColorSpace)){if("object"===typeof f&&f.name)throw new TypeError("6th input argument in function 'createFromStream' is of type '"+f.name+
"'. Expected type 'ColorSpace'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("6th input argument '"+f+"' in function 'createFromStream' is of type '"+typeof f+"'. Expected type 'ColorSpace'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");}if(g instanceof Promise)throw new TypeError("7th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(g instanceof b.Obj)){if("object"===typeof g&&g.name)throw new TypeError("7th input argument in function 'createFromStream' is of type '"+g.name+"'. Expected type 'Obj'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");throw new TypeError("7th input argument '"+g+"' in function 'createFromStream' is of type '"+typeof g+"'. Expected type 'Obj'. Function Signature: createFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("imageCreateFromStream",{doc:a.id,image_data:c.id,width:d,height:e,bpc:h,color_space:f.id,encoder_hints:g.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createFromStream2=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromStream2'. Expected 2 to 3 arguments. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromStream2' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'createFromStream2' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromStream2' is of type '"+c.name+
"'. Expected type 'Filter'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromStream2' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createFromStream2' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'createFromStream2' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromStream2(PDFNet.SDFDoc, PDFNet.Filter, PDFNet.Obj).");}var e=-1;if(0!=c.id){for(var h=
createdObjects.length-1;0<=h;h--)if(createdObjects[h].id==c.id){e=h;break}if(-1!=e)for(createdObjects.splice(e,1),h=deallocStackCounter.length-1;0<=h;h--)if(deallocStackCounter[h]>e)--deallocStackCounter[h];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("imageCreateFromStream2",{doc:a.id,no_own_image_data:c.id,encoder_hints:d.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Image(a)})};b.Image.createImageMask=function(a,c,d,e,h){"undefined"===typeof h&&(h=new b.Obj("0"));var f=c;g.isArrayBuffer(f)||(f=f.buffer,c.byteLength<f.byteLength&&(f=f.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageMask'. Expected 4 to 5 arguments. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImageMask' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'createImageMask' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(f)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createImageMask' is of type '"+
c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createImageMask' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createImageMask' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("5th input argument '"+
e+"' in function 'createImageMask' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");if(h instanceof Promise)throw new TypeError("6th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(h instanceof b.Obj)){if("object"===typeof h&&h.name)throw new TypeError("6th input argument in function 'createImageMask' is of type '"+
h.name+"'. Expected type 'Obj'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");throw new TypeError("6th input argument '"+h+"' in function 'createImageMask' is of type '"+typeof h+"'. Expected type 'Obj'. Function Signature: createImageMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateImageMask",{doc:a.id,buf:f,width:d,height:e,encoder_hints:h.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Image(a)})};b.Image.createImageMaskFromStream=function(a,c,d,e,h){"undefined"===typeof h&&(h=new b.Obj("0"));if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageMaskFromStream'. Expected 4 to 5 arguments. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createImageMaskFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createImageMaskFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createImageMaskFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'createImageMaskFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+
d+"' in function 'createImageMaskFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createImageMaskFromStream' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(h instanceof b.Obj)){if("object"===typeof h&&h.name)throw new TypeError("5th input argument in function 'createImageMaskFromStream' is of type '"+h.name+"'. Expected type 'Obj'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");
throw new TypeError("5th input argument '"+h+"' in function 'createImageMaskFromStream' is of type '"+typeof h+"'. Expected type 'Obj'. Function Signature: createImageMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateImageMaskFromStream",{doc:a.id,image_data:c.id,width:d,height:e,encoder_hints:h.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createSoftMask=function(a,c,d,e,h,
f){"undefined"===typeof f&&(f=new b.Obj("0"));var k=c;g.isArrayBuffer(k)||(k=k.buffer,c.byteLength<k.byteLength&&(k=k.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(5>arguments.length||6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSoftMask'. Expected 5 to 6 arguments. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createSoftMask' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createSoftMask' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(k)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createSoftMask' is of type '"+c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");throw new TypeError("2nd input argument '"+
c+"' in function 'createSoftMask' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createSoftMask' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("5th input argument '"+e+"' in function 'createSoftMask' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");
if(h instanceof Promise)throw new TypeError("6th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("6th input argument '"+h+"' in function 'createSoftMask' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");if(f instanceof Promise)throw new TypeError("7th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(f instanceof b.Obj)){if("object"===typeof f&&f.name)throw new TypeError("7th input argument in function 'createSoftMask' is of type '"+f.name+"'. Expected type 'Obj'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");throw new TypeError("7th input argument '"+f+"' in function 'createSoftMask' is of type '"+typeof f+"'. Expected type 'Obj'. Function Signature: createSoftMask(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("imageCreateSoftMask",{doc:a.id,buf:k,width:d,height:e,bpc:h,encoder_hints:f.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createSoftMaskFromStream=function(a,c,d,e,h,f){"undefined"===typeof f&&(f=new b.Obj("0"));if(5>arguments.length||6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSoftMaskFromStream'. Expected 5 to 6 arguments. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createSoftMaskFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createSoftMaskFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"===typeof c&&
c.name)throw new TypeError("2nd input argument in function 'createSoftMaskFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createSoftMaskFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createSoftMaskFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createSoftMaskFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");if(h instanceof Promise)throw new TypeError("5th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof h)throw new TypeError("5th input argument '"+
h+"' in function 'createSoftMaskFromStream' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(f instanceof b.Obj)){if("object"===typeof f&&f.name)throw new TypeError("6th input argument in function 'createSoftMaskFromStream' is of type '"+
f.name+"'. Expected type 'Obj'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");throw new TypeError("6th input argument '"+f+"' in function 'createSoftMaskFromStream' is of type '"+typeof f+"'. Expected type 'Obj'. Function Signature: createSoftMaskFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateSoftMaskFromStream",{doc:a.id,image_data:c.id,
width:d,height:e,bpc:h,encoder_hints:f.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createDirectFromMemory=function(a,c,d,e,f,k,l){var h=c;g.isArrayBuffer(h)||(h=h.buffer,c.byteLength<h.byteLength&&(h=h.slice(c.byteOffset,c.byteOffset+c.byteLength)));if(7!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDirectFromMemory'. Expected 7 arguments. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createDirectFromMemory' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");
throw new TypeError("1st input argument '"+a+"' in function 'createDirectFromMemory' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(h)){if("object"===typeof c&&
c.name)throw new TypeError("2nd input argument in function 'createDirectFromMemory' is of type '"+c.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createDirectFromMemory' is of type '"+typeof c+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");
}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createDirectFromMemory' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("5th input argument '"+e+"' in function 'createDirectFromMemory' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("6th input argument '"+
f+"' in function 'createDirectFromMemory' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");if(k instanceof Promise)throw new TypeError("7th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(k instanceof b.ColorSpace)){if("object"===typeof k&&k.name)throw new TypeError("7th input argument in function 'createDirectFromMemory' is of type '"+
k.name+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");throw new TypeError("7th input argument '"+k+"' in function 'createDirectFromMemory' is of type '"+typeof k+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");}if(l instanceof Promise)throw new TypeError("8th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof l)throw new TypeError("8th input argument '"+l+"' in function 'createDirectFromMemory' is of type '"+typeof l+"'. Expected type 'number'. Function Signature: createDirectFromMemory(PDFNet.SDFDoc, ArrayBuffer|TypedArray, number, number, number, PDFNet.ColorSpace, number).");return b.messageHandler.sendWithPromise("imageCreateDirectFromMemory",{doc:a.id,buf:h,width:d,height:e,bpc:f,color_space:k.id,input_format:l},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};
b.Image.createDirectFromStream=function(a,c,d,e,f,g,k){if(7!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDirectFromStream'. Expected 7 arguments. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createDirectFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");throw new TypeError("1st input argument '"+a+"' in function 'createDirectFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createDirectFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");
throw new TypeError("2nd input argument '"+c+"' in function 'createDirectFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+
d+"' in function 'createDirectFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createDirectFromStream' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'createDirectFromStream' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");
if(g instanceof Promise)throw new TypeError("6th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.ColorSpace)){if("object"===typeof g&&g.name)throw new TypeError("6th input argument in function 'createDirectFromStream' is of type '"+g.name+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");
throw new TypeError("6th input argument '"+g+"' in function 'createDirectFromStream' is of type '"+typeof g+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");}if(k instanceof Promise)throw new TypeError("7th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof k)throw new TypeError("7th input argument '"+
k+"' in function 'createDirectFromStream' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: createDirectFromStream(PDFNet.SDFDoc, PDFNet.FilterReader, number, number, number, PDFNet.ColorSpace, number).");return b.messageHandler.sendWithPromise("imageCreateDirectFromStream",{doc:a.id,image_data:c.id,width:d,height:e,bpc:f,color_space:g.id,input_format:k},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.createFromObj=function(a){"undefined"===typeof a&&
(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromObj",{image_xobject:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Image.copy",{c:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Image(a)})};b.Image.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Image.getSDFObj",{img:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Image.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Image.isValid",{img:this.id},this.userPriority)};b.Image.prototype.getImageData=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageData'. Expected 0 arguments. Function Signature: getImageData()");
return b.messageHandler.sendWithPromise("Image.getImageData",{img:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.Image.prototype.getImageDataSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageDataSize'. Expected 0 arguments. Function Signature: getImageDataSize()");return b.messageHandler.sendWithPromise("Image.getImageDataSize",{img:this.id},this.userPriority)};b.Image.prototype.getImageColorSpace=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageColorSpace'. Expected 0 arguments. Function Signature: getImageColorSpace()");return b.messageHandler.sendWithPromise("Image.getImageColorSpace",{img:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Image.prototype.getImageWidth=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getImageWidth'. Expected 0 arguments. Function Signature: getImageWidth()");return b.messageHandler.sendWithPromise("Image.getImageWidth",{img:this.id},this.userPriority)};b.Image.prototype.getImageHeight=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageHeight'. Expected 0 arguments. Function Signature: getImageHeight()");return b.messageHandler.sendWithPromise("Image.getImageHeight",{img:this.id},
this.userPriority)};b.Image.prototype.getDecodeArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodeArray'. Expected 0 arguments. Function Signature: getDecodeArray()");return b.messageHandler.sendWithPromise("Image.getDecodeArray",{img:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Image.prototype.getBitsPerComponent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBitsPerComponent'. Expected 0 arguments. Function Signature: getBitsPerComponent()");
return b.messageHandler.sendWithPromise("Image.getBitsPerComponent",{img:this.id},this.userPriority)};b.Image.prototype.getComponentNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");return b.messageHandler.sendWithPromise("Image.getComponentNum",{img:this.id},this.userPriority)};b.Image.prototype.isImageMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isImageMask'. Expected 0 arguments. Function Signature: isImageMask()");return b.messageHandler.sendWithPromise("Image.isImageMask",{img:this.id},this.userPriority)};b.Image.prototype.isImageInterpolate=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageInterpolate'. Expected 0 arguments. Function Signature: isImageInterpolate()");return b.messageHandler.sendWithPromise("Image.isImageInterpolate",{img:this.id},
this.userPriority)};b.Image.prototype.getMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMask'. Expected 0 arguments. Function Signature: getMask()");return b.messageHandler.sendWithPromise("Image.getMask",{img:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Image.prototype.setMask=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMask'. Expected 1 argument. Function Signature: setMask(PDFNet.Image)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setMask' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: setMask(PDFNet.Image).");throw new TypeError("1st input argument '"+a+"' in function 'setMask' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: setMask(PDFNet.Image).");
}return b.messageHandler.sendWithPromise("Image.setMask",{img:this.id,image_mask:a.id},this.userPriority)};b.Image.prototype.setMaskWithObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaskWithObj'. Expected 1 argument. Function Signature: setMaskWithObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaskWithObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setMaskWithObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setMaskWithObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setMaskWithObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMaskWithObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("Image.setMaskWithObj",{img:this.id,mask:a.id},this.userPriority)};
b.Image.prototype.getSoftMask=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoftMask'. Expected 0 arguments. Function Signature: getSoftMask()");return b.messageHandler.sendWithPromise("Image.getSoftMask",{img:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Image.prototype.setSoftMask=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoftMask'. Expected 1 argument. Function Signature: setSoftMask(PDFNet.Image)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setSoftMask' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: setSoftMask(PDFNet.Image).");throw new TypeError("1st input argument '"+a+"' in function 'setSoftMask' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: setSoftMask(PDFNet.Image).");
}return b.messageHandler.sendWithPromise("Image.setSoftMask",{img:this.id,soft_mask:a.id},this.userPriority)};b.Image.prototype.getImageRenderingIntent=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageRenderingIntent'. Expected 0 arguments. Function Signature: getImageRenderingIntent()");return b.messageHandler.sendWithPromise("Image.getImageRenderingIntent",{img:this.id},this.userPriority)};b.Image.prototype.export=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'export'. Expected 1 argument. Function Signature: export(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: export(string).");
return b.messageHandler.sendWithPromise("Image.export",{img:this.id,filename:a},this.userPriority)};b.Image.prototype.exportFromStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportFromStream'. Expected 1 argument. Function Signature: exportFromStream(PDFNet.FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterWriter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'exportFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportFromStream(PDFNet.FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportFromStream' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportFromStream(PDFNet.FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportFromStream",
{img:this.id,writer:a.id},this.userPriority)};b.Image.prototype.exportAsTiff=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsTiff'. Expected 1 argument. Function Signature: exportAsTiff(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportAsTiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'exportAsTiff' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: exportAsTiff(string).");return b.messageHandler.sendWithPromise("Image.exportAsTiff",{img:this.id,filename:a},this.userPriority)};b.Image.prototype.exportAsTiffFromStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsTiffFromStream'. Expected 1 argument. Function Signature: exportAsTiffFromStream(PDFNet.FilterWriter)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'exportAsTiffFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'exportAsTiffFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportAsTiffFromStream(PDFNet.FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportAsTiffFromStream' is of type '"+
typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportAsTiffFromStream(PDFNet.FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportAsTiffFromStream",{img:this.id,writer:a.id},this.userPriority)};b.Image.prototype.exportAsPng=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsPng'. Expected 1 argument. Function Signature: exportAsPng(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportAsPng' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'exportAsPng' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: exportAsPng(string).");return b.messageHandler.sendWithPromise("Image.exportAsPng",{img:this.id,filename:a},this.userPriority)};b.Image.prototype.exportAsPngFromStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsPngFromStream'. Expected 1 argument. Function Signature: exportAsPngFromStream(PDFNet.FilterWriter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportAsPngFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'exportAsPngFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportAsPngFromStream(PDFNet.FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportAsPngFromStream' is of type '"+
typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportAsPngFromStream(PDFNet.FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportAsPngFromStream",{img:this.id,writer:a.id},this.userPriority)};b.PageLabel.create=function(a,c,d,e){"undefined"===typeof d&&(d="");"undefined"===typeof e&&(e=1);if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 4 arguments. Function Signature: create(PDFNet.SDFDoc, number, string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number, string, number).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, number, string, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(PDFNet.SDFDoc, number, string, number).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(PDFNet.SDFDoc, number, string, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(PDFNet.SDFDoc, number, string, number).");return b.messageHandler.sendWithPromise("pageLabelCreate",{doc:a.id,style:c,prefix:d,start_at:e},this.userPriority).then(function(a){return new b.PageLabel(a)})};b.PageLabel.createFromObj=function(a,c,d){"undefined"===typeof a&&(a=new b.Obj("0"));"undefined"===typeof c&&(c=-1);"undefined"===
typeof d&&(d=-1);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 3 arguments. Function Signature: createFromObj(PDFNet.Obj, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createFromObj' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFromObj(PDFNet.Obj, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromObj' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromObj(PDFNet.Obj, number, number).");
return b.messageHandler.sendWithPromise("pageLabelCreateFromObj",{l:a.id,first_page:c,last_page:d},this.userPriority).then(function(a){return new b.PageLabel(a)})};b.PageLabel.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.PageLabel)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PageLabel)&&a&&"PageLabel"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'PageLabel'. Function Signature: compare(PDFNet.PageLabel).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'PageLabel'. Function Signature: compare(PDFNet.PageLabel).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="PageLabel.compare";
return b.messageHandler.sendWithPromise("PageLabel.compare",{l:this,d:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.l,c);return a.result})};b.PageLabel.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.isValid",{l:this},this.userPriority)};b.PageLabel.prototype.getLabelTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLabelTitle'. Expected 1 argument. Function Signature: getLabelTitle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getLabelTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getLabelTitle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getLabelTitle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getLabelTitle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.getLabelTitle";
return b.messageHandler.sendWithPromise("PageLabel.getLabelTitle",{l:this,page_num:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.l,c);return a.result})};b.PageLabel.prototype.setStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStyle'. Expected 1 argument. Function Signature: setStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStyle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setStyle";
return b.messageHandler.sendWithPromise("PageLabel.setStyle",{l:this,style:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.l,c)})};b.PageLabel.prototype.getStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getStyle",{l:this},this.userPriority)};b.PageLabel.prototype.getPrefix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrefix'. Expected 0 arguments. Function Signature: getPrefix()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPrefix'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getPrefix",{l:this},this.userPriority)};b.PageLabel.prototype.setPrefix=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrefix'. Expected 1 argument. Function Signature: setPrefix(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrefix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrefix' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPrefix(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setPrefix'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setPrefix";return b.messageHandler.sendWithPromise("PageLabel.setPrefix",
{l:this,prefix:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.l,c)})};b.PageLabel.prototype.getStart=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStart'. Expected 0 arguments. Function Signature: getStart()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStart'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getStart",{l:this},this.userPriority)};b.PageLabel.prototype.setStart=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStart'. Expected 1 argument. Function Signature: setStart(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStart' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStart' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStart(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setStart'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setStart";return b.messageHandler.sendWithPromise("PageLabel.setStart",
{l:this,start_at:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.l,c)})};b.PageLabel.prototype.getFirstPageNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstPageNum'. Expected 0 arguments. Function Signature: getFirstPageNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFirstPageNum'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="PageLabel.getFirstPageNum";return b.messageHandler.sendWithPromise("PageLabel.getFirstPageNum",{l:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.l,a);return b.result})};b.PageLabel.prototype.getLastPageNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLastPageNum'. Expected 0 arguments. Function Signature: getLastPageNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getLastPageNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="PageLabel.getLastPageNum";return b.messageHandler.sendWithPromise("PageLabel.getLastPageNum",{l:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.l,a);return b.result})};b.PageLabel.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getSDFObj",{l:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.PageSet.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("pageSetCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createSinglePage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSinglePage'. Expected 1 argument. Function Signature: createSinglePage(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSinglePage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createSinglePage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createSinglePage(number).");return b.messageHandler.sendWithPromise("pageSetCreateSinglePage",{one_page:a},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createRange=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRange'. Expected 2 arguments. Function Signature: createRange(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRange(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createRange(number, number).");
return b.messageHandler.sendWithPromise("pageSetCreateRange",{range_start:a,range_end:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createFilteredRange=function(a,c,d){"undefined"===typeof d&&(d=b.PageSet.Filter.e_all);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFilteredRange'. Expected 2 to 3 arguments. Function Signature: createFilteredRange(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFilteredRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFilteredRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFilteredRange' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");return b.messageHandler.sendWithPromise("pageSetCreateFilteredRange",{range_start:a,range_end:c,filter:d},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PageSet.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PageSet.prototype.addPage=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addPage'. Expected 1 argument. Function Signature: addPage(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addPage(number).");
return b.messageHandler.sendWithPromise("PageSet.addPage",{page_set:this.id,one_page:a},this.userPriority)};b.PageSet.prototype.addRange=function(a,c,d){"undefined"===typeof d&&(d=b.PageSet.Filter.e_all);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addRange'. Expected 2 to 3 arguments. Function Signature: addRange(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addRange' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addRange(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addRange(number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'addRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'addRange' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: addRange(number, number, number).");return b.messageHandler.sendWithPromise("PageSet.addRange",{page_set:this.id,range_start:a,range_end:c,filter:d},this.userPriority)};
b.PatternColor.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("patternColorCreate",{pattern:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PatternColor.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PatternColor.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.PatternColor.getTypeFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("patternColorGetTypeFromObj",{pattern:a.id},this.userPriority)};b.PatternColor.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");
return b.messageHandler.sendWithPromise("PatternColor.getType",{pc:this.id},this.userPriority)};b.PatternColor.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PatternColor.getSDFObj",{pc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PatternColor.prototype.getMatrix=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMatrix'. Expected 0 arguments. Function Signature: getMatrix()");return b.messageHandler.sendWithPromise("PatternColor.getMatrix",{pc:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.PatternColor.prototype.getShading=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 0 arguments. Function Signature: getShading()");
return b.messageHandler.sendWithPromise("PatternColor.getShading",{pc:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PatternColor.prototype.getTilingType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTilingType'. Expected 0 arguments. Function Signature: getTilingType()");return b.messageHandler.sendWithPromise("PatternColor.getTilingType",
{pc:this.id},this.userPriority)};b.PatternColor.prototype.getBBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");return b.messageHandler.sendWithPromise("PatternColor.getBBox",{pc:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.PatternColor.prototype.getXStep=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXStep'. Expected 0 arguments. Function Signature: getXStep()");
return b.messageHandler.sendWithPromise("PatternColor.getXStep",{pc:this.id},this.userPriority)};b.PatternColor.prototype.getYStep=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getYStep'. Expected 0 arguments. Function Signature: getYStep()");return b.messageHandler.sendWithPromise("PatternColor.getYStep",{pc:this.id},this.userPriority)};b.GeometryCollection.prototype.snapToNearest=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'snapToNearest'. Expected 3 arguments. Function Signature: snapToNearest(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'snapToNearest' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'snapToNearest' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: snapToNearest(number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'snapToNearest' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'snapToNearest' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: snapToNearest(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'snapToNearest' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'snapToNearest' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: snapToNearest(number, number, number).");return b.messageHandler.sendWithPromise("GeometryCollection.snapToNearest",{self:this.id,x:a,y:c,mode:d},this.userPriority)};b.GeometryCollection.prototype.snapToNearestPixel=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'snapToNearestPixel'. Expected 4 arguments. Function Signature: snapToNearestPixel(number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'snapToNearestPixel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'snapToNearestPixel' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'snapToNearestPixel' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'snapToNearestPixel' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number, number).");
return b.messageHandler.sendWithPromise("GeometryCollection.snapToNearestPixel",{self:this.id,x:a,y:c,dpi:d,mode:e},this.userPriority)};b.GeometryCollection.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-
1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("GeometryCollection.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.DigitalSignatureField.prototype.hasCryptographicSignature=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasCryptographicSignature'. Expected 0 arguments. Function Signature: hasCryptographicSignature()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasCryptographicSignature'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.hasCryptographicSignature",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getSubFilter=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSubFilter'. Expected 0 arguments. Function Signature: getSubFilter()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSubFilter'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getSubFilter",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getSignatureName=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSignatureName'. Expected 0 arguments. Function Signature: getSignatureName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSignatureName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getSignatureName",
{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getLocation=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLocation'. Expected 0 arguments. Function Signature: getLocation()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getLocation'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getLocation",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getReason=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getReason'. Expected 0 arguments. Function Signature: getReason()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getReason'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getReason",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getContactInfo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContactInfo'. Expected 0 arguments. Function Signature: getContactInfo()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getContactInfo'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getContactInfo",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getCertCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCertCount'. Expected 0 arguments. Function Signature: getCertCount()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCertCount'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getCertCount",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.hasVisibleAppearance=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasVisibleAppearance'. Expected 0 arguments. Function Signature: hasVisibleAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasVisibleAppearance'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.hasVisibleAppearance",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.setContactInfo=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContactInfo'. Expected 1 argument. Function Signature: setContactInfo(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContactInfo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setContactInfo' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setContactInfo(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setContactInfo'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="DigitalSignatureField.setContactInfo";
return b.messageHandler.sendWithPromise("DigitalSignatureField.setContactInfo",{self:this,in_contact_info:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};b.DigitalSignatureField.prototype.setLocation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLocation'. Expected 1 argument. Function Signature: setLocation(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLocation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLocation' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setLocation(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setLocation'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="DigitalSignatureField.setLocation";
return b.messageHandler.sendWithPromise("DigitalSignatureField.setLocation",{self:this,in_location:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};b.DigitalSignatureField.prototype.setReason=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setReason'. Expected 1 argument. Function Signature: setReason(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setReason' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setReason' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setReason(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setReason'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="DigitalSignatureField.setReason";
return b.messageHandler.sendWithPromise("DigitalSignatureField.setReason",{self:this,in_reason:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};b.DigitalSignatureField.prototype.setDocumentPermissions=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDocumentPermissions'. Expected 1 argument. Function Signature: setDocumentPermissions(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDocumentPermissions' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDocumentPermissions' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDocumentPermissions(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setDocumentPermissions'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;
this.yieldFunction="DigitalSignatureField.setDocumentPermissions";return b.messageHandler.sendWithPromise("DigitalSignatureField.setDocumentPermissions",{self:this,in_perms:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};b.DigitalSignatureField.prototype.signOnNextSave=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'signOnNextSave'. Expected 2 arguments. Function Signature: signOnNextSave(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'signOnNextSave' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'signOnNextSave' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: signOnNextSave(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'signOnNextSave' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'signOnNextSave' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: signOnNextSave(string, string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'signOnNextSave'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction=
"DigitalSignatureField.signOnNextSave";return b.messageHandler.sendWithPromise("DigitalSignatureField.signOnNextSave",{self:this,in_pkcs12_keyfile_path:a,in_password:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.self,d)})};b.DigitalSignatureField.prototype.certifyOnNextSave=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'certifyOnNextSave'. Expected 2 arguments. Function Signature: certifyOnNextSave(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'certifyOnNextSave' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'certifyOnNextSave' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: certifyOnNextSave(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'certifyOnNextSave' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'certifyOnNextSave' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: certifyOnNextSave(string, string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'certifyOnNextSave'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction=
"DigitalSignatureField.certifyOnNextSave";return b.messageHandler.sendWithPromise("DigitalSignatureField.certifyOnNextSave",{self:this,in_pkcs12_keyfile_path:a,in_password:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.self,d)})};b.DigitalSignatureField.prototype.isLockedByDigitalSignature=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLockedByDigitalSignature'. Expected 0 arguments. Function Signature: isLockedByDigitalSignature()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isLockedByDigitalSignature'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.isLockedByDigitalSignature",{self:this},this.userPriority)};b.DigitalSignatureField.prototype.getDocumentPermissions=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getDocumentPermissions'. Expected 0 arguments. Function Signature: getDocumentPermissions()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDocumentPermissions'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getDocumentPermissions",{self:this},
this.userPriority)};b.DigitalSignatureField.prototype.clearSignature=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clearSignature'. Expected 0 arguments. Function Signature: clearSignature()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'clearSignature'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="DigitalSignatureField.clearSignature";return b.messageHandler.sendWithPromise("DigitalSignatureField.clearSignature",{self:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.self,a)})};b.DigitalSignatureField.createFromField=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromField'. Expected 1 argument. Function Signature: createFromField(PDFNet.Field)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createFromField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Field)&&a&&"Field"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromField' is of type '"+a.name+"'. Expected type 'Field'. Function Signature: createFromField(PDFNet.Field).");throw new TypeError("1st input argument '"+a+"' in function 'createFromField' is of type '"+
typeof a+"'. Expected type 'Field'. Function Signature: createFromField(PDFNet.Field).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'createFromField'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("digitalSignatureFieldCreateFromField",{d:a},this.userPriority).then(function(a){return new b.DigitalSignatureField(a)})};
b.DigitalSignatureField.prototype.getSigningTime=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSigningTime'. Expected 0 arguments. Function Signature: getSigningTime()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSigningTime'. Perhaps a yield statement is required for "+this.yieldFunction+"?");
return b.messageHandler.sendWithPromise("DigitalSignatureField.getSigningTime",{self:this},this.userPriority).then(function(a){return new b.Date(a)})};b.DigitalSignatureField.prototype.signOnNextSaveFromBuffer=function(a,c){var d=a;g.isArrayBuffer(d)||(d=d.buffer,a.byteLength<d.byteLength&&(d=d.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'signOnNextSaveFromBuffer'. Expected 2 arguments. Function Signature: signOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'signOnNextSaveFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'signOnNextSaveFromBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: signOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");throw new TypeError("1st input argument '"+
a+"' in function 'signOnNextSaveFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: signOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'signOnNextSaveFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'signOnNextSaveFromBuffer' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: signOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'signOnNextSaveFromBuffer'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var e=this;this.yieldFunction="DigitalSignatureField.signOnNextSaveFromBuffer";return b.messageHandler.sendWithPromise("DigitalSignatureField.signOnNextSaveFromBuffer",
{self:this,in_pkcs12_buffer:d,in_password:c},this.userPriority).then(function(a){e.yieldFunction=void 0;l(a.self,e)})};b.DigitalSignatureField.prototype.signOnNextSaveWithCustomHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'signOnNextSaveWithCustomHandler'. Expected 1 argument. Function Signature: signOnNextSaveWithCustomHandler(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'signOnNextSaveWithCustomHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'signOnNextSaveWithCustomHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: signOnNextSaveWithCustomHandler(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'signOnNextSaveWithCustomHandler'. Perhaps a yield statement is required for "+this.yieldFunction+
"?");var c=this;this.yieldFunction="DigitalSignatureField.signOnNextSaveWithCustomHandler";return b.messageHandler.sendWithPromise("DigitalSignatureField.signOnNextSaveWithCustomHandler",{self:this,in_signature_handler_id:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};b.DigitalSignatureField.prototype.certifyOnNextSaveFromBuffer=function(a,c){var d=a;g.isArrayBuffer(d)||(d=d.buffer,a.byteLength<d.byteLength&&(d=d.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(2!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'certifyOnNextSaveFromBuffer'. Expected 2 arguments. Function Signature: certifyOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'certifyOnNextSaveFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'certifyOnNextSaveFromBuffer' is of type '"+
a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: certifyOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");throw new TypeError("1st input argument '"+a+"' in function 'certifyOnNextSaveFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: certifyOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'certifyOnNextSaveFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'certifyOnNextSaveFromBuffer' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: certifyOnNextSaveFromBuffer(ArrayBuffer|TypedArray, string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'certifyOnNextSaveFromBuffer'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var e=this;this.yieldFunction="DigitalSignatureField.certifyOnNextSaveFromBuffer";return b.messageHandler.sendWithPromise("DigitalSignatureField.certifyOnNextSaveFromBuffer",{self:this,in_pkcs12_buffer:d,in_password:c},this.userPriority).then(function(a){e.yieldFunction=void 0;l(a.self,e)})};b.DigitalSignatureField.prototype.certifyOnNextSaveWithCustomHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'certifyOnNextSaveWithCustomHandler'. Expected 1 argument. Function Signature: certifyOnNextSaveWithCustomHandler(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'certifyOnNextSaveWithCustomHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'certifyOnNextSaveWithCustomHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: certifyOnNextSaveWithCustomHandler(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'certifyOnNextSaveWithCustomHandler'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="DigitalSignatureField.certifyOnNextSaveWithCustomHandler";return b.messageHandler.sendWithPromise("DigitalSignatureField.certifyOnNextSaveWithCustomHandler",{self:this,in_signature_handler_id:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.self,c)})};
b.DigitalSignatureField.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.getSDFObj",
{self:this},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.DigitalSignatureField.prototype.verify=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'verify'. Expected 1 argument. Function Signature: verify(PDFNet.VerificationOptions)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'verify' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.VerificationOptions)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'verify' is of type '"+a.name+"'. Expected type 'VerificationOptions'. Function Signature: verify(PDFNet.VerificationOptions).");throw new TypeError("1st input argument '"+a+"' in function 'verify' is of type '"+typeof a+"'. Expected type 'VerificationOptions'. Function Signature: verify(PDFNet.VerificationOptions).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'verify'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("DigitalSignatureField.verify",{self:this,in_opts:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.VerificationResult(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getTriggerAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("PDFDoc.getTriggerAction",
{doc:this.id,trigger:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("pdfDocCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromUFilePath=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromUFilePath'. Expected 1 argument. Function Signature: createFromUFilePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromUFilePath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromUFilePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromUFilePath(string).");
return b.messageHandler.sendWithPromise("pdfDocCreateFromUFilePath",{filepath:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromFilePath=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFilePath'. Expected 1 argument. Function Signature: createFromFilePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFilePath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromFilePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromFilePath(string).");return b.messageHandler.sendWithPromise("pdfDocCreateFromFilePath",{filepath:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromFilter=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromFilter'. Expected 1 argument. Function Signature: createFromFilter(PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: createFromFilter(PDFNet.Filter).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: createFromFilter(PDFNet.Filter).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("pdfDocCreateFromFilter",
{no_own_stream:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromBuffer'. Expected 1 argument. Function Signature: createFromBuffer(ArrayBuffer|TypedArray)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'createFromBuffer' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("pdfDocCreateFromBuffer",{buf:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromLayoutEls=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromLayoutEls'. Expected 1 argument. Function Signature: createFromLayoutEls(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromLayoutEls' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromLayoutEls' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromLayoutEls(ArrayBuffer|TypedArray).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromLayoutEls' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createFromLayoutEls(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("pdfDocCreateFromLayoutEls",{buf:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.createShallowCopy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createShallowCopy'. Expected 0 arguments. Function Signature: createShallowCopy()");return b.messageHandler.sendWithPromise("PDFDoc.createShallowCopy",{source:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFDoc.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFDoc.prototype.isEncrypted=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEncrypted'. Expected 0 arguments. Function Signature: isEncrypted()");return b.messageHandler.sendWithPromise("PDFDoc.isEncrypted",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandler=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandler'. Expected 2 arguments. Function Signature: initStdSecurityHandler(string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandler' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandler(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'initStdSecurityHandler' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: initStdSecurityHandler(string, number).");return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandler",{doc:this.id,password:a,password_sz:c},this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandlerUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerUString'. Expected 1 argument. Function Signature: initStdSecurityHandlerUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandlerUString(string).");return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandlerUString",{doc:this.id,
password:a},this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandlerBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerBuffer'. Expected 1 argument. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'initStdSecurityHandlerBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer|TypedArray).");
}return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandlerBuffer",{doc:this.id,password_buf:c},this.userPriority)};b.PDFDoc.prototype.getSecurityHandler=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSecurityHandler'. Expected 0 arguments. Function Signature: getSecurityHandler()");return b.messageHandler.sendWithPromise("PDFDoc.getSecurityHandler",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.SecurityHandler(a)})};
b.PDFDoc.prototype.setSecurityHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSecurityHandler'. Expected 1 argument. Function Signature: setSecurityHandler(PDFNet.SecurityHandler)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SecurityHandler)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setSecurityHandler' is of type '"+
a.name+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(PDFNet.SecurityHandler).");throw new TypeError("1st input argument '"+a+"' in function 'setSecurityHandler' is of type '"+typeof a+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(PDFNet.SecurityHandler).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>
c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.setSecurityHandler",{doc:this.id,no_own_handler:a.id},this.userPriority)};b.PDFDoc.prototype.removeSecurity=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSecurity'. Expected 0 arguments. Function Signature: removeSecurity()");
return b.messageHandler.sendWithPromise("PDFDoc.removeSecurity",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getDocInfo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDocInfo'. Expected 0 arguments. Function Signature: getDocInfo()");return b.messageHandler.sendWithPromise("PDFDoc.getDocInfo",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocInfo(a)})};b.PDFDoc.prototype.getViewPrefs=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewPrefs'. Expected 0 arguments. Function Signature: getViewPrefs()");return b.messageHandler.sendWithPromise("PDFDoc.getViewPrefs",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocViewPrefs(a)})};b.PDFDoc.prototype.isModified=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");
return b.messageHandler.sendWithPromise("PDFDoc.isModified",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.hasRepairedXRef=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasRepairedXRef'. Expected 0 arguments. Function Signature: hasRepairedXRef()");return b.messageHandler.sendWithPromise("PDFDoc.hasRepairedXRef",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.isLinearized=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isLinearized'. Expected 0 arguments. Function Signature: isLinearized()");return b.messageHandler.sendWithPromise("PDFDoc.isLinearized",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.save=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'save'. Expected 2 arguments. Function Signature: save(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'save' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: save(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'save' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: save(string, number).");
return b.messageHandler.sendWithPromise("PDFDoc.save",{doc:this.id,path:a,flags:c},this.userPriority)};b.PDFDoc.prototype.saveMemoryBuffer=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveMemoryBuffer'. Expected 1 argument. Function Signature: saveMemoryBuffer(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveMemoryBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveMemoryBuffer' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: saveMemoryBuffer(number).");return b.messageHandler.sendWithPromise("PDFDoc.saveMemoryBuffer",{doc:this.id,flags:a},this.userPriority).then(function(a){return new Uint8Array(a)})};b.PDFDoc.prototype.saveStream=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveStream'. Expected 2 arguments. Function Signature: saveStream(PDFNet.Filter, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'saveStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: saveStream(PDFNet.Filter, number).");throw new TypeError("1st input argument '"+a+"' in function 'saveStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: saveStream(PDFNet.Filter, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: saveStream(PDFNet.Filter, number).");return b.messageHandler.sendWithPromise("PDFDoc.saveStream",{doc:this.id,stream:a.id,flags:c},this.userPriority)};b.PDFDoc.prototype.getPageIterator=
function(a){"undefined"===typeof a&&(a=1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageIterator'. Expected at most 1 arguments. Function Signature: getPageIterator(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageIterator' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPageIterator(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPageIterator",{doc:this.id,page_number:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Page");createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 1 argument. Function Signature: getPage(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPage(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPage",{doc:this.id,page_number:a},this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};
b.PDFDoc.prototype.pageRemove=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageRemove'. Expected 1 argument. Function Signature: pageRemove(PDFNet.Iterator)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageRemove' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Iterator)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageRemove' is of type '"+
a.name+"'. Expected type 'Iterator'. Function Signature: pageRemove(PDFNet.Iterator).");throw new TypeError("1st input argument '"+a+"' in function 'pageRemove' is of type '"+typeof a+"'. Expected type 'Iterator'. Function Signature: pageRemove(PDFNet.Iterator).");}return b.messageHandler.sendWithPromise("PDFDoc.pageRemove",{doc:this.id,page_itr:a.id},this.userPriority)};b.PDFDoc.prototype.pageInsert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageInsert'. Expected 2 arguments. Function Signature: pageInsert(PDFNet.Iterator, PDFNet.Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Iterator)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageInsert' is of type '"+a.name+"'. Expected type 'Iterator'. Function Signature: pageInsert(PDFNet.Iterator, PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'pageInsert' is of type '"+
typeof a+"'. Expected type 'Iterator'. Function Signature: pageInsert(PDFNet.Iterator, PDFNet.Page).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pageInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'pageInsert' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: pageInsert(PDFNet.Iterator, PDFNet.Page).");
throw new TypeError("2nd input argument '"+c+"' in function 'pageInsert' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: pageInsert(PDFNet.Iterator, PDFNet.Page).");}return b.messageHandler.sendWithPromise("PDFDoc.pageInsert",{doc:this.id,where:a.id,page:c.id},this.userPriority)};b.PDFDoc.prototype.insertPages=function(a,c,d,e,f){"undefined"===typeof f&&(f=0);if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertPages'. Expected 4 to 5 arguments. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertPages' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insertPages' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");throw new TypeError("2nd input argument '"+c+"' in function 'insertPages' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'insertPages' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertPages' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'insertPages' is of type '"+
typeof f+"'. Expected type 'number'. Function Signature: insertPages(number, PDFNet.PDFDoc, number, number, number).");return b.messageHandler.sendWithPromise("PDFDoc.insertPages",{dest_doc:this.id,insert_before_page_number:a,src_doc:c.id,start_page:d,end_page:e,flag:f},this.userPriority)};b.PDFDoc.prototype.insertPageSet=function(a,c,d,e){"undefined"===typeof e&&(e=0);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertPageSet'. Expected 3 to 4 arguments. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertPageSet' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insertPageSet' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");throw new TypeError("2nd input argument '"+c+"' in function 'insertPageSet' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'insertPageSet' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");throw new TypeError("3rd input argument '"+d+"' in function 'insertPageSet' is of type '"+
typeof d+"'. Expected type 'PageSet'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertPageSet' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertPageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");
return b.messageHandler.sendWithPromise("PDFDoc.insertPageSet",{dest_doc:this.id,insert_before_page_number:a,src_doc:c.id,source_page_set:d.id,flag:e},this.userPriority)};b.PDFDoc.prototype.movePages=function(a,c,d,e,f){"undefined"===typeof f&&(f=0);if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'movePages'. Expected 4 to 5 arguments. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'movePages' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'movePages' is of type '"+
c.name+"'. Expected type 'PDFDoc'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");throw new TypeError("2nd input argument '"+c+"' in function 'movePages' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'movePages' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'movePages' is of type '"+typeof e+
"'. Expected type 'number'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'movePages' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: movePages(number, PDFNet.PDFDoc, number, number, number).");
return b.messageHandler.sendWithPromise("PDFDoc.movePages",{dest_doc:this.id,move_before_page_number:a,src_doc:c.id,start_page:d,end_page:e,flag:f},this.userPriority)};b.PDFDoc.prototype.movePageSet=function(a,c,d,e){"undefined"===typeof e&&(e=0);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'movePageSet'. Expected 3 to 4 arguments. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'movePageSet' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"===typeof c&&
c.name)throw new TypeError("2nd input argument in function 'movePageSet' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");throw new TypeError("2nd input argument '"+c+"' in function 'movePageSet' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.PageSet)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'movePageSet' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");throw new TypeError("3rd input argument '"+d+"' in function 'movePageSet' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'movePageSet' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: movePageSet(number, PDFNet.PDFDoc, PDFNet.PageSet, number).");return b.messageHandler.sendWithPromise("PDFDoc.movePageSet",{dest_doc:this.id,move_before_page_number:a,src_doc:c.id,source_page_set:d.id,flag:e},this.userPriority)};b.PDFDoc.prototype.pagePushFront=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'pagePushFront'. Expected 1 argument. Function Signature: pagePushFront(PDFNet.Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pagePushFront' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pagePushFront' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pagePushFront(PDFNet.Page).");
throw new TypeError("1st input argument '"+a+"' in function 'pagePushFront' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pagePushFront(PDFNet.Page).");}return b.messageHandler.sendWithPromise("PDFDoc.pagePushFront",{doc:this.id,page:a.id},this.userPriority)};b.PDFDoc.prototype.pagePushBack=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pagePushBack'. Expected 1 argument. Function Signature: pagePushBack(PDFNet.Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pagePushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pagePushBack' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pagePushBack(PDFNet.Page).");throw new TypeError("1st input argument '"+a+"' in function 'pagePushBack' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pagePushBack(PDFNet.Page).");
}return b.messageHandler.sendWithPromise("PDFDoc.pagePushBack",{doc:this.id,page:a.id},this.userPriority)};b.PDFDoc.prototype.pageCreate=function(a){"undefined"===typeof a&&(a=new b.Rect(0,0,612,792));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageCreate'. Expected at most 1 arguments. Function Signature: pageCreate(PDFNet.Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pageCreate' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: pageCreate(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'pageCreate' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: pageCreate(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'pageCreate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDoc.pageCreate",{doc:this.id,media_box:a},this.userPriority).then(function(a){return"0"===a?null:new b.Page(a)})};b.PDFDoc.prototype.getFirstBookmark=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstBookmark'. Expected 0 arguments. Function Signature: getFirstBookmark()");return b.messageHandler.sendWithPromise("PDFDoc.getFirstBookmark",{doc:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Bookmark(a)})};b.PDFDoc.prototype.addRootBookmark=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addRootBookmark'. Expected 1 argument. Function Signature: addRootBookmark(PDFNet.Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addRootBookmark' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Bookmark)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addRootBookmark' is of type '"+
a.name+"'. Expected type 'Bookmark'. Function Signature: addRootBookmark(PDFNet.Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addRootBookmark' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addRootBookmark(PDFNet.Bookmark).");}return b.messageHandler.sendWithPromise("PDFDoc.addRootBookmark",{doc:this.id,root_bookmark:a.id},this.userPriority)};b.PDFDoc.prototype.getTrailer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("PDFDoc.getTrailer",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.getRoot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRoot'. Expected 0 arguments. Function Signature: getRoot()");return b.messageHandler.sendWithPromise("PDFDoc.getRoot",
{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.jsContextInitialize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'jsContextInitialize'. Expected 0 arguments. Function Signature: jsContextInitialize()");return b.messageHandler.sendWithPromise("PDFDoc.jsContextInitialize",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getPages=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getPages'. Expected 0 arguments. Function Signature: getPages()");return b.messageHandler.sendWithPromise("PDFDoc.getPages",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.getPageCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageCount'. Expected 0 arguments. Function Signature: getPageCount()");return b.messageHandler.sendWithPromise("PDFDoc.getPageCount",
{doc:this.id},this.userPriority)};b.pdfGetDownloadedByteCount=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pdfGetDownloadedByteCount'. Expected 1 argument. Function Signature: pdfGetDownloadedByteCount(PDFNet.PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pdfGetDownloadedByteCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pdfGetDownloadedByteCount' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: pdfGetDownloadedByteCount(PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'pdfGetDownloadedByteCount' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: pdfGetDownloadedByteCount(PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("pdfGetDownloadedByteCount",
{doc:a.id},this.userPriority)};b.pdfGetTotalRemoteByteCount=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pdfGetTotalRemoteByteCount'. Expected 1 argument. Function Signature: pdfGetTotalRemoteByteCount(PDFNet.PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pdfGetTotalRemoteByteCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pdfGetTotalRemoteByteCount' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: pdfGetTotalRemoteByteCount(PDFNet.PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'pdfGetTotalRemoteByteCount' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: pdfGetTotalRemoteByteCount(PDFNet.PDFDoc).");}return b.messageHandler.sendWithPromise("pdfGetTotalRemoteByteCount",
{doc:a.id},this.userPriority)};b.PDFDoc.prototype.getFieldIteratorBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");return b.messageHandler.sendWithPromise("PDFDoc.getFieldIteratorBegin",{doc:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getFieldIterator=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFieldIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFieldIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");
return b.messageHandler.sendWithPromise("PDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getField=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getField'. Expected 1 argument. Function Signature: getField(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getField(string).");return b.messageHandler.sendWithPromise("PDFDoc.getField",{doc:this.id,field_name:a},this.userPriority).then(function(a){return new b.Field(a)})};b.PDFDoc.prototype.fieldCreate=function(a,c,d,e){"undefined"===typeof d&&(d=new b.Obj("0"));"undefined"===typeof e&&(e=new b.Obj("0"));if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'fieldCreate'. Expected 2 to 4 arguments. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreate' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'fieldCreate' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreate' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(e instanceof b.Obj)){if("object"===typeof e&&e.name)throw new TypeError("4th input argument in function 'fieldCreate' is of type '"+e.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");throw new TypeError("4th input argument '"+e+"' in function 'fieldCreate' is of type '"+typeof e+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, PDFNet.Obj, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("PDFDoc.fieldCreate",
{doc:this.id,field_name:a,type:c,field_value:d.id,def_field_value:e.id},this.userPriority).then(function(a){return new b.Field(a)})};b.PDFDoc.prototype.fieldCreateFromStrings=function(a,c,d,e){"undefined"===typeof e&&(e="");if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreateFromStrings'. Expected 3 to 4 arguments. Function Signature: fieldCreateFromStrings(string, number, string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreateFromStrings' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreateFromStrings' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: fieldCreateFromStrings(string, number, string, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreateFromStrings' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'fieldCreateFromStrings' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");return b.messageHandler.sendWithPromise("PDFDoc.fieldCreateFromStrings",{doc:this.id,
field_name:a,type:c,field_value:d,def_field_value:e},this.userPriority).then(function(a){return new b.Field(a)})};b.PDFDoc.prototype.refreshFieldAppearances=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshFieldAppearances'. Expected 0 arguments. Function Signature: refreshFieldAppearances()");return b.messageHandler.sendWithPromise("PDFDoc.refreshFieldAppearances",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.flattenAnnotations=
function(a){"undefined"===typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flattenAnnotations'. Expected at most 1 arguments. Function Signature: flattenAnnotations(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'flattenAnnotations' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: flattenAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFDoc.flattenAnnotations",{doc:this.id,forms_only:a},this.userPriority)};b.PDFDoc.prototype.flattenAnnotationsAdvanced=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flattenAnnotationsAdvanced'. Expected 1 argument. Function Signature: flattenAnnotationsAdvanced(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenAnnotationsAdvanced' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'flattenAnnotationsAdvanced' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: flattenAnnotationsAdvanced(number).");return b.messageHandler.sendWithPromise("PDFDoc.flattenAnnotationsAdvanced",{doc:this.id,flags:a},this.userPriority)};b.PDFDoc.prototype.getAcroForm=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAcroForm'. Expected 0 arguments. Function Signature: getAcroForm()");
return b.messageHandler.sendWithPromise("PDFDoc.getAcroForm",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.fdfExtract=function(a){"undefined"===typeof a&&(a=b.PDFDoc.ExtractFlag.e_forms_only);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfExtract'. Expected at most 1 arguments. Function Signature: fdfExtract(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtract' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fdfExtract' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: fdfExtract(number).");return b.messageHandler.sendWithPromise("PDFDoc.fdfExtract",{doc:this.id,flag:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfExtractPageSet=function(a,c){"undefined"===typeof c&&(c=b.PDFDoc.ExtractFlag.e_forms_only);
if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfExtractPageSet'. Expected 1 to 2 arguments. Function Signature: fdfExtractPageSet(PDFNet.PageSet, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtractPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PageSet)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fdfExtractPageSet' is of type '"+
a.name+"'. Expected type 'PageSet'. Function Signature: fdfExtractPageSet(PDFNet.PageSet, number).");throw new TypeError("1st input argument '"+a+"' in function 'fdfExtractPageSet' is of type '"+typeof a+"'. Expected type 'PageSet'. Function Signature: fdfExtractPageSet(PDFNet.PageSet, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fdfExtractPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'fdfExtractPageSet' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fdfExtractPageSet(PDFNet.PageSet, number).");return b.messageHandler.sendWithPromise("PDFDoc.fdfExtractPageSet",{doc:this.id,pages_to_extract:a.id,flag:c},this.userPriority).then(function(a){if("0"===a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfMerge=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfMerge'. Expected 1 argument. Function Signature: fdfMerge(PDFNet.FDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfMerge' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fdfMerge' is of type '"+a.name+"'. Expected type 'FDFDoc'. Function Signature: fdfMerge(PDFNet.FDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'fdfMerge' is of type '"+
typeof a+"'. Expected type 'FDFDoc'. Function Signature: fdfMerge(PDFNet.FDFDoc).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfMerge",{doc:this.id,fdf_doc:a.id},this.userPriority)};b.PDFDoc.prototype.fdfUpdate=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfUpdate'. Expected 1 argument. Function Signature: fdfUpdate(PDFNet.FDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfUpdate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fdfUpdate' is of type '"+a.name+"'. Expected type 'FDFDoc'. Function Signature: fdfUpdate(PDFNet.FDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'fdfUpdate' is of type '"+typeof a+"'. Expected type 'FDFDoc'. Function Signature: fdfUpdate(PDFNet.FDFDoc).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfUpdate",{doc:this.id,
fdf_doc:a.id},this.userPriority)};b.PDFDoc.prototype.getOpenAction=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpenAction'. Expected 0 arguments. Function Signature: getOpenAction()");return b.messageHandler.sendWithPromise("PDFDoc.getOpenAction",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Action(a)})};b.PDFDoc.prototype.setOpenAction=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setOpenAction'. Expected 1 argument. Function Signature: setOpenAction(PDFNet.Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpenAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setOpenAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setOpenAction(PDFNet.Action).");
throw new TypeError("1st input argument '"+a+"' in function 'setOpenAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setOpenAction(PDFNet.Action).");}return b.messageHandler.sendWithPromise("PDFDoc.setOpenAction",{doc:this.id,action:a.id},this.userPriority)};b.PDFDoc.prototype.addFileAttachment=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addFileAttachment'. Expected 2 arguments. Function Signature: addFileAttachment(string, PDFNet.FileSpec)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addFileAttachment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addFileAttachment' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addFileAttachment(string, PDFNet.FileSpec).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addFileAttachment' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.FileSpec)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'addFileAttachment' is of type '"+c.name+"'. Expected type 'FileSpec'. Function Signature: addFileAttachment(string, PDFNet.FileSpec).");throw new TypeError("2nd input argument '"+c+"' in function 'addFileAttachment' is of type '"+typeof c+"'. Expected type 'FileSpec'. Function Signature: addFileAttachment(string, PDFNet.FileSpec).");}return b.messageHandler.sendWithPromise("PDFDoc.addFileAttachment",
{doc:this.id,file_key:a,embedded_file:c.id},this.userPriority)};b.PDFDoc.prototype.getPageLabel=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageLabel'. Expected 1 argument. Function Signature: getPageLabel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getPageLabel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageLabel(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPageLabel",{doc:this.id,page_num:a},this.userPriority).then(function(a){return new b.PageLabel(a)})};b.PDFDoc.prototype.setPageLabel=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageLabel'. Expected 2 arguments. Function Signature: setPageLabel(number, PDFNet.PageLabel)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageLabel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPageLabel(number, PDFNet.PageLabel).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.PageLabel)&&c&&"PageLabel"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'setPageLabel' is of type '"+c.name+"'. Expected type 'PageLabel'. Function Signature: setPageLabel(number, PDFNet.PageLabel).");throw new TypeError("2nd input argument '"+c+"' in function 'setPageLabel' is of type '"+typeof c+"'. Expected type 'PageLabel'. Function Signature: setPageLabel(number, PDFNet.PageLabel).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setPageLabel'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDoc.setPageLabel",{doc:this.id,page_num:a,label:c},this.userPriority)};b.PDFDoc.prototype.removePageLabel=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removePageLabel'. Expected 1 argument. Function Signature: removePageLabel(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'removePageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removePageLabel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removePageLabel(number).");return b.messageHandler.sendWithPromise("PDFDoc.removePageLabel",{doc:this.id,page_num:a},this.userPriority)};b.PDFDoc.prototype.getStructTree=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructTree'. Expected 0 arguments. Function Signature: getStructTree()");return b.messageHandler.sendWithPromise("PDFDoc.getStructTree",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.STree(a)})};b.PDFDoc.prototype.hasOC=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasOC'. Expected 0 arguments. Function Signature: hasOC()");
return b.messageHandler.sendWithPromise("PDFDoc.hasOC",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getOCGs=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCGs'. Expected 0 arguments. Function Signature: getOCGs()");return b.messageHandler.sendWithPromise("PDFDoc.getOCGs",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.getOCGConfig=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getOCGConfig'. Expected 0 arguments. Function Signature: getOCGConfig()");return b.messageHandler.sendWithPromise("PDFDoc.getOCGConfig",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.OCGConfig(a)})};b.PDFDoc.prototype.createIndirectName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectName'. Expected 1 argument. Function Signature: createIndirectName(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createIndirectName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectName(string).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectName",{doc:this.id,name:a},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectArray'. Expected 0 arguments. Function Signature: createIndirectArray()");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectArray",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createIndirectBool'. Expected 1 argument. Function Signature: createIndirectBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createIndirectBool(boolean).");
return b.messageHandler.sendWithPromise("PDFDoc.createIndirectBool",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectDict'. Expected 0 arguments. Function Signature: createIndirectDict()");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectDict",{doc:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectNull=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNull'. Expected 0 arguments. Function Signature: createIndirectNull()");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectNull",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createIndirectNumber'. Expected 1 argument. Function Signature: createIndirectNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectNumber(number).");
return b.messageHandler.sendWithPromise("PDFDoc.createIndirectNumber",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectString=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectString'. Expected 2 arguments. Function Signature: createIndirectString(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectString' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectString(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectString' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createIndirectString(number, number).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectString",{doc:this.id,value:a,buf_size:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStringFromUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStringFromUString'. Expected 1 argument. Function Signature: createIndirectStringFromUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStringFromUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStringFromUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStringFromUString(string).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStringFromUString",
{doc:this.id,str:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStreamFromFilter=function(a,c){"undefined"===typeof c&&(c=new b.Filter("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStreamFromFilter'. Expected 1 to 2 arguments. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterReader)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");throw new TypeError("2nd input argument '"+
c+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStreamFromFilter",
{doc:this.id,data:a.id,no_own_filter_chain:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStream=function(a,c,d){"undefined"===typeof d&&(d=new b.Filter("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStream'. Expected 2 to 3 arguments. Function Signature: createIndirectStream(string, number, PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStream' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStream' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createIndirectStream' is of type '"+d.name+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");
throw new TypeError("3rd input argument '"+d+"' in function 'createIndirectStream' is of type '"+typeof d+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStream",
{doc:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDoc.prototype.getSDFDoc=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFDoc'. Expected 0 arguments. Function Signature: getSDFDoc()");return b.messageHandler.sendWithPromise("PDFDoc.getSDFDoc",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.SDFDoc(a)})};b.PDFDoc.prototype.addHighlights=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addHighlights'. Expected 1 argument. Function Signature: addHighlights(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addHighlights' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addHighlights' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addHighlights(string).");
return b.messageHandler.sendWithPromise("PDFDoc.addHighlights",{doc:this.id,hilite:a},this.userPriority)};b.PDFDoc.prototype.isTagged=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isTagged'. Expected 0 arguments. Function Signature: isTagged()");return b.messageHandler.sendWithPromise("PDFDoc.isTagged",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.hasSignatures=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'hasSignatures'. Expected 0 arguments. Function Signature: hasSignatures()");return b.messageHandler.sendWithPromise("PDFDoc.hasSignatures",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.addSignatureHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addSignatureHandler'. Expected 1 argument. Function Signature: addSignatureHandler(PDFNet.SignatureHandler)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.SignatureHandler)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addSignatureHandler' is of type '"+a.name+"'. Expected type 'SignatureHandler'. Function Signature: addSignatureHandler(PDFNet.SignatureHandler).");throw new TypeError("1st input argument '"+a+"' in function 'addSignatureHandler' is of type '"+typeof a+"'. Expected type 'SignatureHandler'. Function Signature: addSignatureHandler(PDFNet.SignatureHandler).");}return b.messageHandler.sendWithPromise("PDFDoc.addSignatureHandler",
{doc:this.id,signature_handler:a.id},this.userPriority)};b.PDFDoc.prototype.addStdSignatureHandlerFromFile=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromFile'. Expected 2 arguments. Function Signature: addStdSignatureHandlerFromFile(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addStdSignatureHandlerFromFile' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromFile(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addStdSignatureHandlerFromFile' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromFile(string, string).");return b.messageHandler.sendWithPromise("PDFDoc.addStdSignatureHandlerFromFile",{doc:this.id,pkcs12_file:a,pkcs12_pass:c},this.userPriority)};b.PDFDoc.prototype.addStdSignatureHandlerFromBuffer=function(a,c){var d=a;g.isArrayBuffer(d)||(d=d.buffer,a.byteLength<d.byteLength&&(d=d.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromBuffer'. Expected 2 arguments. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer|TypedArray, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(d)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer|TypedArray, string).");throw new TypeError("1st input argument '"+
a+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer|TypedArray, string).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer|TypedArray, string).");return b.messageHandler.sendWithPromise("PDFDoc.addStdSignatureHandlerFromBuffer",{doc:this.id,pkcs12_buffer:d,pkcs12_pass:c},this.userPriority)};b.PDFDoc.prototype.removeSignatureHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSignatureHandler'. Expected 1 argument. Function Signature: removeSignatureHandler(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removeSignatureHandler(number).");return b.messageHandler.sendWithPromise("PDFDoc.removeSignatureHandler",{doc:this.id,signature_handler_id:a},
this.userPriority)};b.PDFDoc.prototype.getSignatureHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSignatureHandler'. Expected 1 argument. Function Signature: getSignatureHandler(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getSignatureHandler(number).");return b.messageHandler.sendWithPromise("PDFDoc.getSignatureHandler",{doc:this.id,signature_handler_id:a},this.userPriority).then(function(a){return"0"===a?null:new b.SignatureHandler(a)})};b.PDFDoc.prototype.generateThumbnails=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'generateThumbnails'. Expected 1 argument. Function Signature: generateThumbnails(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'generateThumbnails' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'generateThumbnails' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: generateThumbnails(number).");return b.messageHandler.sendWithPromise("PDFDoc.generateThumbnails",{doc:this.id,size:a},this.userPriority)};b.PDFDoc.prototype.appendVisualDiff=
function(a,c,d){if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'appendVisualDiff'. Expected 2 to 3 arguments. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'appendVisualDiff' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase).");throw new TypeError("1st input argument '"+a+"' in function 'appendVisualDiff' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Page)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'appendVisualDiff' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase).");throw new TypeError("2nd input argument '"+c+"' in function 'appendVisualDiff' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(d)if("object"===typeof d)if("function"===typeof d.getJsonString)d=d.getJsonString();else throw new TypeError("3rd input argument in function 'appendVisualDiff' is an 'oject' which is expected to have the 'getJsonString' function");else throw new TypeError("3rd input argument in function 'appendVisualDiff' is of type '"+d.name+"'. Expected type 'object'. Function Signature: appendVisualDiff(PDFNet.Page, PDFNet.Page, PDFNet.OptionBase).");else d="{}";if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+
d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'appendVisualDiff'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDoc.appendVisualDiff",{doc:this.id,p1:a.id,p2:c.id,opts:d},this.userPriority)};b.PDFDoc.prototype.getGeometryCollectionForPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGeometryCollectionForPage'. Expected 1 argument. Function Signature: getGeometryCollectionForPage(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getGeometryCollectionForPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getGeometryCollectionForPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getGeometryCollectionForPage(number).");return b.messageHandler.sendWithPromise("PDFDoc.getGeometryCollectionForPage",{in_pdfdoc:this.id,
page_num:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.GeometryCollection(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getUndoManager=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUndoManager'. Expected 0 arguments. Function Signature: getUndoManager()");return b.messageHandler.sendWithPromise("PDFDoc.getUndoManager",{doc:this.id},this.userPriority).then(function(a){if("0"===a)return null;
a=new b.UndoManager(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.createDigitalSignatureField=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDigitalSignatureField'. Expected at most 1 arguments. Function Signature: createDigitalSignatureField(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDigitalSignatureField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createDigitalSignatureField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createDigitalSignatureField(string).");return b.messageHandler.sendWithPromise("PDFDoc.createDigitalSignatureField",{doc:this.id,in_sig_field_name:a},this.userPriority).then(function(a){return new b.DigitalSignatureField(a)})};b.PDFDoc.prototype.getDigitalSignatureField=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getDigitalSignatureField'. Expected 1 argument. Function Signature: getDigitalSignatureField(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getDigitalSignatureField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getDigitalSignatureField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getDigitalSignatureField(string).");
return b.messageHandler.sendWithPromise("PDFDoc.getDigitalSignatureField",{doc:this.id,field_name:a},this.userPriority).then(function(a){return new b.DigitalSignatureField(a)})};b.PDFDoc.prototype.getDigitalSignatureFieldIteratorBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDigitalSignatureFieldIteratorBegin'. Expected 0 arguments. Function Signature: getDigitalSignatureFieldIteratorBegin()");return b.messageHandler.sendWithPromise("PDFDoc.getDigitalSignatureFieldIteratorBegin",
{doc:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Iterator(a,"DigitalSignatureField");createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getDigitalSignaturePermissions=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDigitalSignaturePermissions'. Expected 0 arguments. Function Signature: getDigitalSignaturePermissions()");return b.messageHandler.sendWithPromise("PDFDoc.getDigitalSignaturePermissions",
{doc:this.id},this.userPriority)};b.PDFDoc.prototype.saveViewerOptimized=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveViewerOptimized'. Expected 2 arguments. Function Signature: saveViewerOptimized(string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveViewerOptimized' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'saveViewerOptimized' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: saveViewerOptimized(string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveViewerOptimized' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.PDFDoc.ViewerOptimizedOptions"!==c.name)throw new TypeError("2nd input argument in function 'saveViewerOptimized' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: saveViewerOptimized(string, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'saveViewerOptimized' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: saveViewerOptimized(string, PDFNet.Obj).");if("PDFNet.PDFDoc.ViewerOptimizedOptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);var e=this;return c.then(function(c){return b.messageHandler.sendWithPromise("PDFDoc.saveViewerOptimized",
{doc:e.id,path:a,opts:c.id},this.userPriority)})};b.PDFDocInfo.prototype.getTitle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("PDFDocInfo.getTitle",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getTitleObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitleObj'. Expected 0 arguments. Function Signature: getTitleObj()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getTitleObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setTitle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setTitle",{info:this.id,title:a},this.userPriority)};b.PDFDocInfo.prototype.getAuthor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthor'. Expected 0 arguments. Function Signature: getAuthor()");return b.messageHandler.sendWithPromise("PDFDocInfo.getAuthor",
{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getAuthorObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthorObj'. Expected 0 arguments. Function Signature: getAuthorObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getAuthorObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setAuthor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setAuthor'. Expected 1 argument. Function Signature: setAuthor(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAuthor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAuthor' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setAuthor(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setAuthor",
{info:this.id,author:a},this.userPriority)};b.PDFDocInfo.prototype.getSubject=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubject'. Expected 0 arguments. Function Signature: getSubject()");return b.messageHandler.sendWithPromise("PDFDocInfo.getSubject",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getSubjectObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubjectObj'. Expected 0 arguments. Function Signature: getSubjectObj()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getSubjectObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setSubject=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSubject'. Expected 1 argument. Function Signature: setSubject(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSubject' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSubject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSubject(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setSubject",{info:this.id,subject:a},this.userPriority)};b.PDFDocInfo.prototype.getKeywords=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeywords'. Expected 0 arguments. Function Signature: getKeywords()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getKeywords",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getKeywordsObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeywordsObj'. Expected 0 arguments. Function Signature: getKeywordsObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getKeywordsObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setKeywords=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setKeywords'. Expected 1 argument. Function Signature: setKeywords(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setKeywords' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setKeywords' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setKeywords(string).");
return b.messageHandler.sendWithPromise("PDFDocInfo.setKeywords",{info:this.id,keywords:a},this.userPriority)};b.PDFDocInfo.prototype.getCreator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreator'. Expected 0 arguments. Function Signature: getCreator()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreator",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getCreatorObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getCreatorObj'. Expected 0 arguments. Function Signature: getCreatorObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreatorObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setCreator=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreator'. Expected 1 argument. Function Signature: setCreator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCreator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCreator(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setCreator",{info:this.id,creator:a},this.userPriority)};b.PDFDocInfo.prototype.getProducer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getProducer'. Expected 0 arguments. Function Signature: getProducer()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getProducer",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getProducerObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getProducerObj'. Expected 0 arguments. Function Signature: getProducerObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getProducerObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setProducer=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProducer'. Expected 1 argument. Function Signature: setProducer(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProducer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setProducer' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setProducer(string).");
return b.messageHandler.sendWithPromise("PDFDocInfo.setProducer",{info:this.id,producer:a},this.userPriority)};b.PDFDocInfo.prototype.getCreationDate=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreationDate'. Expected 0 arguments. Function Signature: getCreationDate()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreationDate",{info:this.id},this.userPriority).then(function(a){return new b.Date(a)})};b.PDFDocInfo.prototype.setCreationDate=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreationDate'. Expected 1 argument. Function Signature: setCreationDate(PDFNet.Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreationDate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&a&&"Date"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setCreationDate' is of type '"+
a.name+"'. Expected type 'Date'. Function Signature: setCreationDate(PDFNet.Date).");throw new TypeError("1st input argument '"+a+"' in function 'setCreationDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setCreationDate(PDFNet.Date).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCreationDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDocInfo.setCreationDate",{info:this.id,creation_date:a},this.userPriority)};b.PDFDocInfo.prototype.getModDate=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getModDate'. Expected 0 arguments. Function Signature: getModDate()");return b.messageHandler.sendWithPromise("PDFDocInfo.getModDate",{info:this.id},this.userPriority).then(function(a){return new b.Date(a)})};b.PDFDocInfo.prototype.setModDate=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModDate'. Expected 1 argument. Function Signature: setModDate(PDFNet.Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModDate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&a&&"Date"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setModDate' is of type '"+
a.name+"'. Expected type 'Date'. Function Signature: setModDate(PDFNet.Date).");throw new TypeError("1st input argument '"+a+"' in function 'setModDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setModDate(PDFNet.Date).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setModDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDocInfo.setModDate",{info:this.id,mod_date:a},this.userPriority)};b.PDFDocInfo.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getSDFObj",{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocInfo.create=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("pdfDocInfoCreate",{tr:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocInfo(a)})};b.PDFDocInfo.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("PDFDocInfo.copy",
{info:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocInfo(a)})};b.PDFDocViewPrefs.prototype.setInitialPage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitialPage'. Expected 1 argument. Function Signature: setInitialPage(PDFNet.Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitialPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Destination)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setInitialPage' is of type '"+a.name+"'. Expected type 'Destination'. Function Signature: setInitialPage(PDFNet.Destination).");throw new TypeError("1st input argument '"+a+"' in function 'setInitialPage' is of type '"+typeof a+"'. Expected type 'Destination'. Function Signature: setInitialPage(PDFNet.Destination).");}return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setInitialPage",
{p:this.id,dest:a.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPageMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageMode'. Expected 1 argument. Function Signature: setPageMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setPageMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPageMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPageMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPageMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageMode'. Expected 0 arguments. Function Signature: getPageMode()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPageMode",
{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setLayoutMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLayoutMode'. Expected 1 argument. Function Signature: setLayoutMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLayoutMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setLayoutMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLayoutMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setLayoutMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getLayoutMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLayoutMode'. Expected 0 arguments. Function Signature: getLayoutMode()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getLayoutMode",
{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPref=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPref'. Expected 2 arguments. Function Signature: setPref(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPref' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setPref(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPref' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setPref(number, boolean).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPref",
{p:this.id,pref:a,value:c},this.userPriority)};b.PDFDocViewPrefs.prototype.getPref=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPref'. Expected 1 argument. Function Signature: getPref(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPref' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPref(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPref",{p:this.id,pref:a},this.userPriority)};b.PDFDocViewPrefs.prototype.setNonFullScreenPageMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNonFullScreenPageMode'. Expected 1 argument. Function Signature: setNonFullScreenPageMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNonFullScreenPageMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNonFullScreenPageMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNonFullScreenPageMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setNonFullScreenPageMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getNonFullScreenPageMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNonFullScreenPageMode'. Expected 0 arguments. Function Signature: getNonFullScreenPageMode()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getNonFullScreenPageMode",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setDirection=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDirection'. Expected 1 argument. Function Signature: setDirection(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDirection' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDirection' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDirection(boolean).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setDirection",{p:this.id,left_to_right:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getDirection=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDirection'. Expected 0 arguments. Function Signature: getDirection()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getDirection",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setViewArea=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setViewArea'. Expected 1 argument. Function Signature: setViewArea(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setViewArea' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setViewArea' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setViewArea(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setViewArea",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getViewArea=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewArea'. Expected 0 arguments. Function Signature: getViewArea()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getViewArea",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setViewClip=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setViewClip'. Expected 1 argument. Function Signature: setViewClip(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setViewClip' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setViewClip' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setViewClip(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setViewClip",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getViewClip=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewClip'. Expected 0 arguments. Function Signature: getViewClip()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getViewClip",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPrintArea=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintArea'. Expected 1 argument. Function Signature: setPrintArea(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintArea' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintArea' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPrintArea(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPrintArea",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPrintArea=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrintArea'. Expected 0 arguments. Function Signature: getPrintArea()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPrintArea",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPrintClip=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintClip'. Expected 1 argument. Function Signature: setPrintClip(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintClip' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintClip' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPrintClip(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPrintClip",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPrintClip=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrintClip'. Expected 0 arguments. Function Signature: getPrintClip()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPrintClip",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getSDFObj",{p:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.PDFDocViewPrefs.create=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("pdfDocViewPrefsCreate",{tr:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocViewPrefs(a)})};b.PDFDocViewPrefs.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.copy",{prefs:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.PDFDocViewPrefs(a)})};b.PDFRasterizer.create=function(a){"undefined"===typeof a&&(a=b.PDFRasterizer.Type.e_BuiltIn);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("pdfRasterizerCreate",{type:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFRasterizer(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFRasterizer.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFRasterizer.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFRasterizer.prototype.getChunkRendererPath=
function(a,c,d,e,f,g,k,l,m){if(9!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getChunkRendererPath'. Expected 9 arguments. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getChunkRendererPath' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'getChunkRendererPath' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getChunkRendererPath' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getChunkRendererPath' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+
e+"' in function 'getChunkRendererPath' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'getChunkRendererPath' is of type '"+
typeof f+"'. Expected type 'boolean'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.Matrix2D)&&g&&"Matrix2D"!==g.name){if("object"===typeof g&&g.name)throw new TypeError("6th input argument in function 'getChunkRendererPath' is of type '"+
g.name+"'. Expected type 'Matrix2D'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");throw new TypeError("6th input argument '"+g+"' in function 'getChunkRendererPath' is of type '"+typeof g+"'. Expected type 'Matrix2D'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");}if(k instanceof Promise)throw new TypeError("7th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(k instanceof b.Rect)&&k&&"Rect"!==k.name){if("object"===typeof k&&k.name)throw new TypeError("7th input argument in function 'getChunkRendererPath' is of type '"+k.name+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");throw new TypeError("7th input argument '"+k+"' in function 'getChunkRendererPath' is of type '"+typeof k+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");
}if(l instanceof Promise)throw new TypeError("8th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(l instanceof b.Rect)&&l&&"Rect"!==l.name){if("object"===typeof l&&l.name)throw new TypeError("8th input argument in function 'getChunkRendererPath' is of type '"+l.name+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");
throw new TypeError("8th input argument '"+l+"' in function 'getChunkRendererPath' is of type '"+typeof l+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");}if(m instanceof Promise)throw new TypeError("9th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof m)throw new TypeError("9th input argument '"+
m+"' in function 'getChunkRendererPath' is of type '"+typeof m+"'. Expected type 'boolean'. Function Signature: getChunkRendererPath(PDFNet.Page, string, number, number, boolean, PDFNet.Matrix2D, PDFNet.Rect, PDFNet.Rect, boolean).");if("undefined"!==typeof g.yieldFunction)throw Error("Function '"+g.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 6th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+
g.yieldFunction+"'?");if("undefined"!==typeof k.yieldFunction)throw Error("Function '"+k.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 7th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+k.yieldFunction+"'?");if("undefined"!==typeof l.yieldFunction)throw Error("Function '"+l.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 8th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+
l.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFRasterizer.getChunkRendererPath",{r:this.id,page:a.id,file_path:c,width:d,height:e,demult:f,device_mtx:g,clip:k,scrl_clp_regions:l,cancel:m},this.userPriority).then(function(a){return"0"===a?null:new b.ChunkRenderer(a)})};b.PDFRasterizer.prototype.setDrawAnnotations=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDrawAnnotations'. Expected 1 argument. Function Signature: setDrawAnnotations(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDrawAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDrawAnnotations' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDrawAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setDrawAnnotations",{r:this.id,render_annots:a},this.userPriority)};
b.PDFRasterizer.prototype.setHighlightFields=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightFields'. Expected 1 argument. Function Signature: setHighlightFields(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightFields' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightFields' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setHighlightFields(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setHighlightFields",{r:this.id,highlight:a},this.userPriority)};b.PDFRasterizer.prototype.setAntiAliasing=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAntiAliasing'. Expected 1 argument. Function Signature: setAntiAliasing(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAntiAliasing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAntiAliasing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAntiAliasing(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setAntiAliasing",{r:this.id,enable_aa:a},this.userPriority)};b.PDFRasterizer.prototype.setPathHinting=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setPathHinting",{r:this.id,enable_hinting:a},this.userPriority)};b.PDFRasterizer.prototype.setThinLineAdjustment=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThinLineAdjustment'. Expected 2 arguments. Function Signature: setThinLineAdjustment(boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThinLineAdjustment' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setThinLineAdjustment' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");
return b.messageHandler.sendWithPromise("PDFRasterizer.setThinLineAdjustment",{r:this.id,grid_fit:a,stroke_adjust:c},this.userPriority)};b.PDFRasterizer.prototype.setGamma=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setGamma'. Expected 1 argument. Function Signature: setGamma(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setGamma' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setGamma' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setGamma(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setGamma",{r:this.id,expgamma:a},this.userPriority)};b.PDFRasterizer.prototype.setOCGContext=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOCGContext'. Expected 1 argument. Function Signature: setOCGContext(PDFNet.OCGContext)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCGContext' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setOCGContext' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(PDFNet.OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'setOCGContext' is of type '"+
typeof a+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("PDFRasterizer.setOCGContext",{r:this.id,ctx:a.id},this.userPriority)};b.PDFRasterizer.prototype.setPrintMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMode'. Expected 1 argument. Function Signature: setPrintMode(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMode' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMode(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setPrintMode",{r:this.id,is_printing:a},this.userPriority)};b.PDFRasterizer.prototype.setImageSmoothing=function(a,c){"undefined"===typeof a&&(a=!0);"undefined"===typeof c&&(c=!1);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSmoothing'. Expected at most 2 arguments. Function Signature: setImageSmoothing(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSmoothing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSmoothing' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setImageSmoothing",{r:this.id,smoothing_enabled:a,hq_image_resampling:c},this.userPriority)};b.PDFRasterizer.prototype.setOverprint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprint'. Expected 1 argument. Function Signature: setOverprint(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprint(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setOverprint",{r:this.id,op:a},this.userPriority)};b.PDFRasterizer.prototype.setCaching=
function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaching'. Expected at most 1 arguments. Function Signature: setCaching(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaching' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setCaching(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setCaching",{r:this.id,enabled:a},this.userPriority)};b.PDFDraw.prototype.setOCGContext=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOCGContext'. Expected 1 argument. Function Signature: setOCGContext(PDFNet.OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCGContext' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGContext)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setOCGContext' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(PDFNet.OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'setOCGContext' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(PDFNet.OCGContext).");}return b.messageHandler.sendWithPromise("PDFDraw.setOCGContext",{r:this.id,
ctx:a.id},this.userPriority)};b.PDFRasterizer.prototype.setAnnotationState=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAnnotationState'. Expected 2 arguments. Function Signature: setAnnotationState(PDFNet.Annot, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAnnotationState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'setAnnotationState' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: setAnnotationState(PDFNet.Annot, number).");throw new TypeError("1st input argument '"+a+"' in function 'setAnnotationState' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setAnnotationState(PDFNet.Annot, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAnnotationState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setAnnotationState' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAnnotationState(PDFNet.Annot, number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setAnnotationState",{r:this.id,annot:a.id,new_view_state:c},this.userPriority)};b.PDFRasterizer.prototype.setRasterizerType=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRasterizerType'. Expected 1 argument. Function Signature: setRasterizerType(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRasterizerType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRasterizerType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRasterizerType(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setRasterizerType",{r:this.id,type:a},this.userPriority)};b.PDFRasterizer.prototype.getRasterizerType=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRasterizerType'. Expected 0 arguments. Function Signature: getRasterizerType()");return b.messageHandler.sendWithPromise("PDFRasterizer.getRasterizerType",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.setColorPostProcessMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorPostProcessMode'. Expected 1 argument. Function Signature: setColorPostProcessMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorPostProcessMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorPostProcessMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorPostProcessMode(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setColorPostProcessMode",{r:this.id,mode:a},this.userPriority)};
b.PDFRasterizer.prototype.getColorPostProcessMode=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorPostProcessMode'. Expected 0 arguments. Function Signature: getColorPostProcessMode()");return b.messageHandler.sendWithPromise("PDFRasterizer.getColorPostProcessMode",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.enableDisplayListCaching=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableDisplayListCaching'. Expected 1 argument. Function Signature: enableDisplayListCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableDisplayListCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableDisplayListCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableDisplayListCaching(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.enableDisplayListCaching",{r:this.id,enabled:a},
this.userPriority)};b.PDFRasterizer.prototype.updateBuffer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'updateBuffer'. Expected 0 arguments. Function Signature: updateBuffer()");return b.messageHandler.sendWithPromise("PDFRasterizer.updateBuffer",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.rasterizeAnnot=function(a,c,d,e,f){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rasterizeAnnot'. Expected 5 arguments. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'rasterizeAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'rasterizeAnnot' is of type '"+
typeof a+"'. Expected type 'Annot'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'rasterizeAnnot' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");
throw new TypeError("2nd input argument '"+c+"' in function 'rasterizeAnnot' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Matrix2D)&&d&&"Matrix2D"!==d.name){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'rasterizeAnnot' is of type '"+
d.name+"'. Expected type 'Matrix2D'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");throw new TypeError("3rd input argument '"+d+"' in function 'rasterizeAnnot' is of type '"+typeof d+"'. Expected type 'Matrix2D'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'rasterizeAnnot' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'rasterizeAnnot' is of type '"+
typeof f+"'. Expected type 'boolean'. Function Signature: rasterizeAnnot(PDFNet.Annot, PDFNet.Page, PDFNet.Matrix2D, boolean, boolean).");if("undefined"!==typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'rasterizeAnnot'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFRasterizer.rasterizeAnnot",
{r:this.id,annot:a.id,page:c.id,device_mtx:d,demult:e,cancel:f},this.userPriority).then(function(a){return"0"===a?null:new b.OwnedBitmap(a)})};b.PDFDraw.create=function(a){"undefined"===typeof a&&(a=92);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("pdfDrawCreate",{dpi:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.PDFDraw(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDraw.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFDraw.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFDraw.prototype.setRasterizerType=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRasterizerType'. Expected 1 argument. Function Signature: setRasterizerType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRasterizerType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRasterizerType' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setRasterizerType(number).");return b.messageHandler.sendWithPromise("PDFDraw.setRasterizerType",{d:this.id,type:a},this.userPriority)};b.PDFDraw.prototype.setDPI=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");return b.messageHandler.sendWithPromise("PDFDraw.setDPI",{d:this.id,dpi:a},this.userPriority)};b.PDFDraw.prototype.setImageSize=function(a,c,d){"undefined"===typeof d&&(d=!0);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSize'. Expected 2 to 3 arguments. Function Signature: setImageSize(number, number, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageSize(number, number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setImageSize(number, number, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setImageSize' is of type '"+typeof d+
"'. Expected type 'boolean'. Function Signature: setImageSize(number, number, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setImageSize",{d:this.id,width:a,height:c,preserve_aspect_ratio:d},this.userPriority)};b.PDFDraw.prototype.setPageBox=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageBox'. Expected 1 argument. Function Signature: setPageBox(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageBox' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPageBox(number).");return b.messageHandler.sendWithPromise("PDFDraw.setPageBox",{d:this.id,region:a},this.userPriority)};b.PDFDraw.prototype.setClipRect=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setClipRect'. Expected 1 argument. Function Signature: setClipRect(PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setClipRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setClipRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setClipRect(PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setClipRect' is of type '"+typeof a+
"'. Expected type 'Rect'. Function Signature: setClipRect(PDFNet.Rect).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setClipRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDraw.setClipRect",{d:this.id,rect:a},this.userPriority)};b.PDFDraw.prototype.setFlipYAxis=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlipYAxis'. Expected 1 argument. Function Signature: setFlipYAxis(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlipYAxis' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlipYAxis' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFlipYAxis(boolean).");
return b.messageHandler.sendWithPromise("PDFDraw.setFlipYAxis",{d:this.id,flip_y:a},this.userPriority)};b.PDFDraw.prototype.setRotate=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotate'. Expected 1 argument. Function Signature: setRotate(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setRotate' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotate(number).");return b.messageHandler.sendWithPromise("PDFDraw.setRotate",{d:this.id,angle:a},this.userPriority)};b.PDFDraw.prototype.setDrawAnnotations=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDrawAnnotations'. Expected 1 argument. Function Signature: setDrawAnnotations(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDrawAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDrawAnnotations' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDrawAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setDrawAnnotations",{d:this.id,render_annots:a},this.userPriority)};b.PDFDraw.prototype.setHighlightFields=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightFields'. Expected 1 argument. Function Signature: setHighlightFields(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightFields' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightFields' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setHighlightFields(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setHighlightFields",{d:this.id,highlight:a},this.userPriority)};
b.PDFDraw.prototype.setAntiAliasing=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAntiAliasing'. Expected 1 argument. Function Signature: setAntiAliasing(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAntiAliasing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAntiAliasing' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setAntiAliasing(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setAntiAliasing",{d:this.id,enable_aa:a},this.userPriority)};b.PDFDraw.prototype.setPathHinting=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setPathHinting",{d:this.id,enable_hinting:a},this.userPriority)};b.PDFDraw.prototype.setThinLineAdjustment=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThinLineAdjustment'. Expected 2 arguments. Function Signature: setThinLineAdjustment(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThinLineAdjustment' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setThinLineAdjustment' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setThinLineAdjustment",{d:this.id,grid_fit:a,stroke_adjust:c},this.userPriority)};b.PDFDraw.prototype.setGamma=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setGamma'. Expected 1 argument. Function Signature: setGamma(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setGamma' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setGamma' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setGamma(number).");return b.messageHandler.sendWithPromise("PDFDraw.setGamma",{d:this.id,exp:a},this.userPriority)};b.PDFDraw.prototype.setPrintMode=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMode'. Expected 1 argument. Function Signature: setPrintMode(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMode' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMode(boolean).");
return b.messageHandler.sendWithPromise("PDFDraw.setPrintMode",{d:this.id,is_printing:a},this.userPriority)};b.PDFDraw.prototype.setPageTransparent=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageTransparent'. Expected 1 argument. Function Signature: setPageTransparent(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageTransparent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageTransparent' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPageTransparent(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setPageTransparent",{d:this.id,is_transparent:a},this.userPriority)};b.PDFDraw.prototype.setDefaultPageColor=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultPageColor'. Expected 3 arguments. Function Signature: setDefaultPageColor(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultPageColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setDefaultPageColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setDefaultPageColor' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");return b.messageHandler.sendWithPromise("PDFDraw.setDefaultPageColor",{d:this.id,r:a,g:c,b:d},this.userPriority)};b.PDFDraw.prototype.setOverprint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprint'. Expected 1 argument. Function Signature: setOverprint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprint(number).");return b.messageHandler.sendWithPromise("PDFDraw.setOverprint",{d:this.id,op:a},this.userPriority)};b.PDFDraw.prototype.setImageSmoothing=function(a,c){"undefined"===typeof a&&(a=!0);"undefined"===typeof c&&(c=!1);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSmoothing'. Expected at most 2 arguments. Function Signature: setImageSmoothing(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSmoothing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSmoothing' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setImageSmoothing",{d:this.id,smoothing_enabled:a,hq_image_resampling:c},this.userPriority)};b.PDFDraw.prototype.setCaching=function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaching'. Expected at most 1 arguments. Function Signature: setCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setCaching(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setCaching",{d:this.id,enabled:a},this.userPriority)};b.PDFDraw.prototype.export=function(a,
c,d,e){"undefined"===typeof d&&(d="PNG");"undefined"===typeof e&&(e=new b.Obj("0"));if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'export'. Expected 2 to 4 arguments. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'export' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'export' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d&&null!==d)throw new TypeError("3rd input argument '"+d+"' in function 'export' is of type '"+typeof d+
"'. Expected type 'string'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(e instanceof b.Obj)){if("object"===typeof e&&e.name)throw new TypeError("4th input argument in function 'export' is of type '"+e.name+"'. Expected type 'Obj'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");
throw new TypeError("4th input argument '"+e+"' in function 'export' is of type '"+typeof e+"'. Expected type 'Obj'. Function Signature: export(PDFNet.Page, string, string, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("PDFDraw.export",{d:this.id,page:a.id,filename:c,format:d,encoder_params:e.id},this.userPriority)};b.PDFDraw.prototype.setColorPostProcessMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorPostProcessMode'. Expected 1 argument. Function Signature: setColorPostProcessMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorPostProcessMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorPostProcessMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorPostProcessMode(number).");return b.messageHandler.sendWithPromise("PDFDraw.setColorPostProcessMode",{d:this.id,mode:a},this.userPriority)};
b.enableJavaScript=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableJavaScript'. Expected 1 argument. Function Signature: enableJavaScript(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableJavaScript' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: enableJavaScript(boolean).");return b.messageHandler.sendWithPromise("pdfNetEnableJavaScript",{enable:a},this.userPriority)};b.isJavaScriptEnabled=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isJavaScriptEnabled'. Expected 0 arguments. Function Signature: isJavaScriptEnabled()");return b.messageHandler.sendWithPromise("pdfNetIsJavaScriptEnabled",{},this.userPriority)};b.addResourceSearchPath=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addResourceSearchPath'. Expected 1 argument. Function Signature: addResourceSearchPath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addResourceSearchPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addResourceSearchPath' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: addResourceSearchPath(string).");return b.messageHandler.sendWithPromise("pdfNetAddResourceSearchPath",{path:a},this.userPriority)};b.setColorManagement=function(a){"undefined"===typeof a&&(a=b.CMSType.e_lcms);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorManagement'. Expected at most 1 arguments. Function Signature: setColorManagement(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorManagement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorManagement' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorManagement(number).");return b.messageHandler.sendWithPromise("pdfNetSetColorManagement",{t:a},this.userPriority)};b.setDefaultDeviceRGBProfile=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultDeviceRGBProfile'. Expected 1 argument. Function Signature: setDefaultDeviceRGBProfile(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultDeviceRGBProfile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultDeviceRGBProfile' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDefaultDeviceRGBProfile(string).");return b.messageHandler.sendWithPromise("pdfNetSetDefaultDeviceRGBProfile",{icc_filename:a},
this.userPriority)};b.setDefaultFlateCompressionLevel=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultFlateCompressionLevel'. Expected 1 argument. Function Signature: setDefaultFlateCompressionLevel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultFlateCompressionLevel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDefaultFlateCompressionLevel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDefaultFlateCompressionLevel(number).");return b.messageHandler.sendWithPromise("pdfNetSetDefaultFlateCompressionLevel",{level:a},this.userPriority)};b.addFontSubstFromName=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addFontSubstFromName'. Expected 2 arguments. Function Signature: addFontSubstFromName(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addFontSubstFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addFontSubstFromName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addFontSubstFromName(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addFontSubstFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addFontSubstFromName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addFontSubstFromName(string, string).");return b.messageHandler.sendWithPromise("pdfNetAddFontSubstFromName",{fontname:a,fontpath:c},this.userPriority)};b.getVersion=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVersion'. Expected 0 arguments. Function Signature: getVersion()");
return b.messageHandler.sendWithPromise("pdfNetGetVersion",{},this.userPriority)};b.setLogLevel=function(a){"undefined"===typeof a&&(a=b.LogLevel.e_LogLevel_Fatal);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLogLevel'. Expected at most 1 arguments. Function Signature: setLogLevel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLogLevel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLogLevel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLogLevel(number).");return b.messageHandler.sendWithPromise("pdfNetSetLogLevel",{level:a},this.userPriority)};b.getSystemFontList=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSystemFontList'. Expected 0 arguments. Function Signature: getSystemFontList()");return b.messageHandler.sendWithPromise("pdfNetGetSystemFontList",
{},this.userPriority)};b.Rect.init=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'init'. Expected 4 arguments. Function Signature: init(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");
return b.messageHandler.sendWithPromise("rectInit",{x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){return new b.Rect(a)})};b.Rect.prototype.attach=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attach'. Expected 1 argument. Function Signature: attach(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attach' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'attach' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: attach(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'attach' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: attach(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'attach'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.attach";return b.messageHandler.sendWithPromise("Rect.attach",{rect:this,obj:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.rect,c)})};b.Rect.prototype.update=function(a){"undefined"===typeof a&&(a=new b.Obj("__null"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'update'. Expected at most 1 arguments. Function Signature: update(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'update' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'update' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: update(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'update' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: update(PDFNet.Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'update'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.update";return b.messageHandler.sendWithPromise("Rect.update",{rect:this,obj:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.rect,c);return a.result})};b.Rect.prototype.get=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 0 arguments. Function Signature: get()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'get'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.get",{rect:this},this.userPriority)};b.Rect.prototype.set=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'set'. Expected 4 arguments. Function Signature: set(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'set' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var f=this;this.yieldFunction="Rect.set";return b.messageHandler.sendWithPromise("Rect.set",
{rect:this,x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){f.yieldFunction=void 0;l(a.rect,f)})};b.Rect.prototype.width=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'width'. Expected 0 arguments. Function Signature: width()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'width'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.width",{rect:this},this.userPriority)};b.Rect.prototype.height=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'height'. Expected 0 arguments. Function Signature: height()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'height'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.height",{rect:this},this.userPriority)};b.Rect.prototype.contains=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'contains'. Expected 2 arguments. Function Signature: contains(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'contains' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'contains' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: contains(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'contains' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'contains' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: contains(number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'contains'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.contains",{rect:this,x:a,y:c},this.userPriority)};b.Rect.prototype.intersectRect=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'intersectRect'. Expected 2 arguments. Function Signature: intersectRect(PDFNet.Rect, PDFNet.Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'intersectRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&a&&"Rect"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'intersectRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: intersectRect(PDFNet.Rect, PDFNet.Rect).");throw new TypeError("1st input argument '"+a+"' in function 'intersectRect' is of type '"+
typeof a+"'. Expected type 'Rect'. Function Signature: intersectRect(PDFNet.Rect, PDFNet.Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'intersectRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'intersectRect' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: intersectRect(PDFNet.Rect, PDFNet.Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'intersectRect' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: intersectRect(PDFNet.Rect, PDFNet.Rect).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'intersectRect'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'intersectRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'intersectRect'. Perhaps a yield statement is required for '"+c.yieldFunction+
"'?");var d=this;this.yieldFunction="Rect.intersectRect";return b.messageHandler.sendWithPromise("Rect.intersectRect",{rect:this,rect1:a,rect2:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.rect,d);return a.result})};b.Rect.prototype.normalize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'normalize'. Expected 0 arguments. Function Signature: normalize()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'normalize'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Rect.normalize";return b.messageHandler.sendWithPromise("Rect.normalize",{rect:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.rect,a)})};b.Rect.prototype.inflate1=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'inflate1'. Expected 1 argument. Function Signature: inflate1(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'inflate1' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'inflate1' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: inflate1(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inflate1'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.inflate1";return b.messageHandler.sendWithPromise("Rect.inflate1",{rect:this,amount:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.rect,c)})};b.Rect.prototype.inflate2=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'inflate2'. Expected 2 arguments. Function Signature: inflate2(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'inflate2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'inflate2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: inflate2(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'inflate2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'inflate2' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: inflate2(number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inflate2'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Rect.inflate2";return b.messageHandler.sendWithPromise("Rect.inflate2",{rect:this,x:a,y:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.rect,d)})};b.Redactor.redactionCreate=function(a,c,
d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionCreate'. Expected 4 arguments. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'redactionCreate' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'redactionCreate' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string).");
throw new TypeError("2nd input argument '"+c+"' in function 'redactionCreate' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'redactionCreate' is of type '"+typeof d+
"'. Expected type 'boolean'. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'redactionCreate' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: redactionCreate(number, PDFNet.Rect, boolean, string).");
if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'redactionCreate'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Redactor.redactionCreate",{page_num:a,bbox:c,negative:d,text:e},this.userPriority).then(function(a){return"0"===a?null:new b.Redaction(a)})};b.Redactor.redactionDestroy=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionDestroy'. Expected 1 argument. Function Signature: redactionDestroy(PDFNet.Redaction)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionDestroy' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Redaction)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'redactionDestroy' is of type '"+
a.name+"'. Expected type 'Redaction'. Function Signature: redactionDestroy(PDFNet.Redaction).");throw new TypeError("1st input argument '"+a+"' in function 'redactionDestroy' is of type '"+typeof a+"'. Expected type 'Redaction'. Function Signature: redactionDestroy(PDFNet.Redaction).");}return b.messageHandler.sendWithPromise("Redactor.redactionDestroy",{redaction:a.id},this.userPriority)};b.Redactor.redactionCopy=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionCopy'. Expected 1 argument. Function Signature: redactionCopy(PDFNet.Redaction)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionCopy' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Redaction)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'redactionCopy' is of type '"+a.name+"'. Expected type 'Redaction'. Function Signature: redactionCopy(PDFNet.Redaction).");throw new TypeError("1st input argument '"+a+"' in function 'redactionCopy' is of type '"+
typeof a+"'. Expected type 'Redaction'. Function Signature: redactionCopy(PDFNet.Redaction).");}return b.messageHandler.sendWithPromise("Redactor.redactionCopy",{other:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Redaction(a)})};b.Shading.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(PDFNet.Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("shadingCreate",{shading_dict:a.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Shading.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Shading.getTypeFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("shadingGetTypeFromObj",{shading_dict:a.id},this.userPriority)};b.Shading.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Shading.getType",{s:this.id},this.userPriority)};b.Shading.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("Shading.getSDFObj",{s:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Shading.prototype.getBaseColorSpace=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColorSpace'. Expected 0 arguments. Function Signature: getBaseColorSpace()");return b.messageHandler.sendWithPromise("Shading.getBaseColorSpace",{s:this.id},this.userPriority).then(function(a){if("0"===a)return null;
a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.hasBBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasBBox'. Expected 0 arguments. Function Signature: hasBBox()");return b.messageHandler.sendWithPromise("Shading.hasBBox",{s:this.id},this.userPriority)};b.Shading.prototype.getBBox=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");
return b.messageHandler.sendWithPromise("Shading.getBBox",{s:this.id},this.userPriority).then(function(a){return new b.Rect(a)})};b.Shading.prototype.hasBackground=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasBackground'. Expected 0 arguments. Function Signature: hasBackground()");return b.messageHandler.sendWithPromise("Shading.hasBackground",{s:this.id},this.userPriority)};b.Shading.prototype.getBackground=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBackground'. Expected 0 arguments. Function Signature: getBackground()");return b.messageHandler.sendWithPromise("Shading.getBackground",{s:this.id},this.userPriority).then(function(a){a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.getAntialias=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAntialias'. Expected 0 arguments. Function Signature: getAntialias()");
return b.messageHandler.sendWithPromise("Shading.getAntialias",{s:this.id},this.userPriority)};b.Shading.prototype.getParamStart=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParamStart'. Expected 0 arguments. Function Signature: getParamStart()");return b.messageHandler.sendWithPromise("Shading.getParamStart",{s:this.id},this.userPriority)};b.Shading.prototype.getParamEnd=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getParamEnd'. Expected 0 arguments. Function Signature: getParamEnd()");return b.messageHandler.sendWithPromise("Shading.getParamEnd",{s:this.id},this.userPriority)};b.Shading.prototype.isExtendStart=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isExtendStart'. Expected 0 arguments. Function Signature: isExtendStart()");return b.messageHandler.sendWithPromise("Shading.isExtendStart",{s:this.id},this.userPriority)};
b.Shading.prototype.isExtendEnd=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isExtendEnd'. Expected 0 arguments. Function Signature: isExtendEnd()");return b.messageHandler.sendWithPromise("Shading.isExtendEnd",{s:this.id},this.userPriority)};b.Shading.prototype.getColor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 1 argument. Function Signature: getColor(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getColor(number).");var c=this;this.yieldFunction="Shading.getColor";return b.messageHandler.sendWithPromise("Shading.getColor",{s:this.id,t:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;l(a.out_color,out_color)})};b.Shading.prototype.getCoords=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCoords'. Expected 0 arguments. Function Signature: getCoords()");return b.messageHandler.sendWithPromise("Shading.getCoords",{s:this.id},this.userPriority)};b.Shading.prototype.getCoordsRadial=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCoordsRadial'. Expected 0 arguments. Function Signature: getCoordsRadial()");
return b.messageHandler.sendWithPromise("Shading.getCoordsRadial",{s:this.id},this.userPriority)};b.Shading.prototype.getDomain=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDomain'. Expected 0 arguments. Function Signature: getDomain()");return b.messageHandler.sendWithPromise("Shading.getDomain",{s:this.id},this.userPriority)};b.Shading.prototype.getMatrix=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMatrix'. Expected 0 arguments. Function Signature: getMatrix()");
return b.messageHandler.sendWithPromise("Shading.getMatrix",{s:this.id},this.userPriority).then(function(a){return new b.Matrix2D(a)})};b.Shading.prototype.getColorForFunction=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorForFunction'. Expected 2 arguments. Function Signature: getColorForFunction(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColorForFunction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColorForFunction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getColorForFunction(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getColorForFunction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getColorForFunction' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: getColorForFunction(number, number).");var d=this;this.yieldFunction="Shading.getColorForFunction";return b.messageHandler.sendWithPromise("Shading.getColorForFunction",{s:this.id,t1:a,t2:c},this.userPriority).then(function(a){d.yieldFunction=void 0;l(a.out_color,out_color)})};b.Stamper.create=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number).");
return b.messageHandler.sendWithPromise("stamperCreate",{size_type:a,a:c,b:d},this.userPriority).then(function(a){if("0"===a)return null;a=new b.Stamper(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Stamper.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Stamper.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Stamper.prototype.stampImage=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampImage'. Expected 3 arguments. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'stampImage' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");throw new TypeError("1st input argument '"+
a+"' in function 'stampImage' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Image)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'stampImage' is of type '"+c.name+"'. Expected type 'Image'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");
throw new TypeError("2nd input argument '"+c+"' in function 'stampImage' is of type '"+typeof c+"'. Expected type 'Image'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'stampImage' is of type '"+
d.name+"'. Expected type 'PageSet'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");throw new TypeError("3rd input argument '"+d+"' in function 'stampImage' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampImage(PDFNet.PDFDoc, PDFNet.Image, PDFNet.PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampImage",{stamp:this.id,dest_doc:a.id,img:c.id,dest_pages:d.id},this.userPriority)};b.Stamper.prototype.stampPage=function(a,c,d){if(3!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampPage'. Expected 3 arguments. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'stampPage' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'stampPage' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof
b.Page)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'stampPage' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");throw new TypeError("2nd input argument '"+c+"' in function 'stampPage' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.PageSet)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'stampPage' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");throw new TypeError("3rd input argument '"+d+"' in function 'stampPage' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampPage(PDFNet.PDFDoc, PDFNet.Page, PDFNet.PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampPage",
{stamp:this.id,dest_doc:a.id,page:c.id,dest_pages:d.id},this.userPriority)};b.Stamper.prototype.stampText=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampText'. Expected 3 arguments. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'stampText' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'stampText' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'stampText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'stampText' is of type '"+
d.name+"'. Expected type 'PageSet'. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet).");throw new TypeError("3rd input argument '"+d+"' in function 'stampText' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampText(PDFNet.PDFDoc, string, PDFNet.PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampText",{stamp:this.id,dest_doc:a.id,txt:c,dest_pages:d.id},this.userPriority)};b.Stamper.prototype.setFont=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setFont'. Expected 1 argument. Function Signature: setFont(PDFNet.Font)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFont' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font).");throw new TypeError("1st input argument '"+
a+"' in function 'setFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: setFont(PDFNet.Font).");}return b.messageHandler.sendWithPromise("Stamper.setFont",{stamp:this.id,font:a.id},this.userPriority)};b.Stamper.prototype.setFontColor=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFontColor'. Expected 1 argument. Function Signature: setFontColor(PDFNet.ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFontColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&a&&"ColorPt"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setFontColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setFontColor(PDFNet.ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFontColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setFontColor(PDFNet.ColorPt).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setFontColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Stamper.setFontColor",{stamp:this.id,font_color:a.id},this.userPriority)};b.Stamper.prototype.setTextAlignment=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextAlignment'. Expected 1 argument. Function Signature: setTextAlignment(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextAlignment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextAlignment(number).");return b.messageHandler.sendWithPromise("Stamper.setTextAlignment",{stamp:this.id,text_alignment:a},this.userPriority)};b.Stamper.prototype.setOpacity=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpacity'. Expected 1 argument. Function Signature: setOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOpacity(number).");
return b.messageHandler.sendWithPromise("Stamper.setOpacity",{stamp:this.id,opacity:a},this.userPriority)};b.Stamper.prototype.setRotation=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Stamper.setRotation",{stamp:this.id,rotation:a},this.userPriority)};b.Stamper.prototype.setAsBackground=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAsBackground'. Expected 1 argument. Function Signature: setAsBackground(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAsBackground' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAsBackground' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAsBackground(boolean).");return b.messageHandler.sendWithPromise("Stamper.setAsBackground",{stamp:this.id,background:a},this.userPriority)};b.Stamper.prototype.setAsAnnotation=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAsAnnotation'. Expected 1 argument. Function Signature: setAsAnnotation(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAsAnnotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAsAnnotation' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAsAnnotation(boolean).");
return b.messageHandler.sendWithPromise("Stamper.setAsAnnotation",{stamp:this.id,annotation:a},this.userPriority)};b.Stamper.prototype.showsOnScreen=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'showsOnScreen'. Expected 1 argument. Function Signature: showsOnScreen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'showsOnScreen' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'showsOnScreen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: showsOnScreen(boolean).");return b.messageHandler.sendWithPromise("Stamper.showsOnScreen",{stamp:this.id,on_screen:a},this.userPriority)};b.Stamper.prototype.showsOnPrint=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'showsOnPrint'. Expected 1 argument. Function Signature: showsOnPrint(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'showsOnPrint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'showsOnPrint' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: showsOnPrint(boolean).");return b.messageHandler.sendWithPromise("Stamper.showsOnPrint",{stamp:this.id,on_print:a},this.userPriority)};b.Stamper.prototype.setAlignment=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAlignment'. Expected 2 arguments. Function Signature: setAlignment(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAlignment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setAlignment(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setAlignment' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAlignment(number, number).");return b.messageHandler.sendWithPromise("Stamper.setAlignment",{stamp:this.id,horizontal_alignment:a,vertical_alignment:c},this.userPriority)};
b.Stamper.prototype.setPosition=function(a,c,d){"undefined"===typeof d&&(d=!1);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPosition'. Expected 2 to 3 arguments. Function Signature: setPosition(number, number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setPosition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPosition(number, number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPosition' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPosition(number, number, boolean).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setPosition' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: setPosition(number, number, boolean).");return b.messageHandler.sendWithPromise("Stamper.setPosition",{stamp:this.id,x:a,y:c,use_percentage:d},this.userPriority)};
b.Stamper.prototype.setSize=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSize'. Expected 3 arguments. Function Signature: setSize(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSize' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setSize(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setSize(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setSize' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setSize(number, number, number).");return b.messageHandler.sendWithPromise("Stamper.setSize",{stamp:this.id,size_type:a,a:c,b:d},this.userPriority)};b.Stamper.deleteStamps=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'deleteStamps'. Expected 2 arguments. Function Signature: deleteStamps(PDFNet.PDFDoc, PDFNet.PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'deleteStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'deleteStamps' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: deleteStamps(PDFNet.PDFDoc, PDFNet.PageSet).");throw new TypeError("1st input argument '"+
a+"' in function 'deleteStamps' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: deleteStamps(PDFNet.PDFDoc, PDFNet.PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'deleteStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PageSet)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'deleteStamps' is of type '"+c.name+"'. Expected type 'PageSet'. Function Signature: deleteStamps(PDFNet.PDFDoc, PDFNet.PageSet).");
throw new TypeError("2nd input argument '"+c+"' in function 'deleteStamps' is of type '"+typeof c+"'. Expected type 'PageSet'. Function Signature: deleteStamps(PDFNet.PDFDoc, PDFNet.PageSet).");}return b.messageHandler.sendWithPromise("stamperDeleteStamps",{doc:a.id,page_set:c.id},this.userPriority)};b.Stamper.hasStamps=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasStamps'. Expected 2 arguments. Function Signature: hasStamps(PDFNet.PDFDoc, PDFNet.PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'hasStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'hasStamps' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: hasStamps(PDFNet.PDFDoc, PDFNet.PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'hasStamps' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: hasStamps(PDFNet.PDFDoc, PDFNet.PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'hasStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PageSet)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'hasStamps' is of type '"+c.name+"'. Expected type 'PageSet'. Function Signature: hasStamps(PDFNet.PDFDoc, PDFNet.PageSet).");
throw new TypeError("2nd input argument '"+c+"' in function 'hasStamps' is of type '"+typeof c+"'. Expected type 'PageSet'. Function Signature: hasStamps(PDFNet.PDFDoc, PDFNet.PageSet).");}return b.messageHandler.sendWithPromise("stamperHasStamps",{doc:a.id,page_set:c.id},this.userPriority)};b.TextExtractor.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorCreate",
{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.TextExtractor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.TextExtractor.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-
1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("TextExtractor.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.TextExtractor.prototype.begin=function(a,c,d){"undefined"===typeof c&&(c=null);"undefined"===typeof d&&(d=0);if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'begin'. Expected 1 to 3 arguments. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number).");
throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&c&&"Rect"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'begin' is of type '"+c.name+
"'. Expected type 'Rect'. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number).");throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+
d+"' in function 'begin' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: begin(PDFNet.Page, PDFNet.Rect, number).");if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'begin'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextExtractor.begin",{te:this.id,page:a.id,
clip_ptr:c,flags:d},this.userPriority)};b.TextExtractor.prototype.getWordCount=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWordCount'. Expected 0 arguments. Function Signature: getWordCount()");return b.messageHandler.sendWithPromise("TextExtractor.getWordCount",{te:this.id},this.userPriority)};b.TextExtractor.prototype.setRightToLeftLanguage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRightToLeftLanguage'. Expected 1 argument. Function Signature: setRightToLeftLanguage(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRightToLeftLanguage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRightToLeftLanguage' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setRightToLeftLanguage(boolean).");return b.messageHandler.sendWithPromise("TextExtractor.setRightToLeftLanguage",{te:this.id,rtl:a},this.userPriority)};
b.TextExtractor.prototype.getRightToLeftLanguage=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRightToLeftLanguage'. Expected 0 arguments. Function Signature: getRightToLeftLanguage()");return b.messageHandler.sendWithPromise("TextExtractor.getRightToLeftLanguage",{te:this.id},this.userPriority)};b.TextExtractor.prototype.getAsText=function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getAsText'. Expected at most 1 arguments. Function Signature: getAsText(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsText' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: getAsText(boolean).");return b.messageHandler.sendWithPromise("TextExtractor.getAsText",
{te:this.id,dehyphen:a},this.userPriority)};b.TextExtractor.prototype.getTextUnderAnnot=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextUnderAnnot'. Expected 1 argument. Function Signature: getTextUnderAnnot(PDFNet.Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTextUnderAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"===
typeof a&&a.name)throw new TypeError("1st input argument in function 'getTextUnderAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: getTextUnderAnnot(PDFNet.Annot).");throw new TypeError("1st input argument '"+a+"' in function 'getTextUnderAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: getTextUnderAnnot(PDFNet.Annot).");}return b.messageHandler.sendWithPromise("TextExtractor.getTextUnderAnnot",{te:this.id,annot:a.id},this.userPriority)};b.TextExtractor.prototype.getAsXML=
function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsXML'. Expected at most 1 arguments. Function Signature: getAsXML(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsXML' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsXML' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: getAsXML(number).");return b.messageHandler.sendWithPromise("TextExtractor.getAsXML",{te:this.id,xml_output_flags:a},this.userPriority)};b.TextExtractorStyle.prototype.getFont=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 0 arguments. Function Signature: getFont()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFont'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getFont";return b.messageHandler.sendWithPromise("TextExtractorStyle.getFont",{tes:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.tes,a);return new b.Obj(c.result)})};b.TextExtractorStyle.prototype.getFontName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontName'. Expected 0 arguments. Function Signature: getFontName()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFontName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getFontName";return b.messageHandler.sendWithPromise("TextExtractorStyle.getFontName",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.getFontSize=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFontSize'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getFontSize";
return b.messageHandler.sendWithPromise("TextExtractorStyle.getFontSize",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.getWeight=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWeight'. Expected 0 arguments. Function Signature: getWeight()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getWeight'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getWeight";return b.messageHandler.sendWithPromise("TextExtractorStyle.getWeight",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.isItalic=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isItalic'. Expected 0 arguments. Function Signature: isItalic()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isItalic'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.isItalic";return b.messageHandler.sendWithPromise("TextExtractorStyle.isItalic",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.isSerif=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isSerif'. Expected 0 arguments. Function Signature: isSerif()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isSerif'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.isSerif";return b.messageHandler.sendWithPromise("TextExtractorStyle.isSerif",{tes:this},
this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.TextExtractorStyle)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.TextExtractorStyle)&&a&&"TextExtractorStyle"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'TextExtractorStyle'. Function Signature: compare(PDFNet.TextExtractorStyle).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'TextExtractorStyle'. Function Signature: compare(PDFNet.TextExtractorStyle).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextExtractorStyle.compare",
{tes:this,s:a},this.userPriority)};b.TextExtractorStyle.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorStyleCreate",{},this.userPriority).then(function(a){return new b.TextExtractorStyle(a)})};b.TextExtractorStyle.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.copy";return b.messageHandler.sendWithPromise("TextExtractorStyle.copy",{s:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.s,a);return new b.TextExtractorStyle(c.result.mp_imp)})};
b.TextExtractorWord.prototype.getNumGlyphs=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumGlyphs'. Expected 0 arguments. Function Signature: getNumGlyphs()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumGlyphs'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;
this.yieldFunction="TextExtractorWord.getNumGlyphs";return b.messageHandler.sendWithPromise("TextExtractorWord.getNumGlyphs",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tew,a);return b.result})};b.TextExtractorWord.prototype.getCharStyle=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharStyle'. Expected 1 argument. Function Signature: getCharStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCharStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getCharStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getCharStyle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCharStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="TextExtractorWord.getCharStyle";
return b.messageHandler.sendWithPromise("TextExtractorWord.getCharStyle",{tew:this,char_idx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.tew,c);return new b.TextExtractorStyle(a.result.mp_imp)})};b.TextExtractorWord.prototype.getStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getStyle";return b.messageHandler.sendWithPromise("TextExtractorWord.getStyle",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.tew,a);return new b.TextExtractorStyle(c.result.mp_imp)})};b.TextExtractorWord.prototype.getStringLen=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStringLen'. Expected 0 arguments. Function Signature: getStringLen()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStringLen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getStringLen";return b.messageHandler.sendWithPromise("TextExtractorWord.getStringLen",
{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tew,a);return b.result})};b.TextExtractorWord.prototype.getNextWord=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNextWord'. Expected 0 arguments. Function Signature: getNextWord()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNextWord'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getNextWord";return b.messageHandler.sendWithPromise("TextExtractorWord.getNextWord",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.tew,a);return new b.TextExtractorWord(c.result.line,c.result.word,c.result.end,c.result.uni,c.result.num,c.result.cur_num,c.result.mp_bld)})};b.TextExtractorWord.prototype.getCurrentNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentNum'. Expected 0 arguments. Function Signature: getCurrentNum()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCurrentNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getCurrentNum";return b.messageHandler.sendWithPromise("TextExtractorWord.getCurrentNum",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tew,a);return b.result})};
b.TextExtractorWord.prototype.compare=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.TextExtractorWord)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.TextExtractorWord)&&a&&"TextExtractorWord"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+
a.name+"'. Expected type 'TextExtractorWord'. Function Signature: compare(PDFNet.TextExtractorWord).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'TextExtractorWord'. Function Signature: compare(PDFNet.TextExtractorWord).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextExtractorWord.compare",{tew:this,word:a},this.userPriority)};b.TextExtractorWord.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorWordCreate",{},this.userPriority).then(function(a){return new b.TextExtractorWord(a)})};b.TextExtractorWord.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.isValid";return b.messageHandler.sendWithPromise("TextExtractorWord.isValid",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.tew,a);return b.result})};b.TextExtractorLine.prototype.getNumWords=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNumWords'. Expected 0 arguments. Function Signature: getNumWords()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumWords'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getNumWords";return b.messageHandler.sendWithPromise("TextExtractorLine.getNumWords",
{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.isSimpleLine=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSimpleLine'. Expected 0 arguments. Function Signature: isSimpleLine()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isSimpleLine'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.isSimpleLine";return b.messageHandler.sendWithPromise("TextExtractorLine.isSimpleLine",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.getFirstWord=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstWord'. Expected 0 arguments. Function Signature: getFirstWord()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFirstWord'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getFirstWord";return b.messageHandler.sendWithPromise("TextExtractorLine.getFirstWord",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.line,a);return new b.TextExtractorWord(c.result.line,
c.result.word,c.result.end,c.result.uni,c.result.num,c.result.cur_num,c.result.mp_bld)})};b.TextExtractorLine.prototype.getWord=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWord'. Expected 1 argument. Function Signature: getWord(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getWord' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getWord' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getWord(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getWord'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="TextExtractorLine.getWord";return b.messageHandler.sendWithPromise("TextExtractorLine.getWord",
{line:this,word_idx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;l(a.line,c);return new b.TextExtractorWord(a.result.line,a.result.word,a.result.end,a.result.uni,a.result.num,a.result.cur_num,a.result.mp_bld)})};b.TextExtractorLine.prototype.getNextLine=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNextLine'. Expected 0 arguments. Function Signature: getNextLine()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNextLine'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getNextLine";return b.messageHandler.sendWithPromise("TextExtractorLine.getNextLine",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.line,a);return new b.TextExtractorLine(c.result.line,c.result.uni,c.result.num,c.result.cur_num,
c.result.m_direction,c.result.mp_bld)})};b.TextExtractorLine.prototype.getCurrentNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentNum'. Expected 0 arguments. Function Signature: getCurrentNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCurrentNum'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getCurrentNum";return b.messageHandler.sendWithPromise("TextExtractorLine.getCurrentNum",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.getStyle=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getStyle";return b.messageHandler.sendWithPromise("TextExtractorLine.getStyle",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;l(c.line,a);return new b.TextExtractorStyle(c.result.mp_imp)})};b.TextExtractorLine.prototype.getParagraphID=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParagraphID'. Expected 0 arguments. Function Signature: getParagraphID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParagraphID'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getParagraphID";
return b.messageHandler.sendWithPromise("TextExtractorLine.getParagraphID",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.getFlowID=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlowID'. Expected 0 arguments. Function Signature: getFlowID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFlowID'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getFlowID";return b.messageHandler.sendWithPromise("TextExtractorLine.getFlowID",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.endsWithHyphen=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'endsWithHyphen'. Expected 0 arguments. Function Signature: endsWithHyphen()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'endsWithHyphen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.endsWithHyphen";return b.messageHandler.sendWithPromise("TextExtractorLine.endsWithHyphen",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractorLine.prototype.compare=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PDFNet.TextExtractorLine)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.TextExtractorLine)&&a&&"TextExtractorLine"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'compare' is of type '"+
a.name+"'. Expected type 'TextExtractorLine'. Function Signature: compare(PDFNet.TextExtractorLine).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'TextExtractorLine'. Function Signature: compare(PDFNet.TextExtractorLine).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextExtractorLine.compare",{line:this,line2:a},this.userPriority)};b.TextExtractorLine.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorLineCreate",{},this.userPriority).then(function(a){return new b.TextExtractorLine(a)})};b.TextExtractorLine.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.isValid";return b.messageHandler.sendWithPromise("TextExtractorLine.isValid",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;l(b.line,a);return b.result})};b.TextExtractor.prototype.getNumLines=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNumLines'. Expected 0 arguments. Function Signature: getNumLines()");return b.messageHandler.sendWithPromise("TextExtractor.getNumLines",{te:this.id},this.userPriority)};b.TextExtractor.prototype.getFirstLine=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstLine'. Expected 0 arguments. Function Signature: getFirstLine()");return b.messageHandler.sendWithPromise("TextExtractor.getFirstLine",{te:this.id},
this.userPriority).then(function(a){return new b.TextExtractorLine(a)})};b.TextExtractor.prototype.getQuads=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuads'. Expected 3 arguments. Function Signature: getQuads(PDFNet.Matrix2D, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Matrix2D)&&a&&"Matrix2D"!==a.name){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getQuads' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: getQuads(PDFNet.Matrix2D, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'getQuads' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: getQuads(PDFNet.Matrix2D, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getQuads' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getQuads(PDFNet.Matrix2D, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getQuads' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: getQuads(PDFNet.Matrix2D, number, number).");
if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'getQuads'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextExtractor.getQuads",{te:this.id,mtx:a,quads:c,quads_size:d},this.userPriority)};b.TextSearch.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textSearchCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.TextSearch(a);createdObjects.push({name:a.name,id:a.id});return a})};b.TextSearch.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=
-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("TextSearch.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.TextSearch.prototype.begin=function(a,
c,d,e,f){"undefined"===typeof e&&(e=-1);"undefined"===typeof f&&(f=-1);if(3>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 3 to 5 arguments. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'begin' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'begin' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'begin' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: begin(PDFNet.PDFDoc, string, number, number, number).");return b.messageHandler.sendWithPromise("TextSearch.begin",{ts:this.id,doc:a.id,pattern:c,mode:d,start_page:e,end_page:f},this.userPriority)};b.TextSearch.prototype.setPattern=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPattern'. Expected 1 argument. Function Signature: setPattern(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPattern' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPattern(string).");return b.messageHandler.sendWithPromise("TextSearch.setPattern",{ts:this.id,pattern:a},this.userPriority)};b.TextSearch.prototype.getMode=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMode'. Expected 0 arguments. Function Signature: getMode()");return b.messageHandler.sendWithPromise("TextSearch.getMode",{ts:this.id},this.userPriority)};b.TextSearch.prototype.setMode=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMode'. Expected 1 argument. Function Signature: setMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMode(number).");return b.messageHandler.sendWithPromise("TextSearch.setMode",{ts:this.id,mode:a},this.userPriority)};b.TextSearch.prototype.setRightToLeftLanguage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRightToLeftLanguage'. Expected 1 argument. Function Signature: setRightToLeftLanguage(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRightToLeftLanguage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRightToLeftLanguage' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setRightToLeftLanguage(boolean).");return b.messageHandler.sendWithPromise("TextSearch.setRightToLeftLanguage",{ts:this.id,flag:a},this.userPriority)};
b.TextSearch.prototype.getCurrentPage=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentPage'. Expected 0 arguments. Function Signature: getCurrentPage()");return b.messageHandler.sendWithPromise("TextSearch.getCurrentPage",{ts:this.id},this.userPriority)};b.NameTree.create=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFNet.SDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("nameTreeCreate",
{doc:a.id,name:c},this.userPriority).then(function(a){return"0"===a?null:new b.NameTree(a)})};b.NameTree.find=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 2 arguments. Function Signature: find(PDFNet.SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'find' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: find(PDFNet.SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: find(PDFNet.SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'find' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: find(PDFNet.SDFDoc, string).");return b.messageHandler.sendWithPromise("nameTreeFind",{doc:a.id,name:c},this.userPriority).then(function(a){return"0"===a?null:new b.NameTree(a)})};b.NameTree.createFromObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("nameTreeCreateFromObj",{name_tree:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.NameTree(a)})};b.NameTree.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("NameTree.copy",{d:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.NameTree(a)})};b.NameTree.prototype.isValid=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("NameTree.isValid",{tree:this.id},this.userPriority)};b.NameTree.prototype.getIterator=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIterator'. Expected 1 argument. Function Signature: getIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getIterator(string).");return b.messageHandler.sendWithPromise("NameTree.getIterator",{tree:this.id,key:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.NameTree.prototype.getValue=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getValue'. Expected 1 argument. Function Signature: getValue(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getValue' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getValue(string).");return b.messageHandler.sendWithPromise("NameTree.getValue",
{tree:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.NameTree.prototype.getIteratorBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIteratorBegin'. Expected 0 arguments. Function Signature: getIteratorBegin()");return b.messageHandler.sendWithPromise("NameTree.getIteratorBegin",{tree:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.NameTree.prototype.put=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: put(string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(string, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+
typeof c+"'. Expected type 'Obj'. Function Signature: put(string, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("NameTree.put",{tree:this.id,key:a,value:c.id},this.userPriority)};b.NameTree.prototype.eraseKey=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseKey'. Expected 1 argument. Function Signature: eraseKey(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseKey' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: eraseKey(string).");return b.messageHandler.sendWithPromise("NameTree.eraseKey",{tree:this.id,key:a},this.userPriority)};b.NameTree.prototype.erase=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(PDFNet.DictIterator)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DictIterator)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");
}return b.messageHandler.sendWithPromise("NameTree.erase",{tree:this.id,pos:a.id},this.userPriority)};b.NameTree.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("NameTree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.NumberTree.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("numberTreeCreate",{number_tree:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.NumberTree(a)})};b.NumberTree.prototype.copy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("NumberTree.copy",
{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.NumberTree(a)})};b.NumberTree.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("NumberTree.isValid",{tree:this.id},this.userPriority)};b.NumberTree.prototype.getIterator=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIterator'. Expected 1 argument. Function Signature: getIterator(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getIterator' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getIterator(number).");return b.messageHandler.sendWithPromise("NumberTree.getIterator",{tree:this.id,key:a},this.userPriority).then(function(a){if("0"===a)return null;
a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.NumberTree.prototype.getValue=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValue'. Expected 1 argument. Function Signature: getValue(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getValue' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getValue(number).");return b.messageHandler.sendWithPromise("NumberTree.getValue",{tree:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.NumberTree.prototype.getIteratorBegin=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIteratorBegin'. Expected 0 arguments. Function Signature: getIteratorBegin()");
return b.messageHandler.sendWithPromise("NumberTree.getIteratorBegin",{tree:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.NumberTree.prototype.put=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(number, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: put(number, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(number, PDFNet.Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: put(number, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("NumberTree.put",{tree:this.id,key:a,value:c.id},this.userPriority)};b.NumberTree.prototype.eraseKey=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseKey'. Expected 1 argument. Function Signature: eraseKey(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseKey' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseKey' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eraseKey(number).");return b.messageHandler.sendWithPromise("NumberTree.eraseKey",{tree:this.id,key:a},this.userPriority)};b.NumberTree.prototype.erase=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(PDFNet.DictIterator)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DictIterator)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");
}return b.messageHandler.sendWithPromise("NumberTree.erase",{tree:this.id,pos:a.id},this.userPriority)};b.NumberTree.prototype.getSDFObj=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("NumberTree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.getType=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Obj.getType",{o:this.id},this.userPriority)};b.Obj.prototype.getDoc=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDoc'. Expected 0 arguments. Function Signature: getDoc()");return b.messageHandler.sendWithPromise("Obj.getDoc",{o:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.SDFDoc(a)})};b.Obj.prototype.write=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'write'. Expected 1 argument. Function Signature: write(PDFNet.FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'write' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'write' is of type '"+
a.name+"'. Expected type 'FilterWriter'. Function Signature: write(PDFNet.FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'write' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: write(PDFNet.FilterWriter).");}return b.messageHandler.sendWithPromise("Obj.write",{o:this.id,stream:a.id},this.userPriority)};b.Obj.prototype.isEqual=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEqual'. Expected 1 argument. Function Signature: isEqual(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'isEqual' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'isEqual' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: isEqual(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'isEqual' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: isEqual(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("Obj.isEqual",{o:this.id,to:a.id},this.userPriority)};b.Obj.prototype.isBool=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isBool'. Expected 0 arguments. Function Signature: isBool()");return b.messageHandler.sendWithPromise("Obj.isBool",{o:this.id},this.userPriority)};b.Obj.prototype.getBool=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBool'. Expected 0 arguments. Function Signature: getBool()");
return b.messageHandler.sendWithPromise("Obj.getBool",{o:this.id},this.userPriority)};b.Obj.prototype.setBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBool'. Expected 1 argument. Function Signature: setBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setBool(boolean).");return b.messageHandler.sendWithPromise("Obj.setBool",{o:this.id,b:a},this.userPriority)};b.Obj.prototype.isNumber=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNumber'. Expected 0 arguments. Function Signature: isNumber()");return b.messageHandler.sendWithPromise("Obj.isNumber",{o:this.id},this.userPriority)};b.Obj.prototype.getNumber=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumber'. Expected 0 arguments. Function Signature: getNumber()");return b.messageHandler.sendWithPromise("Obj.getNumber",{o:this.id},this.userPriority)};b.Obj.prototype.setNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNumber'. Expected 1 argument. Function Signature: setNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNumber(number).");return b.messageHandler.sendWithPromise("Obj.setNumber",{o:this.id,n:a},this.userPriority)};b.Obj.prototype.isNull=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNull'. Expected 0 arguments. Function Signature: isNull()");return b.messageHandler.sendWithPromise("Obj.isNull",
{o:this.id},this.userPriority)};b.Obj.prototype.isString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isString'. Expected 0 arguments. Function Signature: isString()");return b.messageHandler.sendWithPromise("Obj.isString",{o:this.id},this.userPriority)};b.Obj.prototype.getBuffer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBuffer'. Expected 0 arguments. Function Signature: getBuffer()");
return b.messageHandler.sendWithPromise("Obj.getBuffer",{o:this.id},this.userPriority)};b.Obj.prototype.setString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setString'. Expected 1 argument. Function Signature: setString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setString(string).");return b.messageHandler.sendWithPromise("Obj.setString",{o:this.id,value:a},this.userPriority)};b.Obj.prototype.setUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUString'. Expected 1 argument. Function Signature: setUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setUString(string).");return b.messageHandler.sendWithPromise("Obj.setUString",{o:this.id,value:a},this.userPriority)};b.Obj.prototype.isName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isName'. Expected 0 arguments. Function Signature: isName()");return b.messageHandler.sendWithPromise("Obj.isName",
{o:this.id},this.userPriority)};b.Obj.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Obj.getName",{o:this.id},this.userPriority)};b.Obj.prototype.setName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("Obj.setName",{o:this.id,name:a},this.userPriority)};b.Obj.prototype.isIndirect=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isIndirect'. Expected 0 arguments. Function Signature: isIndirect()");return b.messageHandler.sendWithPromise("Obj.isIndirect",{o:this.id},this.userPriority)};b.Obj.prototype.getObjNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getObjNum'. Expected 0 arguments. Function Signature: getObjNum()");return b.messageHandler.sendWithPromise("Obj.getObjNum",{o:this.id},this.userPriority)};b.Obj.prototype.getGenNum=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGenNum'. Expected 0 arguments. Function Signature: getGenNum()");return b.messageHandler.sendWithPromise("Obj.getGenNum",{o:this.id},this.userPriority)};b.Obj.prototype.getOffset=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOffset'. Expected 0 arguments. Function Signature: getOffset()");return b.messageHandler.sendWithPromise("Obj.getOffset",
{o:this.id},this.userPriority)};b.Obj.prototype.isFree=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFree'. Expected 0 arguments. Function Signature: isFree()");return b.messageHandler.sendWithPromise("Obj.isFree",{o:this.id},this.userPriority)};b.Obj.prototype.setMark=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMark'. Expected 1 argument. Function Signature: setMark(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMark' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMark' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setMark(boolean).");return b.messageHandler.sendWithPromise("Obj.setMark",{o:this.id,mark:a},this.userPriority)};b.Obj.prototype.isMarked=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isMarked'. Expected 0 arguments. Function Signature: isMarked()");return b.messageHandler.sendWithPromise("Obj.isMarked",{o:this.id},this.userPriority)};b.Obj.prototype.isLoaded=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLoaded'. Expected 0 arguments. Function Signature: isLoaded()");return b.messageHandler.sendWithPromise("Obj.isLoaded",{o:this.id},this.userPriority)};b.Obj.prototype.isContainer=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isContainer'. Expected 0 arguments. Function Signature: isContainer()");return b.messageHandler.sendWithPromise("Obj.isContainer",{o:this.id},this.userPriority)};b.Obj.prototype.size=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'size'. Expected 0 arguments. Function Signature: size()");return b.messageHandler.sendWithPromise("Obj.size",{o:this.id},this.userPriority)};
b.Obj.prototype.getDictIterator=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDictIterator'. Expected 0 arguments. Function Signature: getDictIterator()");return b.messageHandler.sendWithPromise("Obj.getDictIterator",{o:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Obj.prototype.isDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isDict'. Expected 0 arguments. Function Signature: isDict()");return b.messageHandler.sendWithPromise("Obj.isDict",{o:this.id},this.userPriority)};b.Obj.prototype.find=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 1 argument. Function Signature: find(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: find(string).");return b.messageHandler.sendWithPromise("Obj.find",{o:this.id,key:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Obj.prototype.findObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findObj'. Expected 1 argument. Function Signature: findObj(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'findObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findObj' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findObj(string).");return b.messageHandler.sendWithPromise("Obj.findObj",{o:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.get=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 1 argument. Function Signature: get(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'get' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'get' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: get(string).");
return b.messageHandler.sendWithPromise("Obj.get",{o:this.id,key:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Obj.prototype.putName=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putName'. Expected 2 arguments. Function Signature: putName(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putName(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putName(string, string).");
return b.messageHandler.sendWithPromise("Obj.putName",{o:this.id,key:a,name:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putArray=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putArray'. Expected 1 argument. Function Signature: putArray(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putArray' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putArray' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putArray(string).");return b.messageHandler.sendWithPromise("Obj.putArray",{o:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putBool=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putBool'. Expected 2 arguments. Function Signature: putBool(string, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putBool' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putBool(string, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putBool' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: putBool(string, boolean).");return b.messageHandler.sendWithPromise("Obj.putBool",{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putDict=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putDict'. Expected 1 argument. Function Signature: putDict(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putDict' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putDict' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putDict(string).");return b.messageHandler.sendWithPromise("Obj.putDict",{o:this.id,key:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putNumber=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putNumber'. Expected 2 arguments. Function Signature: putNumber(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putNumber' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putNumber(string, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putNumber' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: putNumber(string, number).");return b.messageHandler.sendWithPromise("Obj.putNumber",{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"===a?null:
new b.Obj(a)})};b.Obj.prototype.putString=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putString'. Expected 2 arguments. Function Signature: putString(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putString' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: putString(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putString(string, string).");return b.messageHandler.sendWithPromise("Obj.putString",
{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putStringWithSize=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putStringWithSize'. Expected 3 arguments. Function Signature: putStringWithSize(string, string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putStringWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putStringWithSize(string, string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putStringWithSize' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: putStringWithSize(string, string, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'putStringWithSize' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: putStringWithSize(string, string, number).");return b.messageHandler.sendWithPromise("Obj.putStringWithSize",
{o:this.id,key:a,value:c,size:d},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putText=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putText'. Expected 2 arguments. Function Signature: putText(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'putText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putText(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putText(string, string).");return b.messageHandler.sendWithPromise("Obj.putText",
{o:this.id,key:a,t:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putNull=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putNull'. Expected 1 argument. Function Signature: putNull(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putNull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'putNull' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putNull(string).");return b.messageHandler.sendWithPromise("Obj.putNull",{o:this.id,key:a},this.userPriority)};b.Obj.prototype.put=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: put(string, PDFNet.Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(string, PDFNet.Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: put(string, PDFNet.Obj).");}return b.messageHandler.sendWithPromise("Obj.put",{o:this.id,key:a,input_obj:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putRect=function(a,c,d,e,f){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putRect'. Expected 5 arguments. Function Signature: putRect(string, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putRect' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putRect(string, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putRect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'putRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'putRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'putRect' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.putRect",{o:this.id,key:a,x1:c,y1:d,x2:e,y2:f},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.putMatrix=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putMatrix'. Expected 2 arguments. Function Signature: putMatrix(string, PDFNet.Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putMatrix' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putMatrix(string, PDFNet.Matrix2D).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&c&&"Matrix2D"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'putMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: putMatrix(string, PDFNet.Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'putMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: putMatrix(string, PDFNet.Matrix2D).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'putMatrix'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Obj.putMatrix",{o:this.id,key:a,mtx:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.eraseFromKey=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseFromKey'. Expected 1 argument. Function Signature: eraseFromKey(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseFromKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseFromKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: eraseFromKey(string).");return b.messageHandler.sendWithPromise("Obj.eraseFromKey",{o:this.id,key:a},this.userPriority)};b.Obj.prototype.erase=function(a){if(1!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(PDFNet.DictIterator)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DictIterator)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");
throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(PDFNet.DictIterator).");}return b.messageHandler.sendWithPromise("Obj.erase",{o:this.id,pos:a.id},this.userPriority)};b.Obj.prototype.rename=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rename'. Expected 2 arguments. Function Signature: rename(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rename' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: rename(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'rename' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: rename(string, string).");
return b.messageHandler.sendWithPromise("Obj.rename",{o:this.id,old_key:a,new_key:c},this.userPriority)};b.Obj.prototype.isArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isArray'. Expected 0 arguments. Function Signature: isArray()");return b.messageHandler.sendWithPromise("Obj.isArray",{o:this.id},this.userPriority)};b.Obj.prototype.getAt=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAt'. Expected 1 argument. Function Signature: getAt(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAt' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAt(number).");return b.messageHandler.sendWithPromise("Obj.getAt",{o:this.id,index:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertName=
function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertName'. Expected 2 arguments. Function Signature: insertName(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertName' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertName(number, string).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertName(number, string).");return b.messageHandler.sendWithPromise("Obj.insertName",{o:this.id,pos:a,name:c},this.userPriority).then(function(a){return"0"===a?
null:new b.Obj(a)})};b.Obj.prototype.insertArray=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertArray'. Expected 1 argument. Function Signature: insertArray(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertArray' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertArray' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: insertArray(number).");return b.messageHandler.sendWithPromise("Obj.insertArray",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertBool=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertBool'. Expected 2 arguments. Function Signature: insertBool(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertBool' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertBool(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertBool' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: insertBool(number, boolean).");
return b.messageHandler.sendWithPromise("Obj.insertBool",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertDict=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertDict'. Expected 1 argument. Function Signature: insertDict(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertDict' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertDict' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertDict(number).");return b.messageHandler.sendWithPromise("Obj.insertDict",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertNumber=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertNumber'. Expected 2 arguments. Function Signature: insertNumber(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertNumber(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertNumber' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insertNumber(number, number).");return b.messageHandler.sendWithPromise("Obj.insertNumber",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertString=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertString'. Expected 2 arguments. Function Signature: insertString(number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertString' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertString(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertString(number, string).");return b.messageHandler.sendWithPromise("Obj.insertString",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertStringWithSize=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertStringWithSize'. Expected 3 arguments. Function Signature: insertStringWithSize(number, string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertStringWithSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertStringWithSize(number, string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertStringWithSize' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertStringWithSize(number, string, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'insertStringWithSize' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: insertStringWithSize(number, string, number).");return b.messageHandler.sendWithPromise("Obj.insertStringWithSize",{o:this.id,pos:a,value:c,size:d},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertText=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertText'. Expected 2 arguments. Function Signature: insertText(number, string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'insertText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertText' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertText(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertText(number, string).");return b.messageHandler.sendWithPromise("Obj.insertText",{o:this.id,pos:a,t:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertNull=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertNull'. Expected 1 argument. Function Signature: insertNull(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertNull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertNull' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertNull(number).");return b.messageHandler.sendWithPromise("Obj.insertNull",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.Obj.prototype.insert=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(number, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insert(number, PDFNet.Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insert' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: insert(number, PDFNet.Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: insert(number, PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("Obj.insert",{o:this.id,pos:a,input_obj:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertRect=function(a,c,d,e,f){if(5!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertRect'. Expected 5 arguments. Function Signature: insertRect(number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertRect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertRect' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'insertRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof f)throw new TypeError("5th input argument '"+f+"' in function 'insertRect' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.insertRect",{o:this.id,pos:a,x1:c,y1:d,x2:e,y2:f},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.insertMatrix=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertMatrix'. Expected 2 arguments. Function Signature: insertMatrix(number, PDFNet.Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertMatrix' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertMatrix(number, PDFNet.Matrix2D).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&c&&"Matrix2D"!==c.name){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'insertMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: insertMatrix(number, PDFNet.Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'insertMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: insertMatrix(number, PDFNet.Matrix2D).");}if("undefined"!==typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'insertMatrix'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Obj.insertMatrix",{o:this.id,pos:a,mtx:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackName'. Expected 1 argument. Function Signature: pushBackName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackName(string).");return b.messageHandler.sendWithPromise("Obj.pushBackName",{o:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.Obj.prototype.pushBackArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackArray'. Expected 0 arguments. Function Signature: pushBackArray()");return b.messageHandler.sendWithPromise("Obj.pushBackArray",{o:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackBool'. Expected 1 argument. Function Signature: pushBackBool(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: pushBackBool(boolean).");return b.messageHandler.sendWithPromise("Obj.pushBackBool",{o:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:
new b.Obj(a)})};b.Obj.prototype.pushBackDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackDict'. Expected 0 arguments. Function Signature: pushBackDict()");return b.messageHandler.sendWithPromise("Obj.pushBackDict",{o:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackNumber'. Expected 1 argument. Function Signature: pushBackNumber(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: pushBackNumber(number).");return b.messageHandler.sendWithPromise("Obj.pushBackNumber",{o:this.id,value:a},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Obj.prototype.pushBackString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackString'. Expected 1 argument. Function Signature: pushBackString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackString' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: pushBackString(string).");return b.messageHandler.sendWithPromise("Obj.pushBackString",{o:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackStringWithSize=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackStringWithSize'. Expected 2 arguments. Function Signature: pushBackStringWithSize(string, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'pushBackStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackStringWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackStringWithSize(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pushBackStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pushBackStringWithSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: pushBackStringWithSize(string, number).");return b.messageHandler.sendWithPromise("Obj.pushBackStringWithSize",{o:this.id,value:a,size:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackText=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackText'. Expected 1 argument. Function Signature: pushBackText(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackText(string).");return b.messageHandler.sendWithPromise("Obj.pushBackText",{o:this.id,t:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.Obj.prototype.pushBackNull=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackNull'. Expected 0 arguments. Function Signature: pushBackNull()");return b.messageHandler.sendWithPromise("Obj.pushBackNull",{o:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBack=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBack'. Expected 1 argument. Function Signature: pushBack(PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'pushBack' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: pushBack(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'pushBack' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: pushBack(PDFNet.Obj).");
}return b.messageHandler.sendWithPromise("Obj.pushBack",{o:this.id,input_obj:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.pushBackRect=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackRect'. Expected 4 arguments. Function Signature: pushBackRect(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackRect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pushBackRect' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'pushBackRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(e instanceof
Promise)throw new TypeError("4th input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'pushBackRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.pushBackRect",{o:this.id,x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.Obj.prototype.pushBackMatrix=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackMatrix'. Expected 1 argument. Function Signature: pushBackMatrix(PDFNet.Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&a&&"Matrix2D"!==a.name){if("object"===typeof a&&
a.name)throw new TypeError("1st input argument in function 'pushBackMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: pushBackMatrix(PDFNet.Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'pushBackMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: pushBackMatrix(PDFNet.Matrix2D).");}if("undefined"!==typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'pushBackMatrix'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Obj.pushBackMatrix",{o:this.id,mtx:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.Obj.prototype.eraseAt=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseAt'. Expected 1 argument. Function Signature: eraseAt(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseAt' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseAt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eraseAt(number).");return b.messageHandler.sendWithPromise("Obj.eraseAt",{o:this.id,pos:a},this.userPriority)};b.Obj.prototype.isStream=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isStream'. Expected 0 arguments. Function Signature: isStream()");return b.messageHandler.sendWithPromise("Obj.isStream",
{o:this.id},this.userPriority)};b.Obj.prototype.getRawStreamLength=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRawStreamLength'. Expected 0 arguments. Function Signature: getRawStreamLength()");return b.messageHandler.sendWithPromise("Obj.getRawStreamLength",{o:this.id},this.userPriority)};b.Obj.prototype.setStreamData=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamData'. Expected 2 arguments. Function Signature: setStreamData(string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamData' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStreamData(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStreamData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setStreamData' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setStreamData(string, number).");return b.messageHandler.sendWithPromise("Obj.setStreamData",{obj:this.id,data:a,data_size:c},this.userPriority)};b.Obj.prototype.setStreamDataWithFilter=function(a,c,d){"undefined"===typeof d&&(d=new b.Filter("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamDataWithFilter'. Expected 2 to 3 arguments. Function Signature: setStreamDataWithFilter(string, number, PDFNet.Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamDataWithFilter' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStreamDataWithFilter(string, number, PDFNet.Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setStreamDataWithFilter' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setStreamDataWithFilter(string, number, PDFNet.Filter).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'setStreamDataWithFilter' is of type '"+
d.name+"'. Expected type 'Filter'. Function Signature: setStreamDataWithFilter(string, number, PDFNet.Filter).");throw new TypeError("3rd input argument '"+d+"' in function 'setStreamDataWithFilter' is of type '"+typeof d+"'. Expected type 'Filter'. Function Signature: setStreamDataWithFilter(string, number, PDFNet.Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-
1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("Obj.setStreamDataWithFilter",{obj:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority)};b.Obj.prototype.getRawStream=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRawStream'. Expected 1 argument. Function Signature: getRawStream(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRawStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRawStream' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: getRawStream(boolean).");return b.messageHandler.sendWithPromise("Obj.getRawStream",{o:this.id,decrypt:a},this.userPriority).then(function(a){return"0"===a?
null:new b.Filter(a)})};b.Obj.prototype.getDecodedStream=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodedStream'. Expected 0 arguments. Function Signature: getDecodedStream()");return b.messageHandler.sendWithPromise("Obj.getDecodedStream",{o:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Filter(a)})};b.ObjSet.create=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");
return b.messageHandler.sendWithPromise("objSetCreate",{},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ObjSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ObjSet.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,
1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ObjSet.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ObjSet.prototype.createName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createName'. Expected 1 argument. Function Signature: createName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createName(string).");return b.messageHandler.sendWithPromise("ObjSet.createName",{set:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};
b.ObjSet.prototype.createArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createArray'. Expected 0 arguments. Function Signature: createArray()");return b.messageHandler.sendWithPromise("ObjSet.createArray",{set:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ObjSet.prototype.createBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createBool'. Expected 1 argument. Function Signature: createBool(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createBool(boolean).");return b.messageHandler.sendWithPromise("ObjSet.createBool",{set:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:
new b.Obj(a)})};b.ObjSet.prototype.createDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDict'. Expected 0 arguments. Function Signature: createDict()");return b.messageHandler.sendWithPromise("ObjSet.createDict",{set:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ObjSet.prototype.createNull=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNull'. Expected 0 arguments. Function Signature: createNull()");
return b.messageHandler.sendWithPromise("ObjSet.createNull",{set:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ObjSet.prototype.createNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNumber'. Expected 1 argument. Function Signature: createNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createNumber(number).");return b.messageHandler.sendWithPromise("ObjSet.createNumber",{set:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.ObjSet.prototype.createString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createString'. Expected 1 argument. Function Signature: createString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createString(string).");return b.messageHandler.sendWithPromise("ObjSet.createString",{set:this.id,value:a},this.userPriority).then(function(a){return"0"===a?
null:new b.Obj(a)})};b.ObjSet.prototype.createFromJson=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromJson'. Expected 1 argument. Function Signature: createFromJson(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromJson' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromJson' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: createFromJson(string).");return b.messageHandler.sendWithPromise("ObjSet.createFromJson",{set:this.id,json:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.createFromFileUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFileUString'. Expected 1 argument. Function Signature: createFromFileUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFileUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromFileUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromFileUString(string).");return b.messageHandler.sendWithPromise("sdfDocCreateFromFileUString",{filepath:a},this.userPriority).then(function(a){return"0"===a?null:new b.SDFDoc(a)})};b.SDFDoc.createFromFileString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFileString'. Expected 1 argument. Function Signature: createFromFileString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFileString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromFileString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromFileString(string).");return b.messageHandler.sendWithPromise("sdfDocCreateFromFileString",{filepath:a},this.userPriority).then(function(a){return"0"===
a?null:new b.SDFDoc(a)})};b.SDFDoc.prototype.createShallowCopy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createShallowCopy'. Expected 0 arguments. Function Signature: createShallowCopy()");return b.messageHandler.sendWithPromise("SDFDoc.createShallowCopy",{source:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.SDFDoc(a)})};b.SDFDoc.prototype.releaseFileHandles=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'releaseFileHandles'. Expected 0 arguments. Function Signature: releaseFileHandles()");return b.messageHandler.sendWithPromise("SDFDoc.releaseFileHandles",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.isEncrypted=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEncrypted'. Expected 0 arguments. Function Signature: isEncrypted()");return b.messageHandler.sendWithPromise("SDFDoc.isEncrypted",{doc:this.id},
this.userPriority)};b.SDFDoc.prototype.initStdSecurityHandler=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandler'. Expected 2 arguments. Function Signature: initStdSecurityHandler(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'initStdSecurityHandler' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandler(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'initStdSecurityHandler' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: initStdSecurityHandler(string, number).");
return b.messageHandler.sendWithPromise("SDFDoc.initStdSecurityHandler",{doc:this.id,password:a,password_sz:c},this.userPriority)};b.SDFDoc.prototype.initStdSecurityHandlerUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerUString'. Expected 1 argument. Function Signature: initStdSecurityHandlerUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandlerUString(string).");return b.messageHandler.sendWithPromise("SDFDoc.initStdSecurityHandlerUString",{doc:this.id,password:a},this.userPriority)};b.SDFDoc.prototype.isModified=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");
return b.messageHandler.sendWithPromise("SDFDoc.isModified",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.hasRepairedXRef=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasRepairedXRef'. Expected 0 arguments. Function Signature: hasRepairedXRef()");return b.messageHandler.sendWithPromise("SDFDoc.hasRepairedXRef",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.isFullSaveRequired=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isFullSaveRequired'. Expected 0 arguments. Function Signature: isFullSaveRequired()");return b.messageHandler.sendWithPromise("SDFDoc.isFullSaveRequired",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.getTrailer=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("SDFDoc.getTrailer",{doc:this.id},
this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.getObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getObj'. Expected 1 argument. Function Signature: getObj(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getObj(number).");return b.messageHandler.sendWithPromise("SDFDoc.getObj",{doc:this.id,obj_num:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.importObj=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'importObj'. Expected 2 arguments. Function Signature: importObj(PDFNet.Obj, boolean)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'importObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'importObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: importObj(PDFNet.Obj, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'importObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: importObj(PDFNet.Obj, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'importObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'importObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: importObj(PDFNet.Obj, boolean).");return b.messageHandler.sendWithPromise("SDFDoc.importObj",{doc:this.id,obj:a.id,deep_copy:c},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.SDFDoc.prototype.importObjsWithExcludeList=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'importObjsWithExcludeList'. Expected 4 arguments. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'importObjsWithExcludeList' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'importObjsWithExcludeList' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");throw new TypeError("1st input argument '"+a+"' in function 'importObjsWithExcludeList' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'importObjsWithExcludeList' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'importObjsWithExcludeList' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'importObjsWithExcludeList' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'importObjsWithExcludeList' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");throw new TypeError("3rd input argument '"+d+"' in function 'importObjsWithExcludeList' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");}if(e instanceof
Promise)throw new TypeError("4th input argument in function 'importObjsWithExcludeList' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'importObjsWithExcludeList' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: importObjsWithExcludeList(PDFNet.Obj, number, PDFNet.Obj, number).");return b.messageHandler.sendWithPromise("SDFDoc.importObjsWithExcludeList",{doc:this.id,
obj_list:a,length:c,exclude_list:d,exclude_length:e},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.xRefSize=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'xRefSize'. Expected 0 arguments. Function Signature: xRefSize()");return b.messageHandler.sendWithPromise("SDFDoc.xRefSize",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.clearMarks=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'clearMarks'. Expected 0 arguments. Function Signature: clearMarks()");return b.messageHandler.sendWithPromise("SDFDoc.clearMarks",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.save=function(a,c,d,e){if(4!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'save'. Expected 4 arguments. Function Signature: save(string, number, PDFNet.ProgressMonitor, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'save' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: save(string, number, PDFNet.ProgressMonitor, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'save' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: save(string, number, PDFNet.ProgressMonitor, string).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.ProgressMonitor)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'save' is of type '"+d.name+"'. Expected type 'ProgressMonitor'. Function Signature: save(string, number, PDFNet.ProgressMonitor, string).");throw new TypeError("3rd input argument '"+d+"' in function 'save' is of type '"+
typeof d+"'. Expected type 'ProgressMonitor'. Function Signature: save(string, number, PDFNet.ProgressMonitor, string).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof e)throw new TypeError("4th input argument '"+e+"' in function 'save' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: save(string, number, PDFNet.ProgressMonitor, string).");
return b.messageHandler.sendWithPromise("SDFDoc.save",{doc:this.id,path:a,flags:c,progress:d.id,header:e},this.userPriority)};b.SDFDoc.prototype.saveStream=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveStream'. Expected 3 arguments. Function Signature: saveStream(PDFNet.Filter, number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Filter)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'saveStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: saveStream(PDFNet.Filter, number, string).");throw new TypeError("1st input argument '"+a+"' in function 'saveStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: saveStream(PDFNet.Filter, number, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: saveStream(PDFNet.Filter, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'saveStream' is of type '"+typeof d+
"'. Expected type 'string'. Function Signature: saveStream(PDFNet.Filter, number, string).");return b.messageHandler.sendWithPromise("SDFDoc.saveStream",{doc:this.id,stream:a.id,flags:c,header:d},this.userPriority)};b.SDFDoc.prototype.getHeader=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHeader'. Expected 0 arguments. Function Signature: getHeader()");return b.messageHandler.sendWithPromise("SDFDoc.getHeader",{doc:this.id},this.userPriority)};
b.SDFDoc.prototype.getSecurityHandler=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSecurityHandler'. Expected 0 arguments. Function Signature: getSecurityHandler()");return b.messageHandler.sendWithPromise("SDFDoc.getSecurityHandler",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.SecurityHandler(a)})};b.SDFDoc.prototype.setSecurityHandler=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setSecurityHandler'. Expected 1 argument. Function Signature: setSecurityHandler(PDFNet.SecurityHandler)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SecurityHandler)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'setSecurityHandler' is of type '"+a.name+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(PDFNet.SecurityHandler).");
throw new TypeError("1st input argument '"+a+"' in function 'setSecurityHandler' is of type '"+typeof a+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(PDFNet.SecurityHandler).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.setSecurityHandler",
{doc:this.id,no_own_handler:a.id},this.userPriority)};b.SDFDoc.prototype.removeSecurity=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSecurity'. Expected 0 arguments. Function Signature: removeSecurity()");return b.messageHandler.sendWithPromise("SDFDoc.removeSecurity",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.swap=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'swap'. Expected 2 arguments. Function Signature: swap(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'swap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'swap' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: swap(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'swap' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'swap' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: swap(number, number).");return b.messageHandler.sendWithPromise("SDFDoc.swap",{doc:this.id,obj_num1:a,obj_num2:c},this.userPriority)};b.SDFDoc.prototype.isLinearized=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLinearized'. Expected 0 arguments. Function Signature: isLinearized()");
return b.messageHandler.sendWithPromise("SDFDoc.isLinearized",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.getLinearizationDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLinearizationDict'. Expected 0 arguments. Function Signature: getLinearizationDict()");return b.messageHandler.sendWithPromise("SDFDoc.getLinearizationDict",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.getHintStream=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHintStream'. Expected 0 arguments. Function Signature: getHintStream()");return b.messageHandler.sendWithPromise("SDFDoc.getHintStream",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.enableDiskCaching=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableDiskCaching'. Expected 1 argument. Function Signature: enableDiskCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableDiskCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableDiskCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableDiskCaching(boolean).");return b.messageHandler.sendWithPromise("SDFDoc.enableDiskCaching",{doc:this.id,use_cache_flag:a},this.userPriority)};
b.SDFDoc.prototype.lock=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lock'. Expected 0 arguments. Function Signature: lock()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.lock",{doc:this.id},this.userPriority).then(function(){lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlock"})})};b.SDFDoc.prototype.unlock=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlock'. Expected 0 arguments. Function Signature: unlock()");
var a=this;return b.messageHandler.sendWithPromise("SDFDoc.unlock",{doc:this.id},this.userPriority).then(function(){for(var b=-1,d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.SDFDoc.prototype.lockRead=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lockRead'. Expected 0 arguments. Function Signature: lockRead()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.lockRead",{doc:this.id},this.userPriority).then(function(){lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlockRead"})})};b.SDFDoc.prototype.unlockRead=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlockRead'. Expected 0 arguments. Function Signature: unlockRead()");
var a=this;return b.messageHandler.sendWithPromise("SDFDoc.unlockRead",{doc:this.id},this.userPriority).then(function(){for(var b=-1,d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.SDFDoc.prototype.tryLock=function(){if(0!==
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLock'. Expected 0 arguments. Function Signature: tryLock()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.tryLock",{doc:this.id},this.userPriority).then(function(b){b&&lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlock"})})};b.SDFDoc.prototype.tryLockRead=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLockRead'. Expected 0 arguments. Function Signature: tryLockRead()");
var a=this;return b.messageHandler.sendWithPromise("SDFDoc.tryLockRead",{doc:this.id},this.userPriority).then(function(b){b&&lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlockRead"})})};b.SDFDoc.prototype.getFileName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileName'. Expected 0 arguments. Function Signature: getFileName()");return b.messageHandler.sendWithPromise("SDFDoc.getFileName",{doc:this.id},this.userPriority)};
b.SDFDoc.prototype.createIndirectName=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectName'. Expected 1 argument. Function Signature: createIndirectName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectName' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: createIndirectName(string).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectName",{doc:this.id,name:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectArray=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectArray'. Expected 0 arguments. Function Signature: createIndirectArray()");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectArray",
{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectBool=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectBool'. Expected 1 argument. Function Signature: createIndirectBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createIndirectBool(boolean).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectBool",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectDict=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectDict'. Expected 0 arguments. Function Signature: createIndirectDict()");
return b.messageHandler.sendWithPromise("SDFDoc.createIndirectDict",{doc:this.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectNull=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNull'. Expected 0 arguments. Function Signature: createIndirectNull()");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectNull",{doc:this.id},this.userPriority).then(function(a){return"0"===
a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNumber'. Expected 1 argument. Function Signature: createIndirectNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectNumber(number).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectNumber",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectString=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createIndirectString'. Expected 1 argument. Function Signature: createIndirectString(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createIndirectString' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createIndirectString(ArrayBuffer|TypedArray).");
throw new TypeError("1st input argument '"+a+"' in function 'createIndirectString' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: createIndirectString(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectString",{doc:this.id,buf_value:c},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStringFromUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createIndirectStringFromUString'. Expected 1 argument. Function Signature: createIndirectStringFromUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStringFromUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStringFromUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStringFromUString(string).");
return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStringFromUString",{doc:this.id,str:a},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStreamFromFilter=function(a,c){"undefined"===typeof c&&(c=new b.Filter("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStreamFromFilter'. Expected 1 to 2 arguments. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterReader)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"===typeof c&&c.name)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is of type '"+
c.name+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(PDFNet.FilterReader, PDFNet.Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,
1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStreamFromFilter",{doc:this.id,data:a.id,no_own_filter_chain:c.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStream=function(a,c,d){"undefined"===
typeof d&&(d=new b.Filter("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStream'. Expected 2 to 3 arguments. Function Signature: createIndirectStream(string, number, PDFNet.Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a&&null!==a)throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectStream' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"===typeof d&&d.name)throw new TypeError("3rd input argument in function 'createIndirectStream' is of type '"+d.name+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");throw new TypeError("3rd input argument '"+d+"' in function 'createIndirectStream' is of type '"+
typeof d+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, PDFNet.Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Deallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStream",
{doc:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SecurityHandler.prototype.clone=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clone'. Expected 0 arguments. Function Signature: clone()");return b.messageHandler.sendWithPromise("SecurityHandler.clone",{sh:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.SecurityHandler.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("SecurityHandler.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.SecurityHandler.prototype.getPermission=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPermission'. Expected 1 argument. Function Signature: getPermission(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPermission' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPermission(number).");return b.messageHandler.sendWithPromise("SecurityHandler.getPermission",{sh:this.id,p:a},this.userPriority)};b.SecurityHandler.prototype.getKeyLength=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeyLength'. Expected 0 arguments. Function Signature: getKeyLength()");
return b.messageHandler.sendWithPromise("SecurityHandler.getKeyLength",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.getEncryptionAlgorithmID=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEncryptionAlgorithmID'. Expected 0 arguments. Function Signature: getEncryptionAlgorithmID()");return b.messageHandler.sendWithPromise("SecurityHandler.getEncryptionAlgorithmID",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.getHandlerDocName=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHandlerDocName'. Expected 0 arguments. Function Signature: getHandlerDocName()");return b.messageHandler.sendWithPromise("SecurityHandler.getHandlerDocName",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isModified=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");
return b.messageHandler.sendWithPromise("SecurityHandler.isModified",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.setModified=function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModified'. Expected at most 1 arguments. Function Signature: setModified(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModified' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setModified' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setModified(boolean).");return b.messageHandler.sendWithPromise("SecurityHandler.setModified",{sh:this.id,is_modified:a},this.userPriority)};b.SecurityHandler.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("securityHandlerCreate",{crypt_type:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.SecurityHandler(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.createFromEncCode=function(a,c,d){if(3!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromEncCode'. Expected 3 arguments. Function Signature: createFromEncCode(string, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromEncCode' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromEncCode(string, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromEncCode' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createFromEncCode(string, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromEncCode' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromEncCode(string, number, number).");return b.messageHandler.sendWithPromise("securityHandlerCreateFromEncCode",
{name:a,key_len:c,enc_code:d},this.userPriority).then(function(a){if("0"===a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.createDefault=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDefault'. Expected 0 arguments. Function Signature: createDefault()");return b.messageHandler.sendWithPromise("securityHandlerCreateDefault",{},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.prototype.setPermission=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPermission'. Expected 2 arguments. Function Signature: setPermission(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPermission' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPermission(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPermission' is of type '"+typeof c+
"'. Expected type 'boolean'. Function Signature: setPermission(number, boolean).");return b.messageHandler.sendWithPromise("SecurityHandler.setPermission",{sh:this.id,perm:a,value:c},this.userPriority)};b.SecurityHandler.prototype.changeRevisionNumber=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeRevisionNumber'. Expected 1 argument. Function Signature: changeRevisionNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeRevisionNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeRevisionNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: changeRevisionNumber(number).");return b.messageHandler.sendWithPromise("SecurityHandler.changeRevisionNumber",{sh:this.id,rev_num:a},this.userPriority)};b.SecurityHandler.prototype.setEncryptMetadata=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEncryptMetadata'. Expected 1 argument. Function Signature: setEncryptMetadata(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEncryptMetadata' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEncryptMetadata' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setEncryptMetadata(boolean).");return b.messageHandler.sendWithPromise("SecurityHandler.setEncryptMetadata",{sh:this.id,encrypt_metadata:a},this.userPriority)};
b.SecurityHandler.prototype.getRevisionNumber=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRevisionNumber'. Expected 0 arguments. Function Signature: getRevisionNumber()");return b.messageHandler.sendWithPromise("SecurityHandler.getRevisionNumber",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isUserPasswordRequired=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isUserPasswordRequired'. Expected 0 arguments. Function Signature: isUserPasswordRequired()");
return b.messageHandler.sendWithPromise("SecurityHandler.isUserPasswordRequired",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isMasterPasswordRequired=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isMasterPasswordRequired'. Expected 0 arguments. Function Signature: isMasterPasswordRequired()");return b.messageHandler.sendWithPromise("SecurityHandler.isMasterPasswordRequired",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isAES=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAES'. Expected 0 arguments. Function Signature: isAES()");return b.messageHandler.sendWithPromise("SecurityHandler.isAES",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isAESObj=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAESObj'. Expected 1 argument. Function Signature: isAESObj(PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isAESObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'isAESObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: isAESObj(PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'isAESObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: isAESObj(PDFNet.Obj).");}return b.messageHandler.sendWithPromise("SecurityHandler.isAESObj",{sh:this.id,stream:a.id},this.userPriority)};b.SecurityHandler.prototype.isRC4=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isRC4'. Expected 0 arguments. Function Signature: isRC4()");return b.messageHandler.sendWithPromise("SecurityHandler.isRC4",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.changeUserPasswordUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordUString'. Expected 1 argument. Function Signature: changeUserPasswordUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeUserPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeUserPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordUString",{sh:this.id,
password:a},this.userPriority)};b.SecurityHandler.prototype.changeUserPasswordBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordBuffer'. Expected 1 argument. Function Signature: changeUserPasswordBuffer(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeUserPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'changeUserPasswordBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: changeUserPasswordBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: changeUserPasswordBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordBuffer",
{sh:this.id,password_buf:c},this.userPriority)};b.SecurityHandler.prototype.changeMasterPasswordUString=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeMasterPasswordUString'. Expected 1 argument. Function Signature: changeMasterPasswordUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeMasterPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeMasterPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordUString",{sh:this.id,password:a},this.userPriority)};b.SecurityHandler.prototype.changeMasterPasswordBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,
a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeMasterPasswordBuffer'. Expected 1 argument. Function Signature: changeMasterPasswordBuffer(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeMasterPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'changeMasterPasswordBuffer' is of type '"+
a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: changeMasterPasswordBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: changeMasterPasswordBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordBuffer",{sh:this.id,password_buf:c},this.userPriority)};b.SecurityHandler.prototype.initPasswordUString=
function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordUString'. Expected 1 argument. Function Signature: initPasswordUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initPasswordUString' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: initPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.initPasswordUString",{sh:this.id,password:a},this.userPriority)};b.SecurityHandler.prototype.initPasswordBuffer=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordBuffer'. Expected 1 argument. Function Signature: initPasswordBuffer(ArrayBuffer|TypedArray)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'initPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'initPasswordBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: initPasswordBuffer(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'initPasswordBuffer' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: initPasswordBuffer(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("SecurityHandler.initPasswordBuffer",{sh:this.id,password_buf:c},this.userPriority)};b.SecurityHandler.prototype.authorize=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'authorize'. Expected 1 argument. Function Signature: authorize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'authorize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'authorize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: authorize(number).");return b.messageHandler.sendWithPromise("SecurityHandler.authorize",{sh:this.id,p:a},this.userPriority)};b.SecurityHandler.prototype.authorizeFailed=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'authorizeFailed'. Expected 0 arguments. Function Signature: authorizeFailed()");
return b.messageHandler.sendWithPromise("SecurityHandler.authorizeFailed",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.getAuthorizationData=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthorizationData'. Expected 1 argument. Function Signature: getAuthorizationData(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAuthorizationData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAuthorizationData' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAuthorizationData(number).");return b.messageHandler.sendWithPromise("SecurityHandler.getAuthorizationData",{sh:this.id,req_opr:a},this.userPriority)};b.SecurityHandler.prototype.editSecurityData=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'editSecurityData'. Expected 1 argument. Function Signature: editSecurityData(PDFNet.SDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'editSecurityData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'editSecurityData' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: editSecurityData(PDFNet.SDFDoc).");throw new TypeError("1st input argument '"+
a+"' in function 'editSecurityData' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: editSecurityData(PDFNet.SDFDoc).");}return b.messageHandler.sendWithPromise("SecurityHandler.editSecurityData",{sh:this.id,doc:a.id},this.userPriority)};b.SecurityHandler.prototype.fillEncryptDict=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fillEncryptDict'. Expected 1 argument. Function Signature: fillEncryptDict(PDFNet.SDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fillEncryptDict' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'fillEncryptDict' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: fillEncryptDict(PDFNet.SDFDoc).");throw new TypeError("1st input argument '"+a+
"' in function 'fillEncryptDict' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: fillEncryptDict(PDFNet.SDFDoc).");}return b.messageHandler.sendWithPromise("SecurityHandler.fillEncryptDict",{sh:this.id,doc:a.id},this.userPriority).then(function(a){return"0"===a?null:new b.Obj(a)})};b.SignatureHandler.prototype.getName=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");
return b.messageHandler.sendWithPromise("SignatureHandler.getName",{signature_handler:this.id},this.userPriority)};b.SignatureHandler.prototype.reset=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'reset'. Expected 0 arguments. Function Signature: reset()");return b.messageHandler.sendWithPromise("SignatureHandler.reset",{signature_handler:this.id},this.userPriority)};b.SignatureHandler.prototype.destructor=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destructor'. Expected 0 arguments. Function Signature: destructor()");return b.messageHandler.sendWithPromise("SignatureHandler.destructor",{signature_handler:this.id},this.userPriority)};b.UndoManager.prototype.discardAllSnapshots=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'discardAllSnapshots'. Expected 0 arguments. Function Signature: discardAllSnapshots()");return b.messageHandler.sendWithPromise("UndoManager.discardAllSnapshots",
{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DocSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.undo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'undo'. Expected 0 arguments. Function Signature: undo()");return b.messageHandler.sendWithPromise("UndoManager.undo",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ResultSnapshot(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.canUndo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'canUndo'. Expected 0 arguments. Function Signature: canUndo()");return b.messageHandler.sendWithPromise("UndoManager.canUndo",{self:this.id},this.userPriority)};b.UndoManager.prototype.getNextUndoSnapshot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNextUndoSnapshot'. Expected 0 arguments. Function Signature: getNextUndoSnapshot()");
return b.messageHandler.sendWithPromise("UndoManager.getNextUndoSnapshot",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DocSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.redo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redo'. Expected 0 arguments. Function Signature: redo()");return b.messageHandler.sendWithPromise("UndoManager.redo",{self:this.id},this.userPriority).then(function(a){if("0"===
a)return null;a=new b.ResultSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.canRedo=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'canRedo'. Expected 0 arguments. Function Signature: canRedo()");return b.messageHandler.sendWithPromise("UndoManager.canRedo",{self:this.id},this.userPriority)};b.UndoManager.prototype.getNextRedoSnapshot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNextRedoSnapshot'. Expected 0 arguments. Function Signature: getNextRedoSnapshot()");return b.messageHandler.sendWithPromise("UndoManager.getNextRedoSnapshot",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DocSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.takeSnapshot=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'takeSnapshot'. Expected 0 arguments. Function Signature: takeSnapshot()");
return b.messageHandler.sendWithPromise("UndoManager.takeSnapshot",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.ResultSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.UndoManager.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=
c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("UndoManager.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ResultSnapshot.prototype.currentState=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'currentState'. Expected 0 arguments. Function Signature: currentState()");return b.messageHandler.sendWithPromise("ResultSnapshot.currentState",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DocSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ResultSnapshot.prototype.previousState=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'previousState'. Expected 0 arguments. Function Signature: previousState()");
return b.messageHandler.sendWithPromise("ResultSnapshot.previousState",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.DocSnapshot(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ResultSnapshot.prototype.isOk=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOk'. Expected 0 arguments. Function Signature: isOk()");return b.messageHandler.sendWithPromise("ResultSnapshot.isOk",{self:this.id},this.userPriority)};
b.ResultSnapshot.prototype.isNullTransition=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNullTransition'. Expected 0 arguments. Function Signature: isNullTransition()");return b.messageHandler.sendWithPromise("ResultSnapshot.isNullTransition",{self:this.id},this.userPriority)};b.ResultSnapshot.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ResultSnapshot.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.DocSnapshot.prototype.getHash=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHash'. Expected 0 arguments. Function Signature: getHash()");return b.messageHandler.sendWithPromise("DocSnapshot.getHash",{self:this.id},this.userPriority)};b.DocSnapshot.prototype.isValid=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("DocSnapshot.isValid",
{self:this.id},this.userPriority)};b.DocSnapshot.prototype.equals=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'equals'. Expected 1 argument. Function Signature: equals(PDFNet.DocSnapshot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'equals' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DocSnapshot)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'equals' is of type '"+
a.name+"'. Expected type 'DocSnapshot'. Function Signature: equals(PDFNet.DocSnapshot).");throw new TypeError("1st input argument '"+a+"' in function 'equals' is of type '"+typeof a+"'. Expected type 'DocSnapshot'. Function Signature: equals(PDFNet.DocSnapshot).");}return b.messageHandler.sendWithPromise("DocSnapshot.equals",{self:this.id,snapshot:a.id},this.userPriority)};b.DocSnapshot.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("DocSnapshot.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.CADModule.isModuleAvailable=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModuleAvailable'. Expected 0 arguments. Function Signature: isModuleAvailable()");return b.messageHandler.sendWithPromise("cadModuleIsModuleAvailable",{},this.userPriority)};b.OCRModule.isModuleAvailable=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModuleAvailable'. Expected 0 arguments. Function Signature: isModuleAvailable()");
return b.messageHandler.sendWithPromise("ocrModuleIsModuleAvailable",{},this.userPriority)};b.OCRModule.imageToPDF=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'imageToPDF'. Expected 2 to 3 arguments. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'imageToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'imageToPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'imageToPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'imageToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'imageToPDF' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'imageToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.OCRModule.OCROptions"!==d.name)throw new TypeError("3rd input argument in function 'imageToPDF' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'imageToPDF' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: imageToPDF(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.OCRModule.OCROptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("ocrModuleImageToPDF",
{dst:a.id,src:c,options:d.id},this.userPriority)})};b.OCRModule.processPDF=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'processPDF'. Expected 1 to 2 arguments. Function Signature: processPDF(PDFNet.PDFDoc, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'processPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'processPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: processPDF(PDFNet.PDFDoc, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'processPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: processPDF(PDFNet.PDFDoc, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'processPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.OCRModule.OCROptions"!==c.name)throw new TypeError("2nd input argument in function 'processPDF' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: processPDF(PDFNet.PDFDoc, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'processPDF' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: processPDF(PDFNet.PDFDoc, PDFNet.Obj).");if("PDFNet.OCRModule.OCROptions"===c.name){var d=
c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("ocrModuleProcessPDF",{dst:a.id,options:c.id},this.userPriority)})};b.OCRModule.getOCRJsonFromImage=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCRJsonFromImage'. Expected 2 to 3 arguments. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOCRJsonFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getOCRJsonFromImage' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'getOCRJsonFromImage' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getOCRJsonFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getOCRJsonFromImage' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getOCRJsonFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.OCRModule.OCROptions"!==d.name)throw new TypeError("3rd input argument in function 'getOCRJsonFromImage' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+
d+"' in function 'getOCRJsonFromImage' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: getOCRJsonFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");if("PDFNet.OCRModule.OCROptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("ocrModuleGetOCRJsonFromImage",{dst:a.id,src:c,options:d.id},this.userPriority)})};b.OCRModule.getOCRJsonFromPDF=
function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCRJsonFromPDF'. Expected 1 to 2 arguments. Function Signature: getOCRJsonFromPDF(PDFNet.PDFDoc, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOCRJsonFromPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getOCRJsonFromPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: getOCRJsonFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getOCRJsonFromPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: getOCRJsonFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getOCRJsonFromPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.OCRModule.OCROptions"!==c.name)throw new TypeError("2nd input argument in function 'getOCRJsonFromPDF' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: getOCRJsonFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'getOCRJsonFromPDF' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: getOCRJsonFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");if("PDFNet.OCRModule.OCROptions"===
c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("ocrModuleGetOCRJsonFromPDF",{src:a.id,options:c.id},this.userPriority)})};b.OCRModule.applyOCRJsonToPDF=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'applyOCRJsonToPDF'. Expected 2 arguments. Function Signature: applyOCRJsonToPDF(PDFNet.PDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'applyOCRJsonToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'applyOCRJsonToPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: applyOCRJsonToPDF(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+
a+"' in function 'applyOCRJsonToPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: applyOCRJsonToPDF(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'applyOCRJsonToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'applyOCRJsonToPDF' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: applyOCRJsonToPDF(PDFNet.PDFDoc, string).");
return b.messageHandler.sendWithPromise("ocrModuleApplyOCRJsonToPDF",{dst:a.id,json:c},this.userPriority)};b.OCRModule.getOCRXmlFromImage=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCRXmlFromImage'. Expected 2 to 3 arguments. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOCRXmlFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getOCRXmlFromImage' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getOCRXmlFromImage' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getOCRXmlFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getOCRXmlFromImage' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getOCRXmlFromImage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj))if("object"===typeof d&&d.name){if("PDFNet.OCRModule.OCROptions"!==d.name)throw new TypeError("3rd input argument in function 'getOCRXmlFromImage' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");}else throw new TypeError("3rd input argument '"+d+"' in function 'getOCRXmlFromImage' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: getOCRXmlFromImage(PDFNet.PDFDoc, string, PDFNet.Obj).");
if("PDFNet.OCRModule.OCROptions"===d.name){var e=d;d=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(e))})}else d=Promise.resolve(d);return d.then(function(d){return b.messageHandler.sendWithPromise("ocrModuleGetOCRXmlFromImage",{dst:a.id,src:c,options:d.id},this.userPriority)})};b.OCRModule.getOCRXmlFromPDF=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCRXmlFromPDF'. Expected 1 to 2 arguments. Function Signature: getOCRXmlFromPDF(PDFNet.PDFDoc, PDFNet.Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOCRXmlFromPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'getOCRXmlFromPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: getOCRXmlFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'getOCRXmlFromPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: getOCRXmlFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getOCRXmlFromPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj))if("object"===typeof c&&c.name){if("PDFNet.OCRModule.OCROptions"!==c.name)throw new TypeError("2nd input argument in function 'getOCRXmlFromPDF' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: getOCRXmlFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");}else throw new TypeError("2nd input argument '"+c+"' in function 'getOCRXmlFromPDF' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: getOCRXmlFromPDF(PDFNet.PDFDoc, PDFNet.Obj).");if("PDFNet.OCRModule.OCROptions"===c.name){var d=c;c=b.ObjSet.create().then(function(a){return a.createFromJson(JSON.stringify(d))})}else c=Promise.resolve(c);return c.then(function(c){return b.messageHandler.sendWithPromise("ocrModuleGetOCRXmlFromPDF",
{src:a.id,options:c.id},this.userPriority)})};b.OCRModule.applyOCRXmlToPDF=function(a,c){if(2!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'applyOCRXmlToPDF'. Expected 2 arguments. Function Signature: applyOCRXmlToPDF(PDFNet.PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'applyOCRXmlToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'applyOCRXmlToPDF' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: applyOCRXmlToPDF(PDFNet.PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'applyOCRXmlToPDF' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: applyOCRXmlToPDF(PDFNet.PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'applyOCRXmlToPDF' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!==typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'applyOCRXmlToPDF' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: applyOCRXmlToPDF(PDFNet.PDFDoc, string).");return b.messageHandler.sendWithPromise("ocrModuleApplyOCRXmlToPDF",{dst:a.id,xml:c},this.userPriority)};b.VerificationOptions.create=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("verificationOptionsCreate",{in_level:a},this.userPriority).then(function(a){if("0"===a)return null;a=new b.VerificationOptions(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.VerificationOptions.prototype.addTrustedCertificate=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addTrustedCertificate'. Expected 1 argument. Function Signature: addTrustedCertificate(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addTrustedCertificate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'addTrustedCertificate' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: addTrustedCertificate(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'addTrustedCertificate' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: addTrustedCertificate(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("VerificationOptions.addTrustedCertificate",
{self:this.id,in_binary_DER_certificate_buf:c},this.userPriority)};b.VerificationOptions.prototype.removeTrustedCertificate=function(a){var c=a;g.isArrayBuffer(c)||(c=c.buffer,a.byteLength<c.byteLength&&(c=c.slice(a.byteOffset,a.byteOffset+a.byteLength)));if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeTrustedCertificate'. Expected 1 argument. Function Signature: removeTrustedCertificate(ArrayBuffer|TypedArray)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeTrustedCertificate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(c)){if("object"===typeof a&&a.name)throw new TypeError("1st input argument in function 'removeTrustedCertificate' is of type '"+a.name+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: removeTrustedCertificate(ArrayBuffer|TypedArray).");throw new TypeError("1st input argument '"+a+"' in function 'removeTrustedCertificate' is of type '"+typeof a+"'. Expected type 'ArrayBuffer|TypedArray'. Function Signature: removeTrustedCertificate(ArrayBuffer|TypedArray).");}return b.messageHandler.sendWithPromise("VerificationOptions.removeTrustedCertificate",
{self:this.id,in_binary_DER_certificate_buf:c},this.userPriority)};b.VerificationOptions.prototype.enableModificationVerification=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableModificationVerification'. Expected 1 argument. Function Signature: enableModificationVerification(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableModificationVerification' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableModificationVerification' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableModificationVerification(boolean).");return b.messageHandler.sendWithPromise("VerificationOptions.enableModificationVerification",{self:this.id,in_on_or_off:a},this.userPriority)};b.VerificationOptions.prototype.enableDigestVerification=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'enableDigestVerification'. Expected 1 argument. Function Signature: enableDigestVerification(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableDigestVerification' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableDigestVerification' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableDigestVerification(boolean).");
return b.messageHandler.sendWithPromise("VerificationOptions.enableDigestVerification",{self:this.id,in_on_or_off:a},this.userPriority)};b.VerificationOptions.prototype.enableTrustVerification=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableTrustVerification'. Expected 1 argument. Function Signature: enableTrustVerification(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableTrustVerification' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!==typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableTrustVerification' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableTrustVerification(boolean).");return b.messageHandler.sendWithPromise("VerificationOptions.enableTrustVerification",{self:this.id,in_on_or_off:a},this.userPriority)};b.VerificationOptions.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("VerificationOptions.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.VerificationResult.prototype.getDigitalSignatureField=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDigitalSignatureField'. Expected 0 arguments. Function Signature: getDigitalSignatureField()");return b.messageHandler.sendWithPromise("VerificationResult.getDigitalSignatureField",{self:this.id},this.userPriority).then(function(a){return new b.DigitalSignatureField(a)})};b.VerificationResult.prototype.getVerificationStatus=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getVerificationStatus'. Expected 0 arguments. Function Signature: getVerificationStatus()");return b.messageHandler.sendWithPromise("VerificationResult.getVerificationStatus",{self:this.id},this.userPriority)};b.VerificationResult.prototype.getDocumentStatus=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDocumentStatus'. Expected 0 arguments. Function Signature: getDocumentStatus()");return b.messageHandler.sendWithPromise("VerificationResult.getDocumentStatus",
{self:this.id},this.userPriority)};b.VerificationResult.prototype.getDigestStatus=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDigestStatus'. Expected 0 arguments. Function Signature: getDigestStatus()");return b.messageHandler.sendWithPromise("VerificationResult.getDigestStatus",{self:this.id},this.userPriority)};b.VerificationResult.prototype.getTrustStatus=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrustStatus'. Expected 0 arguments. Function Signature: getTrustStatus()");
return b.messageHandler.sendWithPromise("VerificationResult.getTrustStatus",{self:this.id},this.userPriority)};b.VerificationResult.prototype.getPermissionsStatus=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPermissionsStatus'. Expected 0 arguments. Function Signature: getPermissionsStatus()");return b.messageHandler.sendWithPromise("VerificationResult.getPermissionsStatus",{self:this.id},this.userPriority)};b.VerificationResult.prototype.getTrustVerificationResult=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrustVerificationResult'. Expected 0 arguments. Function Signature: getTrustVerificationResult()");return b.messageHandler.sendWithPromise("VerificationResult.getTrustVerificationResult",{self:this.id},this.userPriority).then(function(a){if("0"===a)return null;a=new b.TrustVerificationResult(a);createdObjects.push({name:a.name,id:a.id});return a})};b.VerificationResult.prototype.hasTrustVerificationResult=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTrustVerificationResult'. Expected 0 arguments. Function Signature: hasTrustVerificationResult()");return b.messageHandler.sendWithPromise("VerificationResult.hasTrustVerificationResult",{self:this.id},this.userPriority)};b.VerificationResult.prototype.getDisallowedChanges=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDisallowedChanges'. Expected 0 arguments. Function Signature: getDisallowedChanges()");
return b.messageHandler.sendWithPromise("VerificationResult.getDisallowedChanges",{self:this.id},this.userPriority).then(function(a){for(var c=[],d=0;d<a.length;++d){var e=a[d];if("0"===e)return null;e=new b.DisallowedChange(e);c.push(e);createdObjects.push({name:e.name,id:e.id})}return c})};b.VerificationResult.prototype.getSignersDigestAlgorithm=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSignersDigestAlgorithm'. Expected 0 arguments. Function Signature: getSignersDigestAlgorithm()");
return b.messageHandler.sendWithPromise("VerificationResult.getSignersDigestAlgorithm",{self:this.id},this.userPriority)};b.VerificationResult.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<
deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("VerificationResult.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.TrustVerificationResult.prototype.wasSuccessful=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'wasSuccessful'. Expected 0 arguments. Function Signature: wasSuccessful()");
return b.messageHandler.sendWithPromise("TrustVerificationResult.wasSuccessful",{self:this.id},this.userPriority)};b.TrustVerificationResult.prototype.getResultString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getResultString'. Expected 0 arguments. Function Signature: getResultString()");return b.messageHandler.sendWithPromise("TrustVerificationResult.getResultString",{self:this.id},this.userPriority)};b.TrustVerificationResult.prototype.getTimeOfTrustVerification=
function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTimeOfTrustVerification'. Expected 0 arguments. Function Signature: getTimeOfTrustVerification()");return b.messageHandler.sendWithPromise("TrustVerificationResult.getTimeOfTrustVerification",{self:this.id},this.userPriority)};b.TrustVerificationResult.prototype.getTimeOfTrustVerificationEnum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTimeOfTrustVerificationEnum'. Expected 0 arguments. Function Signature: getTimeOfTrustVerificationEnum()");
return b.messageHandler.sendWithPromise("TrustVerificationResult.getTimeOfTrustVerificationEnum",{self:this.id},this.userPriority)};b.TrustVerificationResult.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-
1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("TrustVerificationResult.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.DisallowedChange.prototype.getObjNum=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getObjNum'. Expected 0 arguments. Function Signature: getObjNum()");
return b.messageHandler.sendWithPromise("DisallowedChange.getObjNum",{self:this.id},this.userPriority)};b.DisallowedChange.prototype.getType=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("DisallowedChange.getType",{self:this.id},this.userPriority)};b.DisallowedChange.prototype.getTypeAsString=function(){if(0!==arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTypeAsString'. Expected 0 arguments. Function Signature: getTypeAsString()");return b.messageHandler.sendWithPromise("DisallowedChange.getTypeAsString",{self:this.id},this.userPriority)};b.DisallowedChange.prototype.destroy=function(){if(0!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==
this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("DisallowedChange.destroy",{auto_dealloc_obj:this.id},this.userPriority)};var m=function(a,b){b=b||{};var c=new XMLHttpRequest;return new Promise(function(d,f){c.open("GET",
a,!0);c.responseType="arraybuffer";b.withCredentials&&(c.withCredentials=b.withCredentials);c.onerror=function(){f(Error("Network error occurred"))};c.onload=function(a){200==this.status?(a=new Uint8Array(c.response),d(a)):f(Error("Download Failed"))};var e=b.customHeaders;if(e)for(var g in e)c.setRequestHeader(g,e[g]);c.send()},function(){c.abort()})};createdObjects=[];lockedObjects=[];stackCallCounter=beginOperationCounter=0;deallocStackCounter=[];unlockStackCounter=[];var n,p=!1;g.PDFTron&&PDFTron.WebViewer&&
PDFTron.WebViewer.prototype&&PDFTron.WebViewer.prototype.version&&!PDFTron.skipPDFNetWebViewerWarning&&console.warn("PDFNet.js and WebViewer.js have been included in the same context. See pdftron.com/kb_same_context for an explanation of why this could be an error in your application.");b.messageHandler={sendWithPromise:function(){throw Error("PDFNet.initialize must be called and finish resolving before any other PDFNetJS function calls.");}};b.initialize=function(a,c){if(!n){var d={pnaclCrashError:function(a,
b){console.log("PNaClCrashError: "+a+", "+b)},pnaclLoadError:function(a,b){console.log("PNaClLoadError: "+a+", "+b)},emsWorkerError:function(a,b){console.log("EmsWorkerError: "+a+", "+b)}};n=createPromiseCapability();var e=function(c){g.CoreControls.preloadPDFWorker(c,d,{autoSwap:!1});g.CoreControls.initPDFWorkerTransports(c,d,a).then(function(a){b.messageHandler=a;n.resolve()},function(a){n.reject(a)})};"undefined"!==typeof readerControl&&"undefined"!==typeof readerControl.pdfType&&(c=readerControl.pdfType);
c&&"auto"!==c?e(c):g.CoreControls.getDefaultBackendType().then(e,function(a){n.reject(a)})}p&&(b.messageHandler.messageHandler.comObj.addEventListener("message",b.messageHandler.messageHandler.handleMessage.bind(b.messageHandler.messageHandler)),p=!1);return n.promise};b.userPriority=2;var l=function(a,b){for(var c in a)b[c]=a[c]};b.runGeneratorWithoutCleanup=function(a,c){return b.runWithoutCleanup(function(){return k(a)},c)};b.runGeneratorWithCleanup=function(a,c){return b.runWithCleanup(function(){return k(a)},
c)};var q=Promise.resolve();b.displayAllocatedObjects=function(){console.log("List of created but not yet deallocated objects:");if(0==createdObjects.length)console.log("~~None~~ (nothing to deallocate)");else for(var a=0;a<createdObjects.length;a++)console.log(createdObjects[a]);return createdObjects.length};b.getAllocatedObjectsCount=function(){return createdObjects.length};b.startDeallocateStack=function(){stackCallCounter+=1;deallocStackCounter.push(createdObjects.length);unlockStackCounter.push(lockedObjects.length);
return Promise.resolve()};b.endDeallocateStack=function(){if(0===stackCallCounter)return console.log("Warning, no startDeallocateStack() instances remain."),Promise.resolve();var a=deallocStackCounter.pop(),c=unlockStackCounter.pop(),d=[],e=[];var f=0;if("undefined"!==typeof c&&0!==lockedObjects.length&&lockedObjects.length!==c)for(;lockedObjects.length>c;){var g=lockedObjects.pop();g=b.messageHandler.sendWithPromise(g.name+"."+g.unlocktype,{doc:g.id},this.userPriority);g=g.catch(function(a){console.log(a)});
d.push(g);f++}c=0;if("undefined"!==typeof a&&0!==createdObjects.length&&createdObjects.length!==a)for(;createdObjects.length>a;)f=createdObjects.pop(),f=b.messageHandler.sendWithPromise(f.name+".destroy",{auto_dealloc_obj:f.id},this.userPriority),f=f.catch(function(a){console.log(a)}),e.push(f),c++;--stackCallCounter;return Promise.all(d).then(function(){return Promise.all(e)})};b.getStackCount=function(){return Promise.resolve(stackCallCounter)};b.deallocateAllObjects=function(){if(0==createdObjects.length){console.log("~~None~~ (nothing to deallocate)");
var a=createPromiseCapability();a.resolve();return a.promise}a=[];for(deallocStackCounter=[];lockedObjects.length;)objToUnlock=lockedObjects.pop(),unlockPromise=b.messageHandler.sendWithPromise(objToUnlock.name+"."+objToUnlock.unlocktype,{doc:objToUnlock.id},this.userPriority),unlockPromise=unlockPromise.catch(function(a){console.log(a)}),a.push(unlockPromise);for(;createdObjects.length;){var c=createdObjects.pop();c=b.messageHandler.sendWithPromise(c.name+".destroy",{auto_dealloc_obj:c.id},this.userPriority);
c=c.catch(function(a){console.log(a)});a.push(c)}return Promise.all(a)};b.Redactor.redact=function(a,c,d,e,f){"undefined"===typeof d&&(d={});"undefined"===typeof d.redaction_overlay&&(d.redaction_overlay=!0);"undefined"===typeof d.positive_overlay_color?d.positive_overlay_color=void 0:"undefined"!==typeof d.positive_overlay_color.id&&(d.positive_overlay_color=d.positive_overlay_color.id);"undefined"===typeof d.negative_overlay_color?d.negative_overlay_color=void 0:"undefined"!==typeof d.negative_overlay_color.id&&
(d.negative_overlay_color=d.negative_overlay_color.id);"undefined"===typeof d.border&&(d.border=!0);"undefined"===typeof d.use_overlay_text&&(d.use_overlay_text=!0);"undefined"===typeof d.font?d.font=void 0:"undefined"!==typeof d.font.id&&(d.font=d.font.id);"undefined"===typeof d.min_font_size&&(d.min_font_size=2);"undefined"===typeof d.max_font_size&&(d.max_font_size=24);"undefined"===typeof d.text_color?d.text_color=void 0:"undefined"!==typeof d.text_color.id&&(d.text_color=d.text_color.id);"undefined"===
typeof d.horiz_text_alignment&&(d.horiz_text_alignment=-1);"undefined"===typeof d.vert_text_alignment&&(d.vert_text_alignment=1);"undefined"===typeof d.show_redacted_content_regions&&(d.show_redacted_content_regions=!1);"undefined"===typeof d.redacted_content_color?d.redacted_content_color=void 0:"undefined"!==typeof d.redacted_content_color.id&&(d.redacted_content_color=d.redacted_content_color.id);"undefined"===typeof e&&(e=!0);"undefined"===typeof f&&(f=!0);if(2>arguments.length||5<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'redact'. Expected 2 to 5 arguments. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean=true, boolean=true)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument of function 'redact'. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'redact' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean=true, boolean=true).");throw new TypeError("1st input argument '"+a+"' in function 'redact' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean=true, boolean=true).");}if(c instanceof Promise)throw new TypeError("Received a Promise object in 2nd input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof Array)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'redact' is of type '"+c.name+"'. Expected an array of 'Redaction' objects. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean, boolean).");throw new TypeError("2nd input argument '"+c+"' in function 'redact' is of type '"+typeof c+"'. Expected type 'Redaction'. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean, boolean).");}if(d instanceof Promise)throw new TypeError("Received a Promise object in 3rd input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");
if("object"!==typeof d)throw new TypeError("3nd input argument in function 'redact' is of type '"+d.name+"'. Expected a javascript object. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean, boolean).");if(e instanceof Promise)throw new TypeError("Received a Promise object in 4th input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'redact' is of type '"+
typeof e+"'. Expected type 'boolean'. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean=true, boolean=true).");if(f instanceof Promise)throw new TypeError("Received a Promise object in 5th input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'redact' is of type '"+typeof f+"'. Expected type 'boolean'. Function Signature: redact(PDFDoc, Array of Redaction Objects, Object, boolean=true, boolean=true).");
return b.messageHandler.sendWithPromise("redactorRedact",{doc:a.id,red_arr:c,appearance:d,ext_neg_mode:e,page_coord_sys:f},this.userPriority)};b.Highlights.prototype.getCurrentQuads=function(){return b.messageHandler.sendWithPromise("Highlights.getCurrentQuads",{hlts:this.id},this.userPriority).then(function(a){a=new Float64Array(a);for(var c=[],d,e=0;e<a.length;e+=8)d=b.QuadPoint(a[e+0],a[e+1],a[e+2],a[e+3],a[e+4],a[e+5],a[e+6],a[e+7]),c.push(d);return c})};b.TextSearch.prototype.run=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'run'. Expected 0 arguments. Function Signature: run()");return b.messageHandler.sendWithPromise("TextSearch.run",{ts:this.id},this.userPriority).then(function(a){a.highlights=new b.Highlights(a.highlights);if("0"==a.highlights.id)return a;createdObjects.push({name:a.highlights.name,id:a.highlights.id});return a})};b.Iterator.prototype.current=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'fillEncryptDict'. Expected 0 argument.");var a=this;this.yieldFunction="Iterator.current";var c=b.messageHandler.sendWithPromise("Iterator.current",{itr:this.id,type:this.type},this.userPriority);a.yieldFunction=void 0;"Int"!=this.type&&(c=c.then(function(c){return new b[a.type](c)}));return c};b.PDFDoc.prototype.getFileData=function(a){a({type:"id",id:this.id})};b.PDFDoc.prototype.getFile=function(a){return null};b.PDFDoc.createFromURL=function(a,c){if(1>arguments.length||
2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromURL'. Expected 1 to 2 arguments. Function Signature: createFromURL(string, Obj)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromURL' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromURL(string).");
return m(a,c).then(function(a){return b.PDFDoc.createFromBuffer(a)})};b.PDFDraw.prototype.exportStream=function(a,c,d){"undefined"==typeof c&&(c="PNG");"undefined"==typeof d&&(d=new b.Obj("0"));if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportStream'. Expected 1 to 3 arguments. Function Signature: exportStream(Page, string, Obj)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'exportStream' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: exportStream(Page, string, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'exportStream' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: exportStream(Page, string, Obj).");}if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'exportStream' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: exportStream(Page, string, Obj).");if(d instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'exportStream' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: exportStream(Page, string, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'exportStream' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: exportStream(Page, string, Obj).");}return b.messageHandler.sendWithPromise("PDFDraw.exportStream",{d:this.id,page:a.id,format:c,encoder_params:d.id},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};b.Element.prototype.getTextData=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextData'. Expected 0 arguments. Function Signature: getTextData()");return b.messageHandler.sendWithPromise("Element.getTextData",{e:this.id},this.userPriority)};b.Element.prototype.getPathData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPathData'. Expected 0 arguments. Function Signature: getPathData()");return b.messageHandler.sendWithPromise("Element.getPathData",
{e:this.id},this.userPriority).then(function(a){a.operators=new Uint8Array(a.operators);a.points=new Float64Array(a.points);return a})};b.PDFDoc.prototype.convertToXod=function(a){"undefined"===typeof a&&(a={});return b.messageHandler.sendWithPromise("PDFDoc.convertToXod",{doc:this.id,optionsObject:a},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};b.PDFDoc.prototype.convertToXodStream=function(a){"undefined"===typeof a&&(a={});return b.messageHandler.sendWithPromise("PDFDoc.convertToXodStream",
{doc:this.id,optionsObject:a},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.FilterReader.prototype.read=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'read'. Expected 1 argument. Function Signature: read(number).");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'read'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'read' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: read(number).");return b.messageHandler.sendWithPromise("FilterReader.read",{reader:this.id,buf_size:a},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};b.FilterReader.prototype.readAllIntoBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'readAllIntoBuffer'. Expected 0 arguments. Function Signature: readAllIntoBuffer()");
return b.messageHandler.sendWithPromise("FilterReader.readAllIntoBuffer",{reader:this.id},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};b.bitmapInfo=function(a){l(a,this)};b.PDFDraw.prototype.getBitmap=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBitmap'. Expected 3 arguments. Function Signature: getBitmap(Page, PixelFormat, boolean).");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getBitmap' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: getBitmap(Page, PixelFormat, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'getBitmap' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: getBitmap(Page, PixelFormat, boolean).");}if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getBitmap' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getBitmap(Page, PixelFormat, boolean).");if(d instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getBitmap' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: getBitmap(Page, PixelFormat, boolean).");
return b.messageHandler.sendWithPromise("PDFDraw.getBitmap",{d:this.id,page:a.id,pix_fmt:c,demult:d},this.userPriority).then(function(a){return"0"==a?null:new b.bitmapInfo(a)})};b.Matrix2D.create=function(a,c,d,e,f,g){void 0==a&&(a=0);void 0==c&&(c=0);void 0==d&&(d=0);void 0==e&&(e=0);void 0==f&&(f=0);void 0==g&&(g=0);if(6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'Matrix2D.create'. Expected 6 or fewer arguments. Function Signature: create(number, number, number, number, number, number).");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'Matrix2D.create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 2nd input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'Matrix2D.create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("Received a Promise object in 3rd input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'Matrix2D.create' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("Received a Promise object in 4th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'Matrix2D.create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");
if(f instanceof Promise)throw new TypeError("Received a Promise object in 5th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'Matrix2D.create' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(g instanceof Promise)throw new TypeError("Received a Promise object in 6th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'Matrix2D.create' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");var h=createPromiseCapability(),k=new b.Matrix2D({m_a:a,m_b:c,m_c:d,m_d:e,m_h:f,m_v:g});h.resolve(k);return h.promise};b.PDFDoc.prototype.getPDFDoc=function(){return b.messageHandler.sendWithPromise("GetPDFDoc",{doc:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.PDFDoc(a)})};b.TextExtractorLine.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getBBox'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=
this;this.yieldFunction="TextExtractorLine.getBBox";return b.messageHandler.sendWithPromise("TextExtractorLine.getBBox",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;return new b.Rect(c.result.x1,c.result.y1,c.result.x2,c.result.y2,c.result.mp_rect)})};b.TextExtractorLine.prototype.getQuad=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuad'. Expected 0 arguments. Function Signature: getQuad()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getQuad";return b.messageHandler.sendWithPromise("TextExtractorLine.getQuad",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;return new b.QuadPoint(c.result.p1x,c.result.p1y,c.result.p2x,
c.result.p2y,c.result.p3x,c.result.p3y,c.result.p4x,c.result.p4y)})};b.TextExtractorWord.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getBBox'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getBBox";return b.messageHandler.sendWithPromise("TextExtractorWord.getBBox",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;return new b.Rect(c.result.x1,c.result.y1,c.result.x2,c.result.y2,c.result.mp_rect)})};b.TextExtractorWord.prototype.getQuad=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuad'. Expected 0 arguments. Function Signature: getQuad()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getQuad";return b.messageHandler.sendWithPromise("TextExtractorWord.getQuad",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;return new b.QuadPoint(c.result.p1x,c.result.p1y,
c.result.p2x,c.result.p2y,c.result.p3x,c.result.p3y,c.result.p4x,c.result.p4y)})};b.TextExtractorWord.prototype.getGlyphQuad=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGlyphQuad'. Expected 1 argument. Function Signature: getGlyphQuad(number)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getGlyphQuad'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getGlyphQuad' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getGlyphQuad(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getGlyphQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="TextExtractorWord.getGlyphQuad";return b.messageHandler.sendWithPromise("TextExtractorWord.getGlyphQuad",
{tew:this,glyph_idx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;return new b.QuadPoint(a.result.p1x,a.result.p1y,a.result.p2x,a.result.p2y,a.result.p3x,a.result.p3y,a.result.p4x,a.result.p4y)})};b.TextExtractorStyle.prototype.getColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'getColor'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getColor";return b.messageHandler.sendWithPromise("TextExtractorStyle.getColor",{tes:this},this.userPriority).then(function(c){a.yieldFunction=void 0;return"0"==c?null:new b.ColorPt(c)})};b.TextExtractorWord.prototype.getString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getString'. Expected 0 arguments. Function Signature: getString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getString";return b.messageHandler.sendWithPromise("TextExtractorWord.getString",{tew:this},
this.userPriority).then(function(b){a.yieldFunction=void 0;return b})};b.SecurityHandler.prototype.changeUserPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordNonAscii'. Expected 1 argument. Function Signature: changeUserPasswordNonAscii(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'changeUserPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeUserPasswordNonAscii(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordNonAscii",{sh:this.id,password:a,pwd_length:a.length},this.userPriority)};b.SecurityHandler.prototype.changeMasterPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeMasterPasswordNonAscii'. Expected 1 argument. Function Signature: changeMasterPasswordNonAscii(string)");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'changeMasterPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeMasterPasswordNonAscii(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordNonAscii",{sh:this.id,
password:a,pwd_length:a.length},this.userPriority)};b.SecurityHandler.prototype.initPassword=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPassword'. Expected 1 argument. Function Signature: initPassword(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'initPassword'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'initPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initPassword(string).");return b.messageHandler.sendWithPromise("SecurityHandler.initPassword",{sh:this.id,password:a},this.userPriority)};b.SecurityHandler.prototype.initPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordNonAscii'. Expected 1 argument. Function Signature: initPasswordNonAscii(string)");if(a instanceof
Promise)throw new TypeError("Received a Promise object in 1st input argument 'initPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initPasswordNonAscii(string).");return b.messageHandler.sendWithPromise("SecurityHandler.initPasswordNonAscii",{sh:this.id,password:a,pwd_length:a.length},this.userPriority)};
b.Element.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");var a=this;this.yieldFunction="Element.getBBox";return b.messageHandler.sendWithPromise("Element.getBBox",{e:this.id},this.userPriority).then(function(c){a.yieldFunction=void 0;return new b.Rect(c)})};b.Matrix2D.prototype.mult=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mult'. Expected 2 arguments. Function Signature: mult(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'mult' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mult' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mult(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'mult' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'mult' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: mult(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'mult'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Matrix2D.mult",
{matrix:this,x:a,y:c},this.userPriority)};b.Obj.prototype.getAsPDFText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsPDFText'. Expected 0 arguments. Function Signature: getAsPDFText()");return b.messageHandler.sendWithPromise("Obj.getAsPDFText",{o:this.id},this.userPriority)};b.PDFDoc.prototype.initSecurityHandler=function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initSecurityHandler'. Expected at most 1 arguments. Function Signature: initSecurityHandler(void*)");
return b.messageHandler.sendWithPromise("PDFDoc.initSecurityHandler",{doc:this.id,custom_data:a},this.userPriority)};b.SDFDoc.prototype.initSecurityHandler=function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initSecurityHandler'. Expected at most 1 arguments. Function Signature: initSecurityHandler(void*)");return b.messageHandler.sendWithPromise("SDFDoc.initSecurityHandler",{doc:this.id,custom_data:a},this.userPriority)};
b.Image.createFromURL=function(a,c,d,e){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromURL'. Expected 2 to 4 arguments. Function Signature: createFromURL(PDFDoc, string, Obj)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromURL' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFromURL(PDFDoc, string, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromURL' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFromURL(PDFDoc, string, Obj).");}if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromURL' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromURL(PDFDoc, string, Obj).");if(d instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createFromURL' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: createFromURL(PDFDoc, string, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'createFromURL' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromURL(PDFDoc, string, Obj).");}return m(c,e).then(function(c){return b.Image.createFromMemory2(a,c,d)})};b.PDFDoc.prototype.addStdSignatureHandlerFromURL=function(a,b){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromURL'. Expected 2 arguments. Function Signature: addStdSignatureHandlerFromURL(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addStdSignatureHandlerFromURL' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromURL(string, string).");if(b instanceof Promise)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromURL' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'addStdSignatureHandlerFromURL' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromURL(string, string).");var c=this;return m(a).then(function(a){return c.addStdSignatureHandlerFromBufferWithDoc(a,b,c)})};b.PDFDoc.prototype.addStdSignatureHandlerFromBufferWithDoc=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromBuffer'. Expected 3 arguments. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc)");
if(d instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(a instanceof Promise)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromBuffer' is of type '"+
a.name+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");throw new TypeError("2nd input argument '"+a+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");return b.messageHandler.sendWithPromise("PDFDoc.addStdSignatureHandlerFromBuffer",{doc:d.id,pkcs12_buffer:a.buffer,pkcs12_pass:c},this.userPriority)};b.Filter.createFromMemory=function(a){g.isArrayBuffer(a)||(a=a.buffer);return b.messageHandler.sendWithPromise("filterCreateFromMemory",
{buf:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createURLFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURLFilter'. Expected 1 argument. Function Signature: createURLFilter(string)");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createURLFilter' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createURLFilter(string).");
return m(a).then(function(a){return b.Filter.createFromMemory(a)})};b.Filter.createFlateEncode=function(a,c,d){"undefined"===typeof a&&(a=new b.Filter("0"));"undefined"===typeof c&&(c=-1);"undefined"===typeof d&&(d=256);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFlateEncode'. Expected at most 3 arguments. Function Signature: createFlateEncode(Filter, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFlateEncode' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: createFlateEncode(Filter, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFlateEncode' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: createFlateEncode(Filter, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFlateEncode' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFlateEncode(Filter, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFlateEncode' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFlateEncode(Filter, number, number).");return b.messageHandler.sendWithPromise("Filter.createFlateEncode",{input_filter:a.id,compression_level:c,buf_sz:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.importPages=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'importPages'. Expected 1 to 2 arguments. Function Signature: importPages(Array, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'importPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof Array)){if("object"==typeof a)throw new TypeError("1st input argument in function 'importPages' is of type '"+a.name+"'. Expected type 'Array'. Function Signature: importPages(Array, boolean).");
throw new TypeError("1st input argument '"+a+"' in function 'importPages' is of type '"+typeof a+"'. Expected type 'Array'. Function Signature: importPages(Array, boolean).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'importPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'importPages' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: importPages(Array, boolean).");
a=a.map(function(a){return a.id});return b.messageHandler.sendWithPromise("PDFDoc.importPages",{doc:this.id,page_arr:a,import_bookmarks:c},this.userPriority).then(function(a){return a?a.map(function(a){return new b.Page(a)}):null})};b.SDFDoc.prototype.saveMemory=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveMemory'. Expected 2 arguments. Function Signature: saveMemory(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveMemory' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: saveMemory(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveMemory' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: saveMemory(number, string).");
return b.messageHandler.sendWithPromise("SDFDoc.saveMemory",{doc:this.id,flags:a,header:c},this.userPriority).then(function(a){return new Uint8Array(a)})};var t=b.PDFDoc.prototype.saveMemoryBuffer,A=b.PDFDoc.prototype.saveStream;b.PDFDoc.prototype.saveMemoryBuffer=function(a){var b=this;return Promise.resolve(b.documentCompletePromise).then(function(){return t.call(b,a)})};b.PDFDoc.prototype.saveStream=function(a){var b=this;return Promise.resolve(b.documentCompletePromise).then(function(){return A.call(b,
a)})};b.PDFACompliance.createFromUrl=function(a,c,d,e,f,g,k){if(2>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromUrl'. Expected 7 arguments. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop)");"undefined"===typeof d&&(d="");"undefined"===typeof e&&(e=b.PDFACompliance.Conformance.e_Level1B);"undefined"===typeof f&&(f=new Int32Array(0));"undefined"===typeof g&&(g=10);"undefined"===typeof k&&
(k=!1);if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromUrl' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromURL' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromURL(PDFDoc, string, Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromUrl' is of type '"+typeof d+
"'. Expected type 'string'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFromUrl' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if(g instanceof Promise)throw new TypeError("6th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if(k instanceof Promise)throw new TypeError("7th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");
return m(c).then(function(c){return b.PDFACompliance.createFromBuffer(a,c,d,e,f,g,k)})};b.PDFACompliance.createFromBuffer=function(a,c,d,e,f,k,l){"undefined"===typeof d&&(d="");"undefined"===typeof e&&(e=b.PDFACompliance.Conformance.e_Level1B);"undefined"===typeof f&&(f=new Int32Array(0));"undefined"===typeof k&&(k=10);"undefined"===typeof l&&(l=!1);var h=c;g.isArrayBuffer(h)||(h=h.buffer);if(2>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromBuffer'. Expected 7 arguments. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromBuffer' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!g.isArrayBuffer(h)){if("object"==typeof c&&c.name)throw new TypeError("2nd input argument in function 'createFromBuffer' is of type '"+c.name+"'. Expected ArrayBuffer|TypedArray. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromBuffer' is of type '"+typeof c+"'. Expected ArrayBuffer|TypedArray. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromBuffer' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFromBuffer' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(f.buffer)){if("object"==typeof f)throw new TypeError("5th input argument in function 'createFromBuffer' is of type '"+
f.name+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");throw new TypeError("5th input argument '"+f+"' in function 'createFromBuffer' is of type '"+typeof f+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");}if(k instanceof Promise)throw new TypeError("6th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof k)throw new TypeError("6th input argument '"+k+"' in function 'createFromBuffer' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(l instanceof Promise)throw new TypeError("7th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof l)throw new TypeError("7th input argument '"+l+"' in function 'createFromBuffer' is of type '"+
typeof l+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");return b.messageHandler.sendWithPromise("pdfaComplianceCreateFromBuffer",{convert:a,buf:h,password:d,conform:e,excep:f.buffer,max_ref_objs:k,first_stop:l},this.userPriority).then(function(a){a=new b.PDFACompliance(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.lock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'lock'. Expected 0 arguments. Function Signature: lock()");lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlock"});return b.messageHandler.sendWithPromise("PDFDoc.lock",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.unlock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlock'. Expected 0 arguments. Function Signature: unlock()");var a=this;return b.messageHandler.sendWithPromise("PDFDoc.unlock",
{doc:this.id},this.userPriority).then(function(){for(var b=-1,d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.PDFDoc.prototype.lockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lockRead'. Expected 0 arguments. Function Signature: lockRead()");
lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlockRead"});return b.messageHandler.sendWithPromise("PDFDoc.lockRead",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.unlockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlockRead'. Expected 0 arguments. Function Signature: unlockRead()");var a=this;return b.messageHandler.sendWithPromise("PDFDoc.unlockRead",{doc:this.id},this.userPriority).then(function(){for(var b=-1,
d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.PDFDoc.prototype.tryLock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLock'. Expected 0 arguments. Function Signature: tryLock()");
var a=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlock"});return b.messageHandler.sendWithPromise("PDFDoc.tryLock",{doc:this.id},this.userPriority).then(function(b){b||lockedObjects.splice(a,1)})};b.PDFDoc.prototype.timedLock=function(a){if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLock'. Expected at most 1 arguments. Function Signature: timedLock(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLock' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLock' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: timedLock(number).");var c=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlock"});return b.messageHandler.sendWithPromise("PDFDoc.timedLock",{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a||lockedObjects.splice(c,1)})};b.PDFDoc.prototype.tryLockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'tryLockRead'. Expected 0 arguments. Function Signature: tryLockRead()");var a=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlockRead"});return b.messageHandler.sendWithPromise("PDFDoc.tryLockRead",{doc:this.id},this.userPriority).then(function(b){b||lockedObjects.splice(a,1)})};b.PDFDoc.prototype.timedLockRead=function(a){if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLockRead'. Expected at most 1 arguments. Function Signature: timedLockRead(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLockRead' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLockRead' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: timedLockRead(number).");var c=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlockRead"});return b.messageHandler.sendWithPromise("PDFDoc.timedLockRead",
{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a||lockedObjects.splice(c,1)})};b.hasFullApi=!0;b.Optimizer.optimize=function(a,c){if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'Optimizer.optimize'. Expected 1 to 2 arguments. Function Signature: optimize(PDFDoc, OptimizerSettings)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'optimize' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: optimize(PDFDoc, OptimizerSettings).");throw new TypeError("1st input argument '"+a+"' in function 'optimize' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: optimize(PDFDoc, OptimizerSettings).");}if("undefined"===typeof c)c=new b.Optimizer.OptimizerSettings;
else{if(c instanceof Promise)throw new TypeError("2nd input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("object"!==typeof c)throw new TypeError("2nd input argument in function 'optimize' is of type '"+c.name+"'. Expected type 'Object'. Function Signature: optimize(PDFDoc, OptimizerSettings).");}return b.messageHandler.sendWithPromise("optimizerOptimize",{doc:a.id,color_image_settings:c.color_image_settings,grayscale_image_settings:c.grayscale_image_settings,
mono_image_settings:c.mono_image_settings,text_settings:c.text_settings,remove_custom:c.remove_custom},this.userPriority)};b.VerificationOptions.prototype.addTrustedCertificateFromURL=function(a,b){if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addTrustedCertificateFromURL'. Expected 1 to 2 arguments. Function Signature: addTrustedCertificateFromURL(string, Obj)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'addTrustedCertificateFromURL'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addTrustedCertificateFromURL' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addTrustedCertificateFromURL(string).");var c=this;return m(a,b).then(function(a){return c.addTrustedCertificate(a)})};var B=b.Convert.officeToPdfWithPath;b.Convert.officeToPdfWithPath=function(a,c){var d;return b.PDFDoc.create().then(function(a){d=a;return d.initSecurityHandler()}).then(function(){return B(d,a,c)}).then(function(){return d})};
var u=b.Convert.officeToPdfWithFilter;b.Convert.officeToPdfWithFilter=function(a,c){var d;return b.PDFDoc.create().then(function(a){d=a;return d.initSecurityHandler()}).then(function(){return u(d,a,c)}).then(function(){return d})};b.Convert.office2PDF=function(a,c){var d=null;d="string"===typeof a?b.Filter.createURLFilter(a):b.Filter.createFromMemory(a);return d.then(function(a){return b.Convert.officeToPdfWithFilter(a,c)})};b.Convert.office2PDFBuffer=function(a,c){return b.Convert.office2PDF(a,c).then(function(a){return a.saveMemoryBuffer(b.SDFDoc.SaveOptions.e_linearized)})};
b.PDFACompliance.createFromFile=function(a,c,d,e,f,k,l){"undefined"===typeof d&&(d="");"undefined"===typeof e&&(e=b.PDFACompliance.Conformance.e_Level1B);"undefined"===typeof f&&(f=new Int32Array(0));"undefined"===typeof k&&(k=10);"undefined"===typeof l&&(l=!1);if(2>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFile'. Expected 7 arguments. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromFile' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromFile' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromFile(boolean, string, string, number, number, number, number, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromFile' is of type '"+
typeof d+"'. Expected type 'string'. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFromFile' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!g.isArrayBuffer(f.buffer)){if("object"==typeof f)throw new TypeError("5th input argument in function 'createFromFile' is of type '"+f.name+"'. Expected typed array. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");throw new TypeError("5th input argument '"+f+"' in function 'createFromFile' is of type '"+
typeof f+"'. Expected typed array. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");}if(k instanceof Promise)throw new TypeError("6th input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof k)throw new TypeError("6th input argument '"+k+"' in function 'createFromFile' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");
if(l instanceof Promise)throw new TypeError("7th input argument in function 'createFromFile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof l)throw new TypeError("7th input argument '"+l+"' in function 'createFromFile' is of type '"+typeof l+"'. Expected type 'number'. Function Signature: createFromFile(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");return b.messageHandler.sendWithPromise("pdfaComplianceCreateFromFile",{convert:a,
file_path:c,password:d,conform:e,excep:f.buffer,max_ref_objs:k,first_stop:l},this.userPriority).then(function(a){a=new b.PDFACompliance(a);createdObjects.push({name:a.name,id:a.id});return a})};b.shutdown=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'Shutdown'. Expected 0 arguments. Function Signature: shutdown()");b.messageHandler.messageHandler.comObj.shutdown();p=!0};b.beginOperation=function(a){return Promise.resolve()};b.finishOperation=
function(){return Promise.resolve()};b.runWithCleanup=function(a,c){var d,e=!1;return q=q.then(function(){},function(){}).then(function(){return b.initialize(c)}).then(function(){e=!0;b.startDeallocateStack();return a()}).then(function(a){d=a;e=!1;return b.endDeallocateStack()}).then(function(){if(0<stackCallCounter)throw Error('Detected not yet deallocated stack. You may have called "PDFNet.startDeallocateStack()" somewhere without calling "PDFNet.endDeallocateStack()" afterwards.');return d}).catch(function(a){e&&
b.endDeallocateStack();throw a;})};b.runWithoutCleanup=function(a,c){return q=q.then(function(){},function(){}).then(function(){return b.initialize(c)}).then(function(){return a()}).then(function(a){return a})};g.PDFNet=b})("undefined"===typeof window?this:window);var _=require("underscore");
(function(g){function f(c,e,f,h){if(_.isUndefined(c))return null;var z;e=new Promise(function(b,e){a(function(){e(new WorkerError("The worker has encountered an error",g.utils.ie?"error.EmsWorkerErrorIE":"error.EmsWorkerError"))});var h={};m&&(h.workerHeapSize=m);l&&(h.pdfResourcePath=l);q&&(h.pdfAsmPath=q);if(!g.utils.isJSWorker){var k=g.location.href,v=k.lastIndexOf("#");v=k.lastIndexOf("/",v);-1!==v&&(h.parentUrl=k.substring(0,v+1))}z=new g.WorkerTransport(c,f,h);z.backendType=d.getCurrentPDFBackendType();
z.workerInitializedPromise.then(function(){b()},function(a){e(a)})});var v=new Promise(function(a,b){if(g.utils.isJSWorker&&g.jsworker&&g.jsworker.utils)g.jsworker.utils.getResourcesDir?g.jsworker.utils.getResourcesDir(function(c,d){c?b(c):a(d)}):g.jsworker.utils.getHTMLContentPath?g.jsworker.utils.getHTMLContentPath(function(c){c?(c.endsWith("/")||(c+="/"),a(c+"js/html5/pdf/")):b(new WorkerError("Couldn't fetch resource file path."))}):b(new WorkerError("Some functions required for fetching resources are not defined."));
else{var c=new XMLHttpRequest;c.open("GET",g.CoreControls.getPDFResourcePath()+"pdfnet.res",!0);c.responseType="arraybuffer";c.onload=function(){200===c.status?a(c.response):b(new WorkerError("Couldn't fetch resource file.","error.ResourceLoadError"))};c.onerror=function(){b(new WorkerError("Network error","error.ResourceLoadError"))};c.send(null)}});return Promise.all([e,v]).then(function(a){return g.utils.isJSWorker&&g.jsworker&&g.jsworker.utils?z.loadResourceFileFromPath(a[1],h):z.loadResourceFile(a[1],
h)}).then(function(){"undefined"!==typeof k&&z.setColorManagement(k);"undefined"!==typeof b&&z.setCustomFontURL(b);return z}).catch(function(a){a.message&&-1!==a.message.indexOf("Bad License Key")&&(a.userMessage="error.InvalidLicenseKey");throw a;})}var k,b,m,n;g.subzeroEnabled=g.utils.chromeHasSubzero;var p,l,q,t={},A,B=[],u=[],a=function(a){B.push(a);for(var b=0;b<u.length;++b)a(u[b])},c=_.throttle(function(a){var b=B.length;u.push(a);for(var c=0;c<b;++c)B[c](a)},100,{trailing:!1});g.CoreControls=
g.CoreControls||{};var d=g.CoreControls,e;d.getCurrentL=function(){return e};d.setL=function(a){e=a};d.getParentL=function(){return new Promise(function(a){try{var b=g.parent&&g.parent.WebViewer?g.parent.WebViewer.l():void 0;a(b)}catch(y){g.parent.postMessage("requestl","*"),$(g).on("message.l",function(b){b=b.originalEvent;"object"===typeof b.data&&"responsel"===b.data.type&&(a(b.data.value),$(g).off("message.l"))})}})};d.getLPromise=function(a){return a?Promise.resolve(a):g._trnDebugMode?Promise.resolve():
(""+g.location).split("").reverse().join("").match(/(moc\.nortfdp\.[^.]+\/\/|moc\.nortfdp\/\/)/)||g.jsworker?Promise.resolve(""):d.getParentL().then(function(a){return a?a:null})};d.isDemoLicenseString=function(a){if(!a||50>a.length)return!1;var b=a.lastIndexOf(":");return"demo:"!==a.slice(0,5)?!1:0<a.slice(5,b).match(/^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/).length};var h={};d.setWorkerTransportPromise=function(a){a.pdf&&(h.pdf=a.pdf);a.office&&(h.office=a.office)};
d.getWorkerTransportPromise=function(){return h};d.setColorManagement=function(a){k=a;d.getWorkerTransportPromise().pdf&&d.getWorkerTransportPromise().pdf.then(function(b){b.setColorManagement(a)})};d.setCustomFontURL=function(a){b=a;d.getWorkerTransportPromise().pdf&&d.getWorkerTransportPromise().pdf.then(function(a){a.setCustomFontURL(b)})};d.enableSubzero=function(a){g.utils.chromeHasSubzero&&(g.subzeroEnabled=a)};d.isSubzeroEnabled=function(){return g.subzeroEnabled};var r=g.PDFNet&&g.PDFNet.hasFullAPI;
d.enableFullPDF=function(a){r=a};d.isFullPDFEnabled=function(){return r};d.setPDFWorkerPath=function(a){a.lastIndexOf("/")!==a.length-1&&(a+="/");p=a};d.getPDFAsmPath=function(){return q||d.getWorkerPath()+"pdf/"+(d.isFullPDFEnabled()?"full/":"lean/")};d.setPDFAsmPath=function(a){a.lastIndexOf("/")!==a.length-1&&(a+="/");q=a};d.getPDFWorkerPath=function(){return p||d.getWorkerPath()+"pdf/"+(d.isFullPDFEnabled()?"full/":"lean/")};d.setPDFResourcePath=function(a){a.lastIndexOf("/")!==a.length-1&&(a+=
"/");l=a};d.getPDFResourcePath=function(){return l||d.getWorkerPath()+"pdf/"};d.forceBackendType=function(a){A=a};var D;d.setExternalPath=function(a){a.lastIndexOf("/")!==a.length-1&&(a+="/");D=a};d.getExternalPath=function(){return D};var E;d.setLocalWorkerPath=function(a,b){b||a.lastIndexOf("/")===a.length-1||(a+="/");E=a};d.getLocalWorkerPath=function(){return E||d.getWorkerPath()};d.setEmscriptenHeapSize=function(a){m=a};var w,x,v;d.getPostMessageTransfers=function(){return x};d.getDefaultBackendType=
function(){v||(v=new Promise(function(a){if(A)a(A);else if(g.utils.isJSWorker&&g.jsworker)a("jsworker");else if(g.utils.isPdfjs)a(void 0);else if(g.utils.isChrome){var b=!0,c=$('<embed name="simple_module" id="simple_module" width=0 height=0 src="'+g.CoreControls.getPDFResourcePath()+'SimpleWorker.nmf" type="application/x-pnacl" style="position:absolute" />'),d=c[0];d.addEventListener("error",function(){b&&(console.log("PNaClError: PNaCl failed to load. Falling back to Emscripten."),b=!1);a("ems")},
!0);$(document.body).prepend(c);var e=!1,f=function(b){e||(a(b),clearTimeout(k),c.remove(),e=!0)};if("undefined"===typeof d.postMessage)b&&(console.log("PNaClError: PNaCl seems to be disabled. Falling back to Emscripten."),b=!1),f("ems");else{var h=function(){b&&(console.log("PNaClError: PNaCl Timed out. Falling back to Emscripten."),b=!1);f("ems")};d.addEventListener("progress",function(){clearTimeout(k);k=setTimeout(h,5E3)});d.addEventListener("message",function(a){clearTimeout(k);"T"===a.data?
f("pnacl"):(console.log("PNaClError: PNaCl responded incorrectly. Falling back to Emscripten."),f("ems"))});d.postMessage("T");var k=setTimeout(h,5E3)}}else a("ems")}));return v};d.getCurrentPDFBackendType=function(){return t.backendType};var C=function(){t.loadingBackendTypeCapability||(t.loadingBackendTypeCapability=createPromiseCapability());return t.loadingBackendTypeCapability};d.getLoadingPDFBackendType=function(){return C().promise};d.preloadPDFWorker=function(a,b,c){d.getWorkerTransportPromise().pdf&&
a===d.getCurrentPDFBackendType()||(C().resolve(a),_.isUndefined(c)&&(c={}),g.utils.isJSWorker||(c.workerId="pdf_pnacl_module",c.pnaclWorkerPath=g.CoreControls.getPDFWorkerPath()+(g.subzeroEnabled?"PDFWorkerSubzero.nmf":"PDFWorker.nmf"),c.emsWorkerPath=g.CoreControls.getPDFResourcePath()+(m||l||q?"CommUtil/ResizableWorker.js":"CommUtil/PDFworker.js"),c.externalPath=g.CoreControls.getExternalPath()),c.workerState=t,p&&(c.pdfWorkerPath=p),w=d.preloadWorker(a,b,c))};d.preloadWorker=function(b,e,f){f=
f||{};var h;return new Promise(function(k,l){var m=function(a,b){k(a);f.workerState.backendType=b},v=function(b){a(function(){l(new WorkerError("The worker has encountered an error",g.utils.ie?"error.EmsWorkerErrorIE":"error.EmsWorkerError"))});var e=f.emsWorkerPath.toLowerCase().startsWith("http"),h=f.externalPath?"&externalPath="+encodeURIComponent(f.externalPath):"";if(e){e=g.CoreControls.getPDFWorkerPath().slice(0,-9);var k=new Worker(g.CoreControls.getLocalWorkerPath()+"CORSWorker.js#isfull="+
d.isFullPDFEnabled()+"&file="+encodeURIComponent(f.emsWorkerPath)+"&path="+encodeURIComponent(e))}else k=f.pdfWorkerPath?new Worker(f.emsWorkerPath+"?isfull="+d.isFullPDFEnabled()+"&pdfWorkerPath="+encodeURIComponent(f.pdfWorkerPath)+h):new Worker(f.emsWorkerPath+"?isfull="+d.isFullPDFEnabled()+h);k.onerror=c;x=!0;var m=function(a){"object"===typeof a.data&&"action"in a.data&&"workerLoaded"===a.data.action&&(b.workerLoadingProgress&&b.workerLoadingProgress(1),k.removeEventListener("message",m))};
k.addEventListener("message",m,!1);e=d.GetCachingLevel();d.setProgressiveTimeInternal(e?18E3/e:0);return k};if("jsworker"===b)g.utils.isJSWorker&&(h=g.jsworker.loadWorker()),x=!1,m(h,"jsworker");else if("pnacl"===b){_.isUndefined(f.useEmscriptenWhileLoading)&&(f.useEmscriptenWhileLoading=!d.isSubzeroEnabled());x=!1;var n=$('<embed name="'+f.workerId+'" id="'+f.workerId+'" width=0 height=0 src="'+f.pnaclWorkerPath+'" type="application/x-pnacl" style="position:absolute" />');$(document.body).prepend(n);
var C=function(a){a.lengthComputable&&(f.useEmscriptenWhileLoading?(h.removeEventListener("progress",C,!0),h.removeEventListener("loadend",p,!0),h.removeEventListener("crash",q,!0),h.removeEventListener("error",y,!0),m(v(e),"ems"),h.addEventListener("loadend",function(){x=!1;f.workerState.backendType="pnacl";e.pnaclComplete&&e.pnaclComplete(h)})):e.workerLoadingProgress&&e.workerLoadingProgress(a.loaded/a.total))},p=function(){e.workerLoadingProgress&&e.workerLoadingProgress(1);d.setProgressiveTimeInternal(1E3);
m(h,"pnacl")},q=function(){l(new WorkerError("The Worker has Crashed.","error.PNaClCrashError"))},y=function(){console.log("PNaClError: Main worker encountered an error. Falling back to Emscripten.");m(v(e),"ems")};h=n[0];h.addEventListener("progress",C,!0);h.addEventListener("loadend",p,!0);h.addEventListener("crash",q,!0);h.addEventListener("error",y,!0)}else"ems"===b&&m(v(e),"ems")})};d.resetWorker=function(){w=null;h.pdf=null;h.office=null;t.loadingBackendTypeCapability=null};d.isDemoMode=function(){return n};
d.initPDFWorkerTransports=function(a,b,c){w||d.getWorkerTransportPromise().pdf||d.preloadPDFWorker(a,b);d.getCurrentL()||d.setL(c);c=c||d.getCurrentL();if(d.getWorkerTransportPromise().pdf){if(n&&c&&!d.isDemoLicenseString(c))throw Error("PDFNet was already initialized in demo mode. For solution see pdftron.com/kb_demo_init. Note that calling initPDFWorkerTransports or creating WebViewer object will also call PDFNet.initialize so your license key should be used in all of these calls.");}else n=!c,
a=Promise.all([d.getLPromise(c),w]).then(function(a){n=!a[0]||d.isDemoLicenseString(a[0]);return f(a[1],b,x,a[0])}),d.setWorkerTransportPromise({pdf:a});return d.getWorkerTransportPromise().pdf};d.attachErrorCallback=a})("undefined"===typeof window?this:window);(function(g){function f(){for(var a=0;a<w.length;a++)w[a][0](w[a][1]);w=[];x=!1}function k(a,b){w.push([a,b]);x||(x=!0,E(f,0))}function b(a,b){function c(a){p(b,a)}function d(a){q(b,a)}try{a(c,d)}catch(y){d(y)}}function m(a){var b=a.owner,c=b.state_;b=b.data_;var d=a[c];a=a.then;if("function"===typeof d){c=h;try{b=d(b)}catch(y){q(a,y)}}n(a,b)||(c===h&&p(a,b),c===r&&q(a,b))}function n(a,b){var c;try{if(a===b)throw new TypeError("A promises callback cannot return that same promise.");if(b&&("function"===
typeof b||"object"===typeof b)){var d=b.then;if("function"===typeof d)return d.call(b,function(d){c||(c=!0,b!==d?p(a,d):l(a,d))},function(b){c||(c=!0,q(a,b))}),!0}}catch(y){return c||q(a,y),!0}return!1}function p(a,b){a!==b&&n(a,b)||l(a,b)}function l(a,b){a.state_===d&&(a.state_=e,a.data_=b,k(A,a))}function q(a,b){a.state_===d&&(a.state_=e,a.data_=b,k(B,a))}function t(a){var b=a.then_;a.then_=void 0;for(a=0;a<b.length;a++)m(b[a])}function A(a){a.state_=h;t(a)}function B(a){a.state_=r;t(a)}function u(a){if("function"!==
typeof a)throw new TypeError("Promise constructor takes a function argument");if(!1===this instanceof u)throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this.then_=[];b(a,this)}g.createPromiseCapability=function(){var a={},b=new u(function(b,c){a.resolve=b;a.reject=c});a.promise=b;return a};var a=g.Promise,c=a&&"resolve"in a&&"reject"in a&&"all"in a&&"race"in a&&function(){var b;new a(function(a){b=a});return"function"===
typeof b}();"undefined"!==typeof exports&&exports?(exports.Promise=c?a:u,exports.Polyfill=u):"function"==typeof define&&define.amd?define(function(){return c?a:u}):c||(g.Promise=u);var d="pending",e="sealed",h="fulfilled",r="rejected",D=function(){},E="undefined"!==typeof setImmediate?setImmediate:setTimeout,w=[],x;u.prototype={constructor:u,state_:d,then_:null,data_:void 0,then:function(a,b){a={owner:this,then:new this.constructor(D),fulfilled:a,rejected:b};this.state_===h||this.state_===r?k(m,a):
this.then_.push(a);return a.then},"catch":function(a){return this.then(null,a)}};u.all=function(a){if("[object Array]"!==Object.prototype.toString.call(a))throw new TypeError("You must pass an array to Promise.all().");return new this(function(b,c){function d(a){f++;return function(c){e[a]=c;--f||b(e)}}for(var e=[],f=0,g=0,h;g<a.length;g++)(h=a[g])&&"function"===typeof h.then?h.then(d(g),c):e[g]=h;f||b(e)})};u.race=function(a){if("[object Array]"!==Object.prototype.toString.call(a))throw new TypeError("You must pass an array to Promise.race().");
return new this(function(b,c){for(var d=0,e;d<a.length;d++)(e=a[d])&&"function"===typeof e.then?e.then(b,c):b(e)})};u.resolve=function(a){return a&&"object"===typeof a&&a.constructor===this?a:new this(function(b){b(a)})};u.reject=function(a){return new this(function(b,c){c(a)})}})("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this);(function(g){var f=function(f,b){var g=Error.apply(this,arguments);g.name=this.name="WorkerError";this.stack=g.stack;this.message=g.message;this.userMessage=b};f.prototype=Object.create(Error.prototype,{constructor:{value:f,writable:!0,configurable:!0}});g.WorkerError=f})("undefined"===typeof window?this:window);this.DOWNLOADER_CHUNK_MAX=50;var globalScope=this;
globalScope.WorkerTransport=function(){function g(f,g,b){var k=this;this.progressCallback=null;this.pageCache=[];this.pagePromises=[];this.eventListeners={};this.earlyEvents={};this.downloadInfoCapability=createPromiseCapability();this.workerInitializedPromise=new Promise(function(m,p){if(globalScope.utils.isJSWorker||"undefined"!==typeof Worker)try{var l=new globalScope.MessageHandler("main",f);l.postMessageTransfers=g;k.messageHandler=l;l.on("test",function(b){b&&b.supportTypedArray?(b.supportTransfers||
(l.postMessageTransfers=!1),k.setupMessageHandler(l),m()):p(new globalScope.WorkerError("Typed arrays are not supported. Can't start a worker.","error.WorkerInitError"));globalScope.utils.isJSWorker&&setTimeout(function(){},0)});var n={array:new Uint8Array([255])};try{n.options=b?b:{},n.options.chunkMax=globalScope.DOWNLOADER_CHUNK_MAX,l.send("test",n)}catch(t){globalScope.utils.log("Cannot use postMessage transfers"),l.postMessageTransfers=!1,n.array[0]=0,l.send("test",n)}return}catch(t){p(new globalScope.WorkerError("The worker has been disabled. This may be the result of using PNaCl on an unsupported browser.",
"error.PNaClSupportError"))}p(new globalScope.WorkerError("Can't start a worker","error.WorkerInitError"))})}g.prototype={renderPriority:0,textPriority:1,userRequestPriority:2,immediatePriority:3,setupMessageHandler:function(f){this.messageHandler=f;f.on("event",this.runEventListener,this)},runEventListener:function(f){var g=f.docId;if(this.eventListeners[g])this.eventListeners[g](f);else g in this.earlyEvents?this.earlyEvents[g].push(f):this.earlyEvents[g]=[f]},addEventListener:function(f,g){if(this.eventListeners[f])globalScope.utils.error("Event listener already set for "+
f);else if(this.eventListeners[f]=g,f in this.earlyEvents){g=this.earlyEvents[f];for(var b=0;b<g.length;++b)this.runEventListener(g[b]);delete this.earlyEvents[f]}},clearEventListener:function(f){delete this.eventListeners[f]},fetchDocument:function(f){return this.messageHandler.sendWithPromise("NewDoc",f,this.immediatePriority)},loadResourceFile:function(f,g){f={array:f,workerPath:globalScope.CoreControls.getWorkerPath()};g&&(f.l=g);return this.messageHandler.sendWithPromise("LoadRes",f,this.immediatePriority)},
loadResourceFileFromPath:function(f,g){f={path:f};g&&(f.l=g);return this.messageHandler.sendWithPromise("LoadResFromPath",f,this.immediatePriority)},getCanvas:function(f,g,b,m,n,p,l,q){return"undefined"===typeof q?this.messageHandler.sendWithPromiseReturnId("GetCanvas",{docId:f,pageIndex:g,width:b,height:m,rotation:n,layers:p,overprintMode:l},this.renderPriority):this.messageHandler.sendWithPromiseReturnId("GetCanvasPartial",{docId:f,pageIndex:g,width:b,height:m,rotation:n,layers:p,bbox:[q.x1,q.y1,
q.x2,q.y2],overprintMode:l},this.renderPriority)},getCanvasFilepath:function(f,g,b,m,n,p,l,q,t){return"undefined"===typeof q?this.messageHandler.sendWithPromiseReturnId("GetCanvas",{docId:f,pageIndex:g,width:b,height:m,rotation:n,layers:p,filePath:t,overprintMode:l},this.renderPriority):this.messageHandler.sendWithPromiseReturnId("GetCanvasPartial",{docId:f,pageIndex:g,width:b,height:m,rotation:n,layers:p,bbox:[q.x1,q.y1,q.x2,q.y2],filePath:t,overprintMode:l},this.renderPriority)},getCanvasProgressive:function(f,
g){return"undefined"!==typeof g?this.messageHandler.sendWithPromise("GetCanvasProgressive",{callbackId:f,filePath:g},this.renderPriority):this.messageHandler.sendWithPromise("GetCanvasProgressive",{callbackId:f},this.renderPriority)},getDocumentThumbnail:function(f){return this.messageHandler.sendWithPromise("ThumbCacheGet",{filePath:f},this.renderPriority)},cancelAllDocumentThumbnailRequests:function(f){return this.messageHandler.send("ThumbCacheCancelAll")},loadTextData:function(f,g){return this.messageHandler.sendWithPromise("LoadText",
{docId:f,pageIndex:g},this.textPriority)},loadBookmarks:function(f){return this.messageHandler.sendWithPromise("LoadBookmarks",{docId:f},this.immediatePriority)},loadAnnotations:function(f,g){f={docId:f};g&&(f.pages=g);return this.messageHandler.sendWithPromise("LoadAnnotations",f,this.immediatePriority)},mergeXFDF:function(f,g){return this.messageHandler.sendWithPromise("MergeXFDF",{docId:f,xfdf:g},this.userRequestPriority)},saveFile:function(f){return this.messageHandler.sendWithPromise("SaveDoc",
f,this.userRequestPriority)},saveDocFromFixedElements:function(f){return this.messageHandler.sendWithPromise("SaveDocFromFixedElements",f,this.userRequestPriority)},saveFileAs:function(f){return this.messageHandler.sendWithPromise("SaveDocAs",f,this.userRequestPriority)},printFile:function(f,g){console.log("[WorkerTransport.printFile] printOptions "+g);return this.messageHandler.sendWithPromise("PrintDoc",{docId:f,printOptions:g},this.userRequestPriority)},updatePassword:function(f,g){return this.messageHandler.sendWithPromise("UpdatePassword",
{docId:f,password:g},this.immediatePriority)},insertBlankPages:function(f,g,b,m){return this.messageHandler.sendWithPromise("InsertBlankPages",{docId:f,width:b,height:m,pageArray:g},this.userRequestPriority)},insertPages:function(f,g,b,m,n){return this.messageHandler.sendWithPromise("InsertPages",{docId:f,doc:g,pageArray:b,destPos:m,insertBookmarks:n},this.userRequestPriority)},movePages:function(f,g,b){return this.messageHandler.sendWithPromise("MovePages",{docId:f,pageArray:g,destPos:b},this.userRequestPriority)},
removePages:function(f,g){return this.messageHandler.sendWithPromise("RemovePages",{docId:f,pageArray:g},this.userRequestPriority)},rotatePages:function(f,g,b){return this.messageHandler.sendWithPromise("RotatePages",{docId:f,pageArray:g,rotation:b},this.userRequestPriority)},getPDFDoc:function(f){return this.messageHandler.sendWithPromise("GetPDFDoc",{docId:f},this.userRequestPriority)},extractPages:function(f,g,b,m){return this.messageHandler.sendWithPromise("ExtractPages",{docId:f,pageArray:g,
xfdfString:b,watermarks:m},this.userRequestPriority)},cropPages:function(f,g,b,m,n,p){return this.messageHandler.sendWithPromise("CropPages",{docId:f,pageArray:g,topMargin:b,botMargin:m,leftMargin:n,rightMargin:p},this.userRequestPriority)},sendDownloaderHint:function(f,g){return this.messageHandler.sendWithPromise("DownloaderHint",{docId:f,hint:g},this.userRequestPriority)},isLinearizationValid:function(f){return this.messageHandler.sendWithPromise("IsLinearized",{docId:f},this.userRequestPriority)},
getLayersArray:function(f){return this.messageHandler.sendWithPromise("GetLayers",{docId:f},this.userRequestPriority)},extractPDFNetLayersContext:function(f,g){return this.messageHandler.sendWithPromise("ExtractPDFNetLayersContext",{docId:f,layers:g},this.userRequestPriority)},getAnnotationAppearance:function(f){return this.messageHandler.sendWithPromise("RenderAnnotAppearance",f,this.userRequestPriority)},getNextId:function(){return this.messageHandler.getNextId()},deleteDocument:function(f){return this.messageHandler.sendWithPromise("DeleteDocument",
{docId:f},this.userRequestPriority)},setColorManagement:function(f){return this.messageHandler.sendWithPromise("SetColorManagement",{value:f},this.immediatePriority)},setCustomFontURL:function(f){return this.messageHandler.sendWithPromise("SetCustomFontURL",{fontURL:f},this.immediatePriority)},getWorkerType:function(){return this.messageHandler.comObj&&"function"===typeof this.messageHandler.comObj.getWorkerType?this.messageHandler.comObj.getWorkerType():globalScope.IsWorker(this.messageHandler.comObj)?
"ems":"pnacl"},requirePage:function(f,g){return this.messageHandler.sendWithPromise("RequirePage",{docId:f,pageNum:g},this.immediatePriority)},sendWithPromise:function(f,g,b){return this.messageHandler.sendWithPromise(f,g,b)},cancelRequest:function(f){this.messageHandler.cancelPromise(f)},getAppearanceDocument:function(f,g){return this.messageHandler.sendWithPromise("GetAnnotationAppearances",{docId:f,references:g},this.textPriority)}};return g}();(function(g){var f=g._trnDebugMode||g._trnLogMode,k=g._logFiltersEnabled?g._logFiltersEnabled:{};g.utils=g.utils?g.utils:{};g.utils.warn=function(b,g){g||(g=b,b="default");f&&k[b]&&console.warn(b+": "+g)};g.utils.log=function(b,g){g||(g=b,b="default");f&&k[b]&&console.log(b+": "+g)};g.utils.error=function(b){f&&console.error(b);throw Error(b);};g.info=function(b,f){g.utils.log(b,f)};g.warn=function(b,f){g.utils.warn(b,f)};g.error=function(b){g.utils.error(b)}})("undefined"===typeof window?this:window);
